/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        byte[] byteArray36 = pcxImageParser17.getIccProfileBytes(byteSource30, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser0.getIccProfileBytes(byteSource16, pcxImagingParameters35);
        java.io.PrintWriter printWriter38 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean40 = pcxImageParser0.dumpImageFile(printWriter38, byteSource39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(byteArray37);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder25 = pcxImageParser0.getByteOrder();
        java.io.File file26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(file26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNotNull(byteOrder25);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        java.lang.String str10 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser0.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser0.getMetadata(byteSource13);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNull(imageMetadata14);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        java.lang.String str26 = pcxImageParser0.getName();
        java.io.File file27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser34.getMetadata(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser38.getMetadata(byteSource42);
        boolean boolean45 = pcxImageParser38.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser34.getMetadata(byteSource37, pcxImagingParameters46);
        byte[] byteArray48 = pcxImageParser28.getIccProfileBytes(byteSource33, pcxImagingParameters46);
        java.lang.String str49 = pcxImageParser28.getDefaultExtension();
        java.lang.String str50 = pcxImageParser28.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat51 = null;
        boolean boolean52 = pcxImageParser28.canAcceptType(imageFormat51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser28.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser28.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage56 = pcxImageParser0.getBufferedImage(file27, pcxImagingParameters55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "pcx" + "'", str49, "pcx");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "pcx" + "'", str50, "pcx");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        boolean boolean21 = pcxImageParser0.canAcceptExtension("hi!");
        java.io.File file22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        java.lang.String str35 = pcxImageParser31.getName();
        java.lang.String str36 = pcxImageParser31.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser31.getMetadata(byteSource37, pcxImagingParameters42);
        java.lang.String str44 = pcxImageParser31.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser31.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = null;
        byte[] byteArray51 = pcxImageParser48.getIccProfileBytes(byteSource49, pcxImagingParameters50);
        java.lang.String str52 = pcxImageParser48.getName();
        java.lang.String str53 = pcxImageParser48.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder56 = pcxImageParser55.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser55.getFormatCompliance(byteSource57);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser55.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser48.getMetadata(byteSource54, pcxImagingParameters59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = null;
        byte[] byteArray65 = pcxImageParser62.getIccProfileBytes(byteSource63, pcxImagingParameters64);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser62.getDefaultParameters();
        byte[] byteArray67 = pcxImageParser48.getIccProfileBytes(byteSource61, pcxImagingParameters66);
        byte[] byteArray68 = pcxImageParser31.getIccProfileBytes(byteSource47, pcxImagingParameters66);
        byte[] byteArray69 = pcxImageParser23.getIccProfileBytes(byteSource30, pcxImagingParameters66);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo70 = pcxImageParser0.getImageInfo(file22, pcxImagingParameters66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Pcx-Custom" + "'", str52, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Pcx-Custom" + "'", str53, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNull(byteArray68);
        org.junit.Assert.assertNull(byteArray69);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.lang.String str2 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList4 = pcxImageParser0.getAllBufferedImages(byteSource3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str2 + "' != '" + "Pcx-Custom" + "'", str2, "Pcx-Custom");
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        byte[] byteArray30 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        java.lang.String str41 = pcxImageParser32.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser11.getMetadata(byteSource31, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser0.getIccProfileBytes(byteSource10, pcxImagingParameters42);
        org.apache.commons.imaging.ImageFormat imageFormat45 = null;
        boolean boolean46 = pcxImageParser0.canAcceptType(imageFormat45);
        java.io.File file47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = null;
        byte[] byteArray51 = pcxImageParser48.getIccProfileBytes(byteSource49, pcxImagingParameters50);
        java.lang.String str52 = pcxImageParser48.getName();
        java.lang.String str53 = pcxImageParser48.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder56 = pcxImageParser55.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser55.getFormatCompliance(byteSource57);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser55.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser48.getMetadata(byteSource54, pcxImagingParameters59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = null;
        byte[] byteArray65 = pcxImageParser62.getIccProfileBytes(byteSource63, pcxImagingParameters64);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser62.getDefaultParameters();
        byte[] byteArray67 = pcxImageParser48.getIccProfileBytes(byteSource61, pcxImagingParameters66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser69 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder70 = pcxImageParser69.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance72 = pcxImageParser69.getFormatCompliance(byteSource71);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = pcxImageParser69.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat74 = null;
        boolean boolean75 = pcxImageParser69.canAcceptType(imageFormat74);
        java.lang.String str76 = pcxImageParser69.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters77 = pcxImageParser69.getDefaultParameters();
        java.lang.String str78 = pcxImageParser69.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser69.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser48.getMetadata(byteSource68, pcxImagingParameters79);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser0.getMetadata(file47, pcxImagingParameters79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Pcx-Custom" + "'", str52, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Pcx-Custom" + "'", str53, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNull(formatCompliance72);
        org.junit.Assert.assertNotNull(pcxImagingParameters73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "pcx" + "'", str76, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Pcx-Custom" + "'", str78, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
        org.junit.Assert.assertNull(imageMetadata80);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        java.io.File file28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser0.getFormatCompliance(file28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(formatCompliance27);
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        java.lang.String str12 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str15 = pcxImageParser14.getName();
        java.nio.ByteOrder byteOrder16 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat17 = null;
        boolean boolean18 = pcxImageParser14.canAcceptType(imageFormat17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser29.getMetadata(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser33.getMetadata(byteSource37);
        boolean boolean40 = pcxImageParser33.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser29.getMetadata(byteSource32, pcxImagingParameters41);
        byte[] byteArray43 = pcxImageParser23.getIccProfileBytes(byteSource28, pcxImagingParameters41);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser20.getMetadata(byteSource22, pcxImagingParameters41);
        byte[] byteArray45 = pcxImageParser14.getIccProfileBytes(byteSource19, pcxImagingParameters41);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension46 = pcxImageParser0.getImageSize(byteSource13, pcxImagingParameters41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(byteArray45);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        java.io.File file3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = null;
        byte[] byteArray7 = pcxImageParser4.getIccProfileBytes(byteSource5, pcxImagingParameters6);
        java.nio.ByteOrder byteOrder8 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat15 = null;
        boolean boolean16 = pcxImageParser10.canAcceptType(imageFormat15);
        java.lang.String str17 = pcxImageParser10.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser4.getMetadata(byteSource9, pcxImagingParameters18);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(file3, pcxImagingParameters18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "pcx" + "'", str17, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getDefaultExtension();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser16.getMetadata(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser16.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat26 = null;
        boolean boolean27 = pcxImageParser16.canAcceptType(imageFormat26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser16.getDefaultParameters();
        byte[] byteArray29 = pcxImageParser9.getIccProfileBytes(byteSource15, pcxImagingParameters28);
        byte[] byteArray30 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters28);
        java.io.File file31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        java.lang.String str41 = pcxImageParser32.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser32.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo43 = pcxImageParser0.getImageInfo(file31, pcxImagingParameters42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        boolean boolean10 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        java.lang.String str17 = pcxImageParser12.getName();
        java.lang.String str18 = pcxImageParser12.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser12.canAcceptType(imageFormat19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser28.getMetadata(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser32.getMetadata(byteSource36);
        boolean boolean39 = pcxImageParser32.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser28.getMetadata(byteSource31, pcxImagingParameters40);
        byte[] byteArray42 = pcxImageParser22.getIccProfileBytes(byteSource27, pcxImagingParameters40);
        java.lang.String str43 = pcxImageParser22.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = null;
        byte[] byteArray48 = pcxImageParser45.getIccProfileBytes(byteSource46, pcxImagingParameters47);
        java.lang.String str49 = pcxImageParser45.getName();
        java.lang.String str50 = pcxImageParser45.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder53 = pcxImageParser52.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser52.getFormatCompliance(byteSource54);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser45.getMetadata(byteSource51, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser59.getMetadata(byteSource60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder64 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser63.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser63.getMetadata(byteSource67);
        boolean boolean70 = pcxImageParser63.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser59.getMetadata(byteSource62, pcxImagingParameters71);
        byte[] byteArray73 = pcxImageParser45.getIccProfileBytes(byteSource58, pcxImagingParameters71);
        boolean boolean75 = pcxImageParser45.canAcceptExtension("pcx");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = pcxImageParser45.getDefaultParameters();
        byte[] byteArray77 = pcxImageParser22.getIccProfileBytes(byteSource44, pcxImagingParameters76);
        byte[] byteArray78 = pcxImageParser12.getIccProfileBytes(byteSource21, pcxImagingParameters76);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage79 = pcxImageParser0.getBufferedImage(byteSource11, pcxImagingParameters76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "pcx" + "'", str18, "pcx");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Pcx-Custom" + "'", str49, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertNull(imageMetadata72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters76);
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertNull(byteArray78);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.lang.Class<?> wildcardClass9 = pcxImagingParameters8.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        java.lang.String str33 = pcxImageParser0.getName();
        java.io.File file34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser0.getFormatCompliance(file34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        byte[] byteArray36 = pcxImageParser17.getIccProfileBytes(byteSource30, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser0.getIccProfileBytes(byteSource16, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser0.getFormatCompliance(byteSource38);
        java.io.File file40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = null;
        byte[] byteArray44 = pcxImageParser41.getIccProfileBytes(byteSource42, pcxImagingParameters43);
        java.lang.String str45 = pcxImageParser41.getName();
        boolean boolean47 = pcxImageParser41.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser49.getDefaultParameters();
        byte[] byteArray55 = pcxImageParser41.getIccProfileBytes(byteSource48, pcxImagingParameters54);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray56 = pcxImageParser0.getIccProfileBytes(file40, pcxImagingParameters54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(byteArray55);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser0.getFormatCompliance(byteSource17);
        java.lang.String str19 = pcxImageParser0.getName();
        java.lang.String str20 = pcxImageParser0.getName();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        java.nio.ByteOrder byteOrder33 = pcxImageParser0.getByteOrder();
        java.io.File file34 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str35 = pcxImageParser0.dumpImageFile(file34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder33);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser21.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser21.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser32.getMetadata(byteSource38, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser46.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser50.getMetadata(byteSource54);
        boolean boolean57 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser46.getMetadata(byteSource49, pcxImagingParameters58);
        byte[] byteArray60 = pcxImageParser32.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser32.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = null;
        byte[] byteArray67 = pcxImageParser64.getIccProfileBytes(byteSource65, pcxImagingParameters66);
        java.nio.ByteOrder byteOrder68 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser64.getMetadata(byteSource69, pcxImagingParameters78);
        byte[] byteArray80 = pcxImageParser32.getIccProfileBytes(byteSource63, pcxImagingParameters78);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser21.getMetadata(byteSource31, pcxImagingParameters78);
        byte[] byteArray82 = pcxImageParser8.getIccProfileBytes(byteSource20, pcxImagingParameters78);
        byte[] byteArray83 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters78);
        java.io.File file84 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance85 = pcxImageParser0.getFormatCompliance(file84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNull(byteArray82);
        org.junit.Assert.assertNull(byteArray83);
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser0.getMetadata(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource23);
        java.io.File file25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str27 = pcxImageParser26.getName();
        org.apache.commons.imaging.ImageFormat imageFormat28 = null;
        boolean boolean29 = pcxImageParser26.canAcceptType(imageFormat28);
        org.apache.commons.imaging.ImageFormat imageFormat30 = null;
        boolean boolean31 = pcxImageParser26.canAcceptType(imageFormat30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.ImageFormat imageFormat34 = null;
        boolean boolean35 = pcxImageParser26.canAcceptType(imageFormat34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = null;
        byte[] byteArray40 = pcxImageParser37.getIccProfileBytes(byteSource38, pcxImagingParameters39);
        java.lang.String str41 = pcxImageParser37.getName();
        java.lang.String str42 = pcxImageParser37.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser37.getMetadata(byteSource43, pcxImagingParameters48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser51.getMetadata(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder56 = pcxImageParser55.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser55.getFormatCompliance(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser55.getMetadata(byteSource59);
        boolean boolean62 = pcxImageParser55.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser55.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser51.getMetadata(byteSource54, pcxImagingParameters63);
        byte[] byteArray65 = pcxImageParser37.getIccProfileBytes(byteSource50, pcxImagingParameters63);
        java.nio.ByteOrder byteOrder66 = pcxImageParser37.getByteOrder();
        java.lang.String str67 = pcxImageParser37.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance69 = pcxImageParser37.getFormatCompliance(byteSource68);
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser71.getMetadata(byteSource72);
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser75 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder76 = pcxImageParser75.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance78 = pcxImageParser75.getFormatCompliance(byteSource77);
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser75.getMetadata(byteSource79);
        boolean boolean82 = pcxImageParser75.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = pcxImageParser75.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata84 = pcxImageParser71.getMetadata(byteSource74, pcxImagingParameters83);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata85 = pcxImageParser37.getMetadata(byteSource70, pcxImagingParameters83);
        byte[] byteArray86 = pcxImageParser26.getIccProfileBytes(byteSource36, pcxImagingParameters83);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension87 = pcxImageParser0.getImageSize(file25, pcxImagingParameters83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "pcx" + "'", str67, "pcx");
        org.junit.Assert.assertNull(formatCompliance69);
        org.junit.Assert.assertNull(imageMetadata73);
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNull(formatCompliance78);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters83);
        org.junit.Assert.assertNull(imageMetadata84);
        org.junit.Assert.assertNull(imageMetadata85);
        org.junit.Assert.assertNull(byteArray86);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.nio.ByteOrder byteOrder13 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat20 = null;
        boolean boolean21 = pcxImageParser15.canAcceptType(imageFormat20);
        java.lang.String str22 = pcxImageParser15.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser9.getMetadata(byteSource14, pcxImagingParameters23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser9.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        java.lang.String str33 = pcxImageParser28.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser28.getMetadata(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser28.getDefaultExtension();
        boolean boolean39 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser9.getMetadata(byteSource27, pcxImagingParameters40);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo42 = pcxImageParser0.getImageInfo(byteSource8, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "pcx" + "'", str33, "pcx");
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "pcx" + "'", str37, "pcx");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        java.nio.ByteOrder byteOrder24 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = null;
        byte[] byteArray29 = pcxImageParser26.getIccProfileBytes(byteSource27, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser26.getName();
        java.lang.String str31 = pcxImageParser26.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser26.getMetadata(byteSource32, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser26.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        org.apache.commons.imaging.ImageFormat imageFormat55 = null;
        boolean boolean56 = pcxImageParser26.canAcceptType(imageFormat55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat63 = null;
        boolean boolean64 = pcxImageParser58.canAcceptType(imageFormat63);
        java.lang.String str65 = pcxImageParser58.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser58.getDefaultParameters();
        byte[] byteArray67 = pcxImageParser26.getIccProfileBytes(byteSource57, pcxImagingParameters66);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser0.getMetadata(byteSource25, pcxImagingParameters66);
        java.lang.String str69 = pcxImageParser0.getDefaultExtension();
        java.lang.String str70 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser72 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder73 = pcxImageParser72.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance75 = pcxImageParser72.getFormatCompliance(byteSource74);
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser72.getMetadata(byteSource76);
        java.nio.ByteOrder byteOrder78 = pcxImageParser72.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser72.getMetadata(byteSource79);
        java.nio.ByteOrder byteOrder81 = pcxImageParser72.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser83 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder84 = pcxImageParser83.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource85 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance86 = pcxImageParser83.getFormatCompliance(byteSource85);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters87 = pcxImageParser83.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource88 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser89 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource90 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters91 = null;
        byte[] byteArray92 = pcxImageParser89.getIccProfileBytes(byteSource90, pcxImagingParameters91);
        java.lang.String str93 = pcxImageParser89.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters94 = pcxImageParser89.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata95 = pcxImageParser83.getMetadata(byteSource88, pcxImagingParameters94);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters96 = pcxImageParser83.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata97 = pcxImageParser72.getMetadata(byteSource82, pcxImagingParameters96);
        byte[] byteArray98 = pcxImageParser0.getIccProfileBytes(byteSource71, pcxImagingParameters96);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "pcx" + "'", str65, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "pcx" + "'", str69, "pcx");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "Pcx-Custom" + "'", str70, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder73);
        org.junit.Assert.assertNull(formatCompliance75);
        org.junit.Assert.assertNull(imageMetadata77);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertNotNull(byteOrder81);
        org.junit.Assert.assertNotNull(byteOrder84);
        org.junit.Assert.assertNull(formatCompliance86);
        org.junit.Assert.assertNotNull(pcxImagingParameters87);
        org.junit.Assert.assertNull(byteArray92);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "pcx" + "'", str93, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters94);
        org.junit.Assert.assertNull(imageMetadata95);
        org.junit.Assert.assertNotNull(pcxImagingParameters96);
        org.junit.Assert.assertNull(imageMetadata97);
        org.junit.Assert.assertNull(byteArray98);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        java.io.File file12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension13 = pcxImageParser0.getImageSize(file12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        boolean boolean10 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser0.canAcceptType(imageFormat11);
        java.io.File file13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension14 = pcxImageParser0.getImageSize(file13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        boolean boolean11 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser13.getMetadata(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser13.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = null;
        byte[] byteArray27 = pcxImageParser24.getIccProfileBytes(byteSource25, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser24.getName();
        java.lang.String str29 = pcxImageParser24.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser24.getMetadata(byteSource30, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser38.getMetadata(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser42.getMetadata(byteSource46);
        boolean boolean49 = pcxImageParser42.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser38.getMetadata(byteSource41, pcxImagingParameters50);
        byte[] byteArray52 = pcxImageParser24.getIccProfileBytes(byteSource37, pcxImagingParameters50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser24.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = null;
        byte[] byteArray59 = pcxImageParser56.getIccProfileBytes(byteSource57, pcxImagingParameters58);
        java.nio.ByteOrder byteOrder60 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder63 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser62.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat67 = null;
        boolean boolean68 = pcxImageParser62.canAcceptType(imageFormat67);
        java.lang.String str69 = pcxImageParser62.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser56.getMetadata(byteSource61, pcxImagingParameters70);
        byte[] byteArray72 = pcxImageParser24.getIccProfileBytes(byteSource55, pcxImagingParameters70);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser13.getMetadata(byteSource23, pcxImagingParameters70);
        byte[] byteArray74 = pcxImageParser0.getIccProfileBytes(byteSource12, pcxImagingParameters70);
        java.io.File file75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension76 = pcxImageParser0.getImageSize(file75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(byteArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "pcx" + "'", str69, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertNull(imageMetadata73);
        org.junit.Assert.assertNull(byteArray74);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat43 = null;
        boolean boolean44 = pcxImageParser0.canAcceptType(imageFormat43);
        java.io.File file45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension46 = pcxImageParser0.getImageSize(file45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser0.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser0.getMetadata(byteSource60);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(imageMetadata61);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        boolean boolean11 = pcxImageParser0.canAcceptExtension("hi!");
        java.nio.ByteOrder byteOrder12 = pcxImageParser0.getByteOrder();
        java.io.File file13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser20.getMetadata(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser24.getMetadata(byteSource28);
        boolean boolean31 = pcxImageParser24.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser20.getMetadata(byteSource23, pcxImagingParameters32);
        byte[] byteArray34 = pcxImageParser14.getIccProfileBytes(byteSource19, pcxImagingParameters32);
        java.lang.String str35 = pcxImageParser14.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser14.getMetadata(byteSource36);
        boolean boolean39 = pcxImageParser14.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.ImageFormat imageFormat40 = null;
        boolean boolean41 = pcxImageParser14.canAcceptType(imageFormat40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser43.getMetadata(byteSource47);
        boolean boolean50 = pcxImageParser43.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = null;
        byte[] byteArray56 = pcxImageParser53.getIccProfileBytes(byteSource54, pcxImagingParameters55);
        java.lang.String str57 = pcxImageParser53.getName();
        java.lang.String str58 = pcxImageParser53.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser53.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder63 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser62.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat67 = null;
        boolean boolean68 = pcxImageParser62.canAcceptType(imageFormat67);
        java.lang.String str69 = pcxImageParser62.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser62.getDefaultParameters();
        byte[] byteArray71 = pcxImageParser53.getIccProfileBytes(byteSource61, pcxImagingParameters70);
        byte[] byteArray72 = pcxImageParser43.getIccProfileBytes(byteSource52, pcxImagingParameters70);
        byte[] byteArray73 = pcxImageParser14.getIccProfileBytes(byteSource42, pcxImagingParameters70);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo74 = pcxImageParser0.getImageInfo(file13, pcxImagingParameters70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "pcx" + "'", str35, "pcx");
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Pcx-Custom" + "'", str57, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Pcx-Custom" + "'", str58, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "pcx" + "'", str69, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertNull(byteArray73);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser9.getMetadata(byteSource13);
        boolean boolean16 = pcxImageParser9.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat17 = null;
        boolean boolean18 = pcxImageParser9.canAcceptType(imageFormat17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser20.getMetadata(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser30.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser34.getMetadata(byteSource38);
        boolean boolean41 = pcxImageParser34.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser30.getMetadata(byteSource33, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser24.getIccProfileBytes(byteSource29, pcxImagingParameters42);
        java.lang.String str45 = pcxImageParser24.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser20.getMetadata(byteSource23, pcxImagingParameters46);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser9.getMetadata(byteSource19, pcxImagingParameters46);
        byte[] byteArray49 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters46);
        java.nio.ByteOrder byteOrder50 = pcxImageParser0.getByteOrder();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNotNull(byteOrder50);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser8.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser8.canAcceptType(imageFormat37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser8.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters41);
        java.io.File file43 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser0.getFormatCompliance(file43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser34.getMetadata(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser38.getMetadata(byteSource42);
        boolean boolean45 = pcxImageParser38.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser34.getMetadata(byteSource37, pcxImagingParameters46);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource33, pcxImagingParameters46);
        java.lang.String str49 = pcxImageParser0.getDefaultExtension();
        java.awt.image.BufferedImage bufferedImage50 = null;
        java.io.OutputStream outputStream51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder53 = pcxImageParser52.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser52.getFormatCompliance(byteSource54);
        java.nio.ByteOrder byteOrder56 = pcxImageParser52.getByteOrder();
        java.lang.String str57 = pcxImageParser52.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = null;
        byte[] byteArray63 = pcxImageParser60.getIccProfileBytes(byteSource61, pcxImagingParameters62);
        java.lang.String str64 = pcxImageParser60.getName();
        java.lang.String str65 = pcxImageParser60.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance67 = pcxImageParser60.getFormatCompliance(byteSource66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser69 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder70 = pcxImageParser69.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance72 = pcxImageParser69.getFormatCompliance(byteSource71);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = pcxImageParser69.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat74 = null;
        boolean boolean75 = pcxImageParser69.canAcceptType(imageFormat74);
        java.lang.String str76 = pcxImageParser69.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters77 = pcxImageParser69.getDefaultParameters();
        byte[] byteArray78 = pcxImageParser60.getIccProfileBytes(byteSource68, pcxImagingParameters77);
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser80 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder81 = pcxImageParser80.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance83 = pcxImageParser80.getFormatCompliance(byteSource82);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser80.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat85 = null;
        boolean boolean86 = pcxImageParser80.canAcceptType(imageFormat85);
        java.lang.String str87 = pcxImageParser80.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters88 = pcxImageParser80.getDefaultParameters();
        byte[] byteArray89 = pcxImageParser60.getIccProfileBytes(byteSource79, pcxImagingParameters88);
        byte[] byteArray90 = pcxImageParser52.getIccProfileBytes(byteSource59, pcxImagingParameters88);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage50, outputStream51, pcxImagingParameters88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "pcx" + "'", str49, "pcx");
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Pcx-Custom" + "'", str57, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Pcx-Custom" + "'", str64, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Pcx-Custom" + "'", str65, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance67);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNull(formatCompliance72);
        org.junit.Assert.assertNotNull(pcxImagingParameters73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "pcx" + "'", str76, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters77);
        org.junit.Assert.assertNull(byteArray78);
        org.junit.Assert.assertNotNull(byteOrder81);
        org.junit.Assert.assertNull(formatCompliance83);
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "pcx" + "'", str87, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters88);
        org.junit.Assert.assertNull(byteArray89);
        org.junit.Assert.assertNull(byteArray90);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str7 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser9.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser9.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser19.getMetadata(byteSource24, pcxImagingParameters30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser9.getMetadata(byteSource18, pcxImagingParameters32);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser0.getMetadata(byteSource8, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser0.getFormatCompliance(byteSource35);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "pcx" + "'", str29, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(formatCompliance36);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser0.getFormatCompliance(byteSource16);
        java.lang.Class<?> wildcardClass18 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getDefaultExtension();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser18.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser18.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser28.getMetadata(byteSource33, pcxImagingParameters39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser18.getMetadata(byteSource27, pcxImagingParameters41);
        java.lang.String str43 = pcxImageParser18.getName();
        java.lang.String str44 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = null;
        byte[] byteArray49 = pcxImageParser46.getIccProfileBytes(byteSource47, pcxImagingParameters48);
        java.lang.String str50 = pcxImageParser46.getName();
        java.lang.String str51 = pcxImageParser46.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser46.getMetadata(byteSource52, pcxImagingParameters57);
        java.lang.String str59 = pcxImageParser46.getName();
        org.apache.commons.imaging.ImageFormat imageFormat60 = null;
        boolean boolean61 = pcxImageParser46.canAcceptType(imageFormat60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser46.getDefaultParameters();
        byte[] byteArray63 = pcxImageParser18.getIccProfileBytes(byteSource45, pcxImagingParameters62);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters62);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser0.getMetadata(byteSource10, pcxImagingParameters62);
        java.io.File file66 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance67 = pcxImageParser0.getFormatCompliance(file66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "pcx" + "'", str15, "pcx");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "pcx" + "'", str38, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Pcx-Custom" + "'", str59, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNull(imageMetadata65);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser10.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser10.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage18 = pcxImageParser0.getBufferedImage(file9, pcxImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.ImageFormat imageFormat26 = null;
        boolean boolean27 = pcxImageParser0.canAcceptType(imageFormat26);
        java.io.File file28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser0.getMetadata(file28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage20 = pcxImageParser0.getBufferedImage(byteSource18, pcxImagingParameters19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNull(imageMetadata17);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        java.lang.String str29 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat30 = null;
        boolean boolean31 = pcxImageParser0.canAcceptType(imageFormat30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser39.getMetadata(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser43.getMetadata(byteSource47);
        boolean boolean50 = pcxImageParser43.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser39.getMetadata(byteSource42, pcxImagingParameters51);
        byte[] byteArray53 = pcxImageParser33.getIccProfileBytes(byteSource38, pcxImagingParameters51);
        java.lang.String str54 = pcxImageParser33.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser33.getMetadata(byteSource55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser33.getMetadata(byteSource57);
        org.apache.commons.imaging.ImageFormat imageFormat59 = null;
        boolean boolean60 = pcxImageParser33.canAcceptType(imageFormat59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder63 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser62.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser62.getDefaultParameters();
        java.lang.String str67 = pcxImageParser62.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser62.getMetadata(byteSource68, pcxImagingParameters69);
        java.lang.String str71 = pcxImageParser62.getDefaultExtension();
        boolean boolean73 = pcxImageParser62.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser62.getDefaultParameters();
        byte[] byteArray75 = pcxImageParser33.getIccProfileBytes(byteSource61, pcxImagingParameters74);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage76 = pcxImageParser0.getBufferedImage(byteSource32, pcxImagingParameters74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "pcx" + "'", str54, "pcx");
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "pcx" + "'", str67, "pcx");
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "pcx" + "'", str71, "pcx");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertNull(byteArray75);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        java.awt.image.BufferedImage bufferedImage18 = null;
        java.io.OutputStream outputStream19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser20.getMetadata(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser30.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser34.getMetadata(byteSource38);
        boolean boolean41 = pcxImageParser34.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser30.getMetadata(byteSource33, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser24.getIccProfileBytes(byteSource29, pcxImagingParameters42);
        java.lang.String str45 = pcxImageParser24.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser20.getMetadata(byteSource23, pcxImagingParameters46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = null;
        byte[] byteArray53 = pcxImageParser50.getIccProfileBytes(byteSource51, pcxImagingParameters52);
        java.lang.String str54 = pcxImageParser50.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser20.getMetadata(byteSource49, pcxImagingParameters55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser20.getMetadata(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser20.getMetadata(byteSource59);
        org.apache.commons.imaging.ImageFormat imageFormat61 = null;
        boolean boolean62 = pcxImageParser20.canAcceptType(imageFormat61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser20.getMetadata(byteSource63);
        boolean boolean66 = pcxImageParser20.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser20.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage18, outputStream19, pcxImagingParameters67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "pcx" + "'", str54, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat26 = null;
        boolean boolean27 = pcxImageParser21.canAcceptType(imageFormat26);
        java.lang.String str28 = pcxImageParser21.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        java.lang.String str30 = pcxImageParser21.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource20, pcxImagingParameters31);
        java.lang.Class<?> wildcardClass33 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser2 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = null;
        byte[] byteArray5 = pcxImageParser2.getIccProfileBytes(byteSource3, pcxImagingParameters4);
        java.lang.String str6 = pcxImageParser2.getDefaultExtension();
        java.lang.String str7 = pcxImageParser2.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser9.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser9.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser19.getMetadata(byteSource24, pcxImagingParameters30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser9.getMetadata(byteSource18, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser9.getName();
        java.lang.String str35 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = null;
        byte[] byteArray40 = pcxImageParser37.getIccProfileBytes(byteSource38, pcxImagingParameters39);
        java.lang.String str41 = pcxImageParser37.getName();
        java.lang.String str42 = pcxImageParser37.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser37.getMetadata(byteSource43, pcxImagingParameters48);
        java.lang.String str50 = pcxImageParser37.getName();
        org.apache.commons.imaging.ImageFormat imageFormat51 = null;
        boolean boolean52 = pcxImageParser37.canAcceptType(imageFormat51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser37.getDefaultParameters();
        byte[] byteArray54 = pcxImageParser9.getIccProfileBytes(byteSource36, pcxImagingParameters53);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser2.getMetadata(byteSource8, pcxImagingParameters53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser2.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser0.getMetadata(byteSource1, pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "pcx" + "'", str29, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser40.getMetadata(byteSource43);
        java.lang.String str45 = pcxImageParser40.getDefaultExtension();
        java.lang.String str46 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource39, pcxImagingParameters47);
        java.io.File file49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser56.getMetadata(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder61 = pcxImageParser60.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance63 = pcxImageParser60.getFormatCompliance(byteSource62);
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser60.getMetadata(byteSource64);
        boolean boolean67 = pcxImageParser60.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser56.getMetadata(byteSource59, pcxImagingParameters68);
        byte[] byteArray70 = pcxImageParser50.getIccProfileBytes(byteSource55, pcxImagingParameters68);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo71 = pcxImageParser0.getImageInfo(file49, pcxImagingParameters68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "pcx" + "'", str46, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNull(formatCompliance63);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(imageMetadata69);
        org.junit.Assert.assertNull(byteArray70);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser9.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage18 = pcxImageParser0.getBufferedImage(byteSource8, pcxImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser0.getFormatCompliance(byteSource43);
        java.lang.String str45 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser0.getMetadata(byteSource46);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertNull(imageMetadata47);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser0.getName();
        java.lang.String str26 = pcxImageParser0.getName();
        java.awt.image.BufferedImage bufferedImage27 = null;
        java.io.OutputStream outputStream28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser29.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage27, outputStream28, pcxImagingParameters35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser0.getDefaultExtension();
        boolean boolean26 = pcxImageParser0.canAcceptExtension("");
        java.lang.String str27 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder28 = pcxImageParser0.getByteOrder();
        java.lang.String str29 = pcxImageParser0.getName();
        java.io.File file30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = pcxImageParser0.canAcceptExtension(file30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "pcx" + "'", str24, "pcx");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        org.apache.commons.imaging.ImageFormat imageFormat4 = null;
        boolean boolean5 = pcxImageParser0.canAcceptType(imageFormat4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        boolean boolean26 = pcxImageParser0.canAcceptExtension("");
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str29 = pcxImageParser0.dumpImageFile(byteSource28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(imageMetadata27);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str15 = pcxImageParser0.getName();
        boolean boolean17 = pcxImageParser0.canAcceptExtension("");
        java.lang.String str18 = pcxImageParser0.getName();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        boolean boolean22 = pcxImageParser0.canAcceptExtension("pcx");
        boolean boolean24 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList26 = pcxImageParser0.getAllBufferedImages(byteSource25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.nio.ByteOrder byteOrder13 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat20 = null;
        boolean boolean21 = pcxImageParser15.canAcceptType(imageFormat20);
        java.lang.String str22 = pcxImageParser15.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser9.getMetadata(byteSource14, pcxImagingParameters23);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage25 = pcxImageParser0.getBufferedImage(byteSource8, pcxImagingParameters23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        java.io.File file17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        java.lang.String str23 = pcxImageParser18.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser18.getMetadata(byteSource24, pcxImagingParameters25);
        java.lang.String str27 = pcxImageParser18.getDefaultExtension();
        boolean boolean29 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser18.getDefaultParameters();
        java.lang.String str31 = pcxImageParser18.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser33.getDefaultExtension();
        java.lang.String str38 = pcxImageParser33.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = null;
        byte[] byteArray43 = pcxImageParser40.getIccProfileBytes(byteSource41, pcxImagingParameters42);
        java.lang.String str44 = pcxImageParser40.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser40.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser40.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat50 = null;
        boolean boolean51 = pcxImageParser40.canAcceptType(imageFormat50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser40.getDefaultParameters();
        byte[] byteArray53 = pcxImageParser33.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser18.getIccProfileBytes(byteSource32, pcxImagingParameters52);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension55 = pcxImageParser0.getImageSize(file17, pcxImagingParameters52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "pcx" + "'", str23, "pcx");
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "pcx" + "'", str37, "pcx");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNull(byteArray54);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.lang.String str31 = pcxImageParser0.getName();
        java.io.File file32 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(file32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str9 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser8.canAcceptType(imageFormat14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = null;
        byte[] byteArray22 = pcxImageParser19.getIccProfileBytes(byteSource20, pcxImagingParameters21);
        java.lang.String str23 = pcxImageParser19.getName();
        java.lang.String str24 = pcxImageParser19.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser19.getMetadata(byteSource25, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        byte[] byteArray38 = pcxImageParser19.getIccProfileBytes(byteSource32, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser8.getIccProfileBytes(byteSource18, pcxImagingParameters37);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters37);
        java.io.File file41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser0.getMetadata(file41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(byteArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNull(imageMetadata40);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser0.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str19 = pcxImageParser18.getName();
        java.nio.ByteOrder byteOrder20 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat21 = null;
        boolean boolean22 = pcxImageParser18.canAcceptType(imageFormat21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser18.getDefaultParameters();
        byte[] byteArray24 = pcxImageParser0.getIccProfileBytes(byteSource17, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList27 = pcxImageParser0.getAllBufferedImages(byteSource26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList8 = pcxImageParser0.getAllBufferedImages(byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(imageMetadata6);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser21.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser21.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser32.getMetadata(byteSource38, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser46.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser50.getMetadata(byteSource54);
        boolean boolean57 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser46.getMetadata(byteSource49, pcxImagingParameters58);
        byte[] byteArray60 = pcxImageParser32.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser32.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = null;
        byte[] byteArray67 = pcxImageParser64.getIccProfileBytes(byteSource65, pcxImagingParameters66);
        java.nio.ByteOrder byteOrder68 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser64.getMetadata(byteSource69, pcxImagingParameters78);
        byte[] byteArray80 = pcxImageParser32.getIccProfileBytes(byteSource63, pcxImagingParameters78);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser21.getMetadata(byteSource31, pcxImagingParameters78);
        byte[] byteArray82 = pcxImageParser8.getIccProfileBytes(byteSource20, pcxImagingParameters78);
        byte[] byteArray83 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters78);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser0.getDefaultParameters();
        java.lang.String str85 = pcxImageParser0.getDefaultExtension();
        java.lang.String str86 = pcxImageParser0.getDefaultExtension();
        java.io.File file87 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray88 = pcxImageParser0.getIccProfileBytes(file87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNull(byteArray82);
        org.junit.Assert.assertNull(byteArray83);
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "pcx" + "'", str85, "pcx");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "pcx" + "'", str86, "pcx");
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = null;
        byte[] byteArray18 = pcxImageParser15.getIccProfileBytes(byteSource16, pcxImagingParameters17);
        java.lang.String str19 = pcxImageParser15.getName();
        java.lang.String str20 = pcxImageParser15.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser15.getMetadata(byteSource21, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser15.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser15.getMetadata(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser32.getMetadata(byteSource38, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = null;
        byte[] byteArray49 = pcxImageParser46.getIccProfileBytes(byteSource47, pcxImagingParameters48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser46.getDefaultParameters();
        byte[] byteArray51 = pcxImageParser32.getIccProfileBytes(byteSource45, pcxImagingParameters50);
        byte[] byteArray52 = pcxImageParser15.getIccProfileBytes(byteSource31, pcxImagingParameters50);
        byte[] byteArray53 = pcxImageParser7.getIccProfileBytes(byteSource14, pcxImagingParameters50);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters50);
        java.lang.Class<?> wildcardClass55 = pcxImagingParameters50.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.io.File file10 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = pcxImageParser0.canAcceptExtension(file10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray9);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser0.getDefaultParameters();
        java.lang.String str28 = pcxImageParser0.getDefaultExtension();
        java.awt.image.BufferedImage bufferedImage29 = null;
        java.io.OutputStream outputStream30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str32 = pcxImageParser31.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        java.lang.String str35 = pcxImageParser31.getName();
        java.lang.String str36 = pcxImageParser31.getName();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser31.canAcceptType(imageFormat37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser31.getMetadata(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = null;
        byte[] byteArray45 = pcxImageParser42.getIccProfileBytes(byteSource43, pcxImagingParameters44);
        java.lang.String str46 = pcxImageParser42.getDefaultExtension();
        java.lang.String str47 = pcxImageParser42.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = null;
        byte[] byteArray52 = pcxImageParser49.getIccProfileBytes(byteSource50, pcxImagingParameters51);
        java.lang.String str53 = pcxImageParser49.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser49.getMetadata(byteSource54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance57 = pcxImageParser49.getFormatCompliance(byteSource56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder60 = pcxImageParser59.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser59.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser59.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser65 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = null;
        byte[] byteArray68 = pcxImageParser65.getIccProfileBytes(byteSource66, pcxImagingParameters67);
        java.lang.String str69 = pcxImageParser65.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser65.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser59.getMetadata(byteSource64, pcxImagingParameters70);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser59.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser49.getMetadata(byteSource58, pcxImagingParameters72);
        java.lang.String str74 = pcxImageParser49.getName();
        java.lang.String str75 = pcxImageParser49.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser77 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = null;
        byte[] byteArray80 = pcxImageParser77.getIccProfileBytes(byteSource78, pcxImagingParameters79);
        java.lang.String str81 = pcxImageParser77.getName();
        java.lang.String str82 = pcxImageParser77.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource83 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser84 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder85 = pcxImageParser84.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource86 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance87 = pcxImageParser84.getFormatCompliance(byteSource86);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters88 = pcxImageParser84.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata89 = pcxImageParser77.getMetadata(byteSource83, pcxImagingParameters88);
        java.lang.String str90 = pcxImageParser77.getName();
        org.apache.commons.imaging.ImageFormat imageFormat91 = null;
        boolean boolean92 = pcxImageParser77.canAcceptType(imageFormat91);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters93 = pcxImageParser77.getDefaultParameters();
        byte[] byteArray94 = pcxImageParser49.getIccProfileBytes(byteSource76, pcxImagingParameters93);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata95 = pcxImageParser42.getMetadata(byteSource48, pcxImagingParameters93);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata96 = pcxImageParser31.getMetadata(byteSource41, pcxImagingParameters93);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage29, outputStream30, pcxImagingParameters93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "pcx" + "'", str46, "pcx");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Pcx-Custom" + "'", str53, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(formatCompliance57);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNull(byteArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "pcx" + "'", str69, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
        org.junit.Assert.assertNull(imageMetadata73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Pcx-Custom" + "'", str74, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Pcx-Custom" + "'", str75, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Pcx-Custom" + "'", str81, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Pcx-Custom" + "'", str82, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder85);
        org.junit.Assert.assertNull(formatCompliance87);
        org.junit.Assert.assertNotNull(pcxImagingParameters88);
        org.junit.Assert.assertNull(imageMetadata89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Pcx-Custom" + "'", str90, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters93);
        org.junit.Assert.assertNull(byteArray94);
        org.junit.Assert.assertNull(imageMetadata95);
        org.junit.Assert.assertNull(imageMetadata96);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getName();
        java.lang.String str18 = pcxImageParser13.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser13.getMetadata(byteSource19, pcxImagingParameters24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser27.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser31.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser27.getMetadata(byteSource30, pcxImagingParameters39);
        byte[] byteArray41 = pcxImageParser13.getIccProfileBytes(byteSource26, pcxImagingParameters39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser13.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = null;
        byte[] byteArray48 = pcxImageParser45.getIccProfileBytes(byteSource46, pcxImagingParameters47);
        java.nio.ByteOrder byteOrder49 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat56 = null;
        boolean boolean57 = pcxImageParser51.canAcceptType(imageFormat56);
        java.lang.String str58 = pcxImageParser51.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser45.getMetadata(byteSource50, pcxImagingParameters59);
        byte[] byteArray61 = pcxImageParser13.getIccProfileBytes(byteSource44, pcxImagingParameters59);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser0.getMetadata(byteSource12, pcxImagingParameters59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser0.getMetadata(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser66 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder67 = pcxImageParser66.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance69 = pcxImageParser66.getFormatCompliance(byteSource68);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser66.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser66.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser66.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage73 = pcxImageParser0.getBufferedImage(byteSource65, pcxImagingParameters72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "pcx" + "'", str58, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(formatCompliance69);
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension9 = pcxImageParser0.getImageSize(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(formatCompliance7);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        java.io.File file19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str20 = pcxImageParser0.dumpImageFile(file19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters6);
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser0.getFormatCompliance(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata7);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat9 = null;
        boolean boolean10 = pcxImageParser4.canAcceptType(imageFormat9);
        java.lang.String str11 = pcxImageParser4.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        byte[] byteArray13 = pcxImageParser0.getIccProfileBytes(byteSource3, pcxImagingParameters12);
        java.lang.Class<?> wildcardClass14 = pcxImagingParameters12.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "pcx" + "'", str11, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.lang.String str6 = pcxImageParser0.getName();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = pcxImageParser0.canAcceptExtension(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Pcx-Custom" + "'", str6, "Pcx-Custom");
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.ImageFormat imageFormat1 = null;
        boolean boolean2 = pcxImageParser0.canAcceptType(imageFormat1);
        java.io.File file3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = null;
        byte[] byteArray7 = pcxImageParser4.getIccProfileBytes(byteSource5, pcxImagingParameters6);
        java.nio.ByteOrder byteOrder8 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser4.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = null;
        byte[] byteArray15 = pcxImageParser12.getIccProfileBytes(byteSource13, pcxImagingParameters14);
        java.lang.String str16 = pcxImageParser12.getName();
        java.lang.String str17 = pcxImageParser12.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser12.getMetadata(byteSource18, pcxImagingParameters23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser26.getMetadata(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser30.getMetadata(byteSource34);
        boolean boolean37 = pcxImageParser30.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser26.getMetadata(byteSource29, pcxImagingParameters38);
        byte[] byteArray40 = pcxImageParser12.getIccProfileBytes(byteSource25, pcxImagingParameters38);
        org.apache.commons.imaging.ImageFormat imageFormat41 = null;
        boolean boolean42 = pcxImageParser12.canAcceptType(imageFormat41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser12.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser4.getMetadata(byteSource11, pcxImagingParameters45);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension47 = pcxImageParser0.getImageSize(file3, pcxImagingParameters45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(byteArray7);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNull(byteArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList9 = pcxImageParser0.getAllBufferedImages(byteSource8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNotNull(byteOrder7);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        java.io.File file58 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str59 = pcxImageParser0.dumpImageFile(file58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser0.getName();
        java.io.File file26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(file26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        java.lang.String str26 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser21.getMetadata(byteSource27, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser35.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser39.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser39.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser35.getMetadata(byteSource38, pcxImagingParameters47);
        byte[] byteArray49 = pcxImageParser21.getIccProfileBytes(byteSource34, pcxImagingParameters47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser21.getFormatCompliance(byteSource50);
        java.nio.ByteOrder byteOrder52 = pcxImageParser21.getByteOrder();
        java.nio.ByteOrder byteOrder53 = pcxImageParser21.getByteOrder();
        java.lang.String str54 = pcxImageParser21.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser8.getMetadata(byteSource20, pcxImagingParameters55);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo59 = pcxImageParser0.getImageInfo(byteSource58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(imageMetadata57);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        java.nio.ByteOrder byteOrder9 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder12 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource16, pcxImagingParameters22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource10, pcxImagingParameters24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo27 = pcxImageParser0.getImageInfo(byteSource26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        java.io.File file31 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray32 = pcxImageParser0.getIccProfileBytes(file31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.lang.String str33 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser0.getDefaultParameters();
        boolean boolean36 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.File file37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        java.lang.String str43 = pcxImageParser38.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser38.getMetadata(byteSource44, pcxImagingParameters45);
        java.lang.String str47 = pcxImageParser38.getDefaultExtension();
        boolean boolean49 = pcxImageParser38.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser38.getDefaultParameters();
        java.lang.String str51 = pcxImageParser38.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = null;
        byte[] byteArray56 = pcxImageParser53.getIccProfileBytes(byteSource54, pcxImagingParameters55);
        java.lang.String str57 = pcxImageParser53.getDefaultExtension();
        java.lang.String str58 = pcxImageParser53.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = null;
        byte[] byteArray63 = pcxImageParser60.getIccProfileBytes(byteSource61, pcxImagingParameters62);
        java.lang.String str64 = pcxImageParser60.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser60.getMetadata(byteSource65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance68 = pcxImageParser60.getFormatCompliance(byteSource67);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat70 = null;
        boolean boolean71 = pcxImageParser60.canAcceptType(imageFormat70);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser60.getDefaultParameters();
        byte[] byteArray73 = pcxImageParser53.getIccProfileBytes(byteSource59, pcxImagingParameters72);
        byte[] byteArray74 = pcxImageParser38.getIccProfileBytes(byteSource52, pcxImagingParameters72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser38.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension76 = pcxImageParser0.getImageSize(file37, pcxImagingParameters75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "pcx" + "'", str43, "pcx");
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "pcx" + "'", str51, "pcx");
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "pcx" + "'", str57, "pcx");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Pcx-Custom" + "'", str58, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Pcx-Custom" + "'", str64, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertNull(formatCompliance68);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNull(byteArray74);
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getDefaultExtension();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser16.getMetadata(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser16.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat26 = null;
        boolean boolean27 = pcxImageParser16.canAcceptType(imageFormat26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser16.getDefaultParameters();
        byte[] byteArray29 = pcxImageParser9.getIccProfileBytes(byteSource15, pcxImagingParameters28);
        byte[] byteArray30 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo32 = pcxImageParser0.getImageInfo(byteSource31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertNull(byteArray30);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.lang.String str16 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList18 = pcxImageParser0.getAllBufferedImages(byteSource17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.ImageFormat imageFormat1 = null;
        boolean boolean2 = pcxImageParser0.canAcceptType(imageFormat1);
        java.nio.ByteOrder byteOrder3 = pcxImageParser0.getByteOrder();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNotNull(byteOrder3);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat18 = null;
        boolean boolean19 = pcxImageParser10.canAcceptType(imageFormat18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser10.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage21 = pcxImageParser0.getBufferedImage(file9, pcxImagingParameters20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource21, pcxImagingParameters22);
        java.nio.ByteOrder byteOrder24 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo26 = pcxImageParser0.getImageInfo(byteSource25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder24);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.lang.String str32 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder33 = pcxImageParser0.getByteOrder();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder33);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        boolean boolean10 = pcxImageParser0.canAcceptExtension("");
        java.io.File file11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str13 = pcxImageParser12.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser12.getMetadata(byteSource14);
        org.apache.commons.imaging.ImageFormat imageFormat16 = null;
        boolean boolean17 = pcxImageParser12.canAcceptType(imageFormat16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str20 = pcxImageParser19.getName();
        java.nio.ByteOrder byteOrder21 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat22 = null;
        boolean boolean23 = pcxImageParser19.canAcceptType(imageFormat22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser34.getMetadata(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser38.getMetadata(byteSource42);
        boolean boolean45 = pcxImageParser38.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser34.getMetadata(byteSource37, pcxImagingParameters46);
        byte[] byteArray48 = pcxImageParser28.getIccProfileBytes(byteSource33, pcxImagingParameters46);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser25.getMetadata(byteSource27, pcxImagingParameters46);
        byte[] byteArray50 = pcxImageParser19.getIccProfileBytes(byteSource24, pcxImagingParameters46);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser12.getMetadata(byteSource18, pcxImagingParameters46);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray52 = pcxImageParser0.getIccProfileBytes(file11, pcxImagingParameters46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertNull(imageMetadata51);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        java.lang.String str26 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser21.getMetadata(byteSource27, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser35.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser39.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser39.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser35.getMetadata(byteSource38, pcxImagingParameters47);
        byte[] byteArray49 = pcxImageParser21.getIccProfileBytes(byteSource34, pcxImagingParameters47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser21.getFormatCompliance(byteSource50);
        java.nio.ByteOrder byteOrder52 = pcxImageParser21.getByteOrder();
        java.nio.ByteOrder byteOrder53 = pcxImageParser21.getByteOrder();
        java.lang.String str54 = pcxImageParser21.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser8.getMetadata(byteSource20, pcxImagingParameters55);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser0.getMetadata(byteSource58);
        org.apache.commons.imaging.ImageFormat imageFormat60 = null;
        boolean boolean61 = pcxImageParser0.canAcceptType(imageFormat60);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.lang.String str16 = pcxImageParser0.getDefaultExtension();
        java.io.File file17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser18.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser18.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage25 = pcxImageParser0.getBufferedImage(file17, pcxImagingParameters24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser17.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getName();
        java.lang.String str39 = pcxImageParser34.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource40, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = null;
        byte[] byteArray51 = pcxImageParser48.getIccProfileBytes(byteSource49, pcxImagingParameters50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        byte[] byteArray53 = pcxImageParser34.getIccProfileBytes(byteSource47, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser17.getIccProfileBytes(byteSource33, pcxImagingParameters52);
        byte[] byteArray55 = pcxImageParser9.getIccProfileBytes(byteSource16, pcxImagingParameters52);
        byte[] byteArray56 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser0.getFormatCompliance(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser0.getFormatCompliance(byteSource59);
        java.io.File file61 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = pcxImageParser0.canAcceptExtension(file61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNull(formatCompliance60);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        boolean boolean21 = pcxImageParser0.canAcceptExtension("hi!");
        boolean boolean23 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.io.File file24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        java.lang.String str30 = pcxImageParser25.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser25.getMetadata(byteSource31);
        boolean boolean34 = pcxImageParser25.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat35 = null;
        boolean boolean36 = pcxImageParser25.canAcceptType(imageFormat35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = null;
        byte[] byteArray41 = pcxImageParser38.getIccProfileBytes(byteSource39, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser38.getName();
        java.lang.String str43 = pcxImageParser38.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder46 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser45.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser45.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser38.getMetadata(byteSource44, pcxImagingParameters49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser52.getMetadata(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder57 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser56.getMetadata(byteSource60);
        boolean boolean63 = pcxImageParser56.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser52.getMetadata(byteSource55, pcxImagingParameters64);
        byte[] byteArray66 = pcxImageParser38.getIccProfileBytes(byteSource51, pcxImagingParameters64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance68 = pcxImageParser38.getFormatCompliance(byteSource67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = null;
        byte[] byteArray73 = pcxImageParser70.getIccProfileBytes(byteSource71, pcxImagingParameters72);
        java.nio.ByteOrder byteOrder74 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser76 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder77 = pcxImageParser76.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance79 = pcxImageParser76.getFormatCompliance(byteSource78);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters80 = pcxImageParser76.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat81 = null;
        boolean boolean82 = pcxImageParser76.canAcceptType(imageFormat81);
        java.lang.String str83 = pcxImageParser76.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser76.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata85 = pcxImageParser70.getMetadata(byteSource75, pcxImagingParameters84);
        byte[] byteArray86 = pcxImageParser38.getIccProfileBytes(byteSource69, pcxImagingParameters84);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata87 = pcxImageParser25.getMetadata(byteSource37, pcxImagingParameters84);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage88 = pcxImageParser0.getBufferedImage(file24, pcxImagingParameters84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertNull(formatCompliance68);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNotNull(byteOrder74);
        org.junit.Assert.assertNotNull(byteOrder77);
        org.junit.Assert.assertNull(formatCompliance79);
        org.junit.Assert.assertNotNull(pcxImagingParameters80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "pcx" + "'", str83, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertNull(imageMetadata85);
        org.junit.Assert.assertNull(byteArray86);
        org.junit.Assert.assertNull(imageMetadata87);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat7 = null;
        boolean boolean8 = pcxImageParser0.canAcceptType(imageFormat7);
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.ImageFormat imageFormat13 = null;
        boolean boolean14 = pcxImageParser10.canAcceptType(imageFormat13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        java.lang.String str21 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser16.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser16.canAcceptExtension("");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser16.getDefaultParameters();
        byte[] byteArray27 = pcxImageParser10.getIccProfileBytes(byteSource15, pcxImagingParameters26);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo28 = pcxImageParser0.getImageInfo(file9, pcxImagingParameters26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(byteArray27);
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser34.getMetadata(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser38.getMetadata(byteSource42);
        boolean boolean45 = pcxImageParser38.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser34.getMetadata(byteSource37, pcxImagingParameters46);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource33, pcxImagingParameters46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser0.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.ImageFormat imageFormat51 = null;
        boolean boolean52 = pcxImageParser0.canAcceptType(imageFormat51);
        java.io.File file53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension54 = pcxImageParser0.getImageSize(file53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        java.lang.String str23 = pcxImageParser18.getName();
        java.lang.String str24 = pcxImageParser18.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat25 = null;
        boolean boolean26 = pcxImageParser18.canAcceptType(imageFormat25);
        boolean boolean28 = pcxImageParser18.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getName();
        java.lang.String str35 = pcxImageParser30.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser30.getMetadata(byteSource36, pcxImagingParameters41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser44.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser48.getMetadata(byteSource52);
        boolean boolean55 = pcxImageParser48.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser44.getMetadata(byteSource47, pcxImagingParameters56);
        byte[] byteArray58 = pcxImageParser30.getIccProfileBytes(byteSource43, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser30.getFormatCompliance(byteSource59);
        java.nio.ByteOrder byteOrder61 = pcxImageParser30.getByteOrder();
        java.nio.ByteOrder byteOrder62 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder65 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance67 = pcxImageParser64.getFormatCompliance(byteSource66);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser64.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser70.getMetadata(byteSource71);
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser74 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder75 = pcxImageParser74.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance77 = pcxImageParser74.getFormatCompliance(byteSource76);
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser74.getMetadata(byteSource78);
        boolean boolean81 = pcxImageParser74.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters82 = pcxImageParser74.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata83 = pcxImageParser70.getMetadata(byteSource73, pcxImagingParameters82);
        byte[] byteArray84 = pcxImageParser64.getIccProfileBytes(byteSource69, pcxImagingParameters82);
        java.lang.String str85 = pcxImageParser64.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters86 = pcxImageParser64.getDefaultParameters();
        byte[] byteArray87 = pcxImageParser30.getIccProfileBytes(byteSource63, pcxImagingParameters86);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata88 = pcxImageParser18.getMetadata(byteSource29, pcxImagingParameters86);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo89 = pcxImageParser0.getImageInfo(byteSource17, pcxImagingParameters86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "pcx" + "'", str24, "pcx");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNull(formatCompliance67);
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(imageMetadata72);
        org.junit.Assert.assertNotNull(byteOrder75);
        org.junit.Assert.assertNull(formatCompliance77);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters82);
        org.junit.Assert.assertNull(imageMetadata83);
        org.junit.Assert.assertNull(byteArray84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Pcx-Custom" + "'", str85, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters86);
        org.junit.Assert.assertNull(byteArray87);
        org.junit.Assert.assertNull(imageMetadata88);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser0.getMetadata(byteSource39);
        org.apache.commons.imaging.ImageFormat imageFormat41 = null;
        boolean boolean42 = pcxImageParser0.canAcceptType(imageFormat41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser0.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.io.File file47 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser0.getFormatCompliance(file47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        boolean boolean11 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser13.getMetadata(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser13.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = null;
        byte[] byteArray27 = pcxImageParser24.getIccProfileBytes(byteSource25, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser24.getName();
        java.lang.String str29 = pcxImageParser24.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser24.getMetadata(byteSource30, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser38.getMetadata(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser42.getMetadata(byteSource46);
        boolean boolean49 = pcxImageParser42.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser38.getMetadata(byteSource41, pcxImagingParameters50);
        byte[] byteArray52 = pcxImageParser24.getIccProfileBytes(byteSource37, pcxImagingParameters50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser24.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = null;
        byte[] byteArray59 = pcxImageParser56.getIccProfileBytes(byteSource57, pcxImagingParameters58);
        java.nio.ByteOrder byteOrder60 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder63 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser62.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat67 = null;
        boolean boolean68 = pcxImageParser62.canAcceptType(imageFormat67);
        java.lang.String str69 = pcxImageParser62.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser56.getMetadata(byteSource61, pcxImagingParameters70);
        byte[] byteArray72 = pcxImageParser24.getIccProfileBytes(byteSource55, pcxImagingParameters70);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser13.getMetadata(byteSource23, pcxImagingParameters70);
        byte[] byteArray74 = pcxImageParser0.getIccProfileBytes(byteSource12, pcxImagingParameters70);
        java.io.File file75 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser76 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str77 = pcxImageParser76.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance79 = pcxImageParser76.getFormatCompliance(byteSource78);
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser76.getMetadata(byteSource80);
        java.lang.String str82 = pcxImageParser76.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = pcxImageParser76.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage84 = pcxImageParser0.getBufferedImage(file75, pcxImagingParameters83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(byteArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "pcx" + "'", str69, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertNull(imageMetadata73);
        org.junit.Assert.assertNull(byteArray74);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "Pcx-Custom" + "'", str77, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance79);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "Pcx-Custom" + "'", str82, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters83);
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        byte[] byteArray30 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        java.lang.String str41 = pcxImageParser32.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser11.getMetadata(byteSource31, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser0.getIccProfileBytes(byteSource10, pcxImagingParameters42);
        java.io.File file45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension46 = pcxImageParser0.getImageSize(file45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(byteArray44);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        java.io.File file42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.lang.String str47 = pcxImageParser43.getName();
        java.lang.String str48 = pcxImageParser43.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser43.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = null;
        byte[] byteArray55 = pcxImageParser52.getIccProfileBytes(byteSource53, pcxImagingParameters54);
        java.lang.String str56 = pcxImageParser52.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser52.getMetadata(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser52.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder63 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser62.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = null;
        byte[] byteArray71 = pcxImageParser68.getIccProfileBytes(byteSource69, pcxImagingParameters70);
        java.lang.String str72 = pcxImageParser68.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = pcxImageParser68.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata74 = pcxImageParser62.getMetadata(byteSource67, pcxImagingParameters73);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser52.getMetadata(byteSource61, pcxImagingParameters75);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser43.getMetadata(byteSource51, pcxImagingParameters75);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension78 = pcxImageParser0.getImageSize(file42, pcxImagingParameters75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Pcx-Custom" + "'", str56, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "pcx" + "'", str72, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters73);
        org.junit.Assert.assertNull(imageMetadata74);
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertNull(imageMetadata77);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        java.lang.String str10 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat17 = null;
        boolean boolean18 = pcxImageParser12.canAcceptType(imageFormat17);
        java.lang.String str19 = pcxImageParser12.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser12.getDefaultParameters();
        java.lang.String str21 = pcxImageParser12.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource11, pcxImagingParameters22);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "pcx" + "'", str19, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        boolean boolean29 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.File file30 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray31 = pcxImageParser0.getIccProfileBytes(file30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = pcxImageParser0.dumpImageFile(byteSource16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser0.getFormatCompliance(byteSource43);
        java.lang.String str45 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser0.canAcceptType(imageFormat46);
        java.io.File file48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage50 = pcxImageParser0.getBufferedImage(file48, pcxImagingParameters49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        java.nio.ByteOrder byteOrder13 = pcxImageParser0.getByteOrder();
        java.lang.Class<?> wildcardClass14 = byteOrder13.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        java.io.File file31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser32.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo41 = pcxImageParser0.getImageInfo(file31, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser0.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = null;
        byte[] byteArray25 = pcxImageParser22.getIccProfileBytes(byteSource23, pcxImagingParameters24);
        java.lang.String str26 = pcxImageParser22.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser29.getMetadata(byteSource34, pcxImagingParameters40);
        byte[] byteArray42 = pcxImageParser22.getIccProfileBytes(byteSource28, pcxImagingParameters40);
        byte[] byteArray43 = pcxImageParser0.getIccProfileBytes(byteSource21, pcxImagingParameters40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo45 = pcxImageParser0.getImageInfo(byteSource44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(byteArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pcx" + "'", str26, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNull(byteArray43);
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.ImageFormat imageFormat7 = null;
        boolean boolean8 = pcxImageParser0.canAcceptType(imageFormat7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat18 = null;
        boolean boolean19 = pcxImageParser10.canAcceptType(imageFormat18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser21.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser31.getMetadata(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser35.getMetadata(byteSource39);
        boolean boolean42 = pcxImageParser35.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser31.getMetadata(byteSource34, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser25.getIccProfileBytes(byteSource30, pcxImagingParameters43);
        java.lang.String str46 = pcxImageParser25.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser21.getMetadata(byteSource24, pcxImagingParameters47);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser10.getMetadata(byteSource20, pcxImagingParameters47);
        byte[] byteArray50 = pcxImageParser0.getIccProfileBytes(byteSource9, pcxImagingParameters47);
        java.io.File file51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList52 = pcxImageParser0.getAllBufferedImages(file51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNull(byteArray50);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser0.getName();
        boolean boolean44 = pcxImageParser0.canAcceptExtension("pcx");
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser0.getDefaultParameters();
        java.io.File file43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser44.getDefaultParameters();
        java.lang.String str49 = pcxImageParser44.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser44.getMetadata(byteSource50);
        boolean boolean53 = pcxImageParser44.canAcceptExtension("");
        boolean boolean55 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = null;
        byte[] byteArray60 = pcxImageParser57.getIccProfileBytes(byteSource58, pcxImagingParameters59);
        java.lang.String str61 = pcxImageParser57.getName();
        java.lang.String str62 = pcxImageParser57.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder65 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance67 = pcxImageParser64.getFormatCompliance(byteSource66);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser64.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser57.getMetadata(byteSource63, pcxImagingParameters68);
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser71.getMetadata(byteSource72);
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser75 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder76 = pcxImageParser75.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance78 = pcxImageParser75.getFormatCompliance(byteSource77);
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser75.getMetadata(byteSource79);
        boolean boolean82 = pcxImageParser75.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = pcxImageParser75.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata84 = pcxImageParser71.getMetadata(byteSource74, pcxImagingParameters83);
        byte[] byteArray85 = pcxImageParser57.getIccProfileBytes(byteSource70, pcxImagingParameters83);
        org.apache.commons.imaging.bytesource.ByteSource byteSource86 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance87 = pcxImageParser57.getFormatCompliance(byteSource86);
        java.nio.ByteOrder byteOrder88 = pcxImageParser57.getByteOrder();
        java.nio.ByteOrder byteOrder89 = pcxImageParser57.getByteOrder();
        java.lang.String str90 = pcxImageParser57.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters91 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata92 = pcxImageParser44.getMetadata(byteSource56, pcxImagingParameters91);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension93 = pcxImageParser0.getImageSize(file43, pcxImagingParameters91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "pcx" + "'", str49, "pcx");
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Pcx-Custom" + "'", str61, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Pcx-Custom" + "'", str62, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNull(formatCompliance67);
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(imageMetadata69);
        org.junit.Assert.assertNull(imageMetadata73);
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNull(formatCompliance78);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters83);
        org.junit.Assert.assertNull(imageMetadata84);
        org.junit.Assert.assertNull(byteArray85);
        org.junit.Assert.assertNull(formatCompliance87);
        org.junit.Assert.assertNotNull(byteOrder88);
        org.junit.Assert.assertNotNull(byteOrder89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Pcx-Custom" + "'", str90, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters91);
        org.junit.Assert.assertNull(imageMetadata92);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser0.getFormatCompliance(byteSource17);
        java.lang.String str19 = pcxImageParser0.getName();
        java.lang.String str20 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.ImageFormat imageFormat4 = null;
        boolean boolean5 = pcxImageParser0.canAcceptType(imageFormat4);
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str8 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser7.getMetadata(byteSource11);
        java.nio.ByteOrder byteOrder13 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser7.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser18.getName();
        java.lang.String str23 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser18.getMetadata(byteSource24, pcxImagingParameters29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray37 = pcxImageParser18.getIccProfileBytes(byteSource31, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat44 = null;
        boolean boolean45 = pcxImageParser39.canAcceptType(imageFormat44);
        java.lang.String str46 = pcxImageParser39.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        java.lang.String str48 = pcxImageParser39.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser18.getMetadata(byteSource38, pcxImagingParameters49);
        byte[] byteArray51 = pcxImageParser7.getIccProfileBytes(byteSource17, pcxImagingParameters49);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo53 = pcxImageParser0.getImageInfo(byteSource6, pcxImagingParameters52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Pcx-Custom" + "'", str8, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "pcx" + "'", str46, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getName();
        java.lang.String str11 = pcxImageParser6.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser6.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat20 = null;
        boolean boolean21 = pcxImageParser15.canAcceptType(imageFormat20);
        java.lang.String str22 = pcxImageParser15.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser15.getDefaultParameters();
        byte[] byteArray24 = pcxImageParser6.getIccProfileBytes(byteSource14, pcxImagingParameters23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat31 = null;
        boolean boolean32 = pcxImageParser26.canAcceptType(imageFormat31);
        java.lang.String str33 = pcxImageParser26.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        byte[] byteArray35 = pcxImageParser6.getIccProfileBytes(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = pcxImageParser0.dumpImageFile(byteSource37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "pcx" + "'", str33, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNull(byteArray36);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser8.getDefaultParameters();
        byte[] byteArray14 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser0.getDefaultParameters();
        java.io.File file17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str18 = pcxImageParser0.dumpImageFile(file17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(byteSource9);
        java.lang.String str11 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo13 = pcxImageParser0.getImageInfo(byteSource12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "pcx" + "'", str11, "pcx");
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser11.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.nio.ByteOrder byteOrder47 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat54 = null;
        boolean boolean55 = pcxImageParser49.canAcceptType(imageFormat54);
        java.lang.String str56 = pcxImageParser49.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser43.getMetadata(byteSource48, pcxImagingParameters57);
        byte[] byteArray59 = pcxImageParser11.getIccProfileBytes(byteSource42, pcxImagingParameters57);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser0.getMetadata(byteSource10, pcxImagingParameters57);
        java.io.File file61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension62 = pcxImageParser0.getImageSize(file61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "pcx" + "'", str56, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertNull(imageMetadata60);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo5 = pcxImageParser0.getImageInfo(byteSource4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        java.lang.String str25 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder26 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = null;
        byte[] byteArray31 = pcxImageParser28.getIccProfileBytes(byteSource29, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser28.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser28.getFormatCompliance(byteSource33);
        java.nio.ByteOrder byteOrder35 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo37 = pcxImageParser0.getImageInfo(byteSource27, pcxImagingParameters36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "pcx" + "'", str25, "pcx");
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.ImageFormat imageFormat26 = null;
        boolean boolean27 = pcxImageParser0.canAcceptType(imageFormat26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        java.lang.String str34 = pcxImageParser29.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser29.getMetadata(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser29.getDefaultExtension();
        boolean boolean40 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser29.getDefaultParameters();
        byte[] byteArray42 = pcxImageParser0.getIccProfileBytes(byteSource28, pcxImagingParameters41);
        java.io.File file43 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean44 = pcxImageParser0.canAcceptExtension(file43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "pcx" + "'", str38, "pcx");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(byteArray42);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat7 = null;
        boolean boolean8 = pcxImageParser0.canAcceptType(imageFormat7);
        boolean boolean10 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = null;
        byte[] byteArray15 = pcxImageParser12.getIccProfileBytes(byteSource13, pcxImagingParameters14);
        java.lang.String str16 = pcxImageParser12.getName();
        java.lang.String str17 = pcxImageParser12.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser12.getMetadata(byteSource18, pcxImagingParameters23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser26.getMetadata(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser30.getMetadata(byteSource34);
        boolean boolean37 = pcxImageParser30.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser26.getMetadata(byteSource29, pcxImagingParameters38);
        byte[] byteArray40 = pcxImageParser12.getIccProfileBytes(byteSource25, pcxImagingParameters38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser12.getFormatCompliance(byteSource41);
        java.nio.ByteOrder byteOrder43 = pcxImageParser12.getByteOrder();
        java.nio.ByteOrder byteOrder44 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser46.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser52.getMetadata(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder57 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser56.getMetadata(byteSource60);
        boolean boolean63 = pcxImageParser56.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser52.getMetadata(byteSource55, pcxImagingParameters64);
        byte[] byteArray66 = pcxImageParser46.getIccProfileBytes(byteSource51, pcxImagingParameters64);
        java.lang.String str67 = pcxImageParser46.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser46.getDefaultParameters();
        byte[] byteArray69 = pcxImageParser12.getIccProfileBytes(byteSource45, pcxImagingParameters68);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser0.getMetadata(byteSource11, pcxImagingParameters68);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance72 = pcxImageParser0.getFormatCompliance(byteSource71);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(byteArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Pcx-Custom" + "'", str67, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(byteArray69);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNull(formatCompliance72);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getName();
        java.lang.String str30 = pcxImageParser25.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser25.getMetadata(byteSource31, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser39.getMetadata(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser43.getMetadata(byteSource47);
        boolean boolean50 = pcxImageParser43.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser39.getMetadata(byteSource42, pcxImagingParameters51);
        byte[] byteArray53 = pcxImageParser25.getIccProfileBytes(byteSource38, pcxImagingParameters51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser25.getFormatCompliance(byteSource54);
        java.nio.ByteOrder byteOrder56 = pcxImageParser25.getByteOrder();
        java.nio.ByteOrder byteOrder57 = pcxImageParser25.getByteOrder();
        java.lang.String str58 = pcxImageParser25.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser25.getDefaultParameters();
        boolean boolean61 = pcxImageParser25.canAcceptExtension("pcx");
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder64 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser63.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser63.getDefaultParameters();
        java.lang.String str68 = pcxImageParser63.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser63.getMetadata(byteSource69);
        boolean boolean72 = pcxImageParser63.canAcceptExtension("");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata74 = pcxImageParser25.getMetadata(byteSource62, pcxImagingParameters73);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser0.getMetadata(byteSource24, pcxImagingParameters73);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = pcxImageParser0.getDefaultParameters();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Pcx-Custom" + "'", str58, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "pcx" + "'", str68, "pcx");
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters73);
        org.junit.Assert.assertNull(imageMetadata74);
        org.junit.Assert.assertNull(imageMetadata75);
        org.junit.Assert.assertNotNull(pcxImagingParameters76);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat32 = null;
        boolean boolean33 = pcxImageParser0.canAcceptType(imageFormat32);
        java.lang.String str34 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        boolean boolean15 = pcxImageParser0.canAcceptExtension("pcx");
        java.awt.image.BufferedImage bufferedImage16 = null;
        java.io.OutputStream outputStream17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser18.getName();
        java.lang.String str23 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser18.getMetadata(byteSource24, pcxImagingParameters29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray37 = pcxImageParser18.getIccProfileBytes(byteSource31, pcxImagingParameters36);
        boolean boolean39 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser18.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage16, outputStream17, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        java.io.File file33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser34.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser0.getMetadata(file33, pcxImagingParameters39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        java.lang.String str11 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser6.getMetadata(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser6.getDefaultExtension();
        boolean boolean17 = pcxImageParser6.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser6.getDefaultParameters();
        java.lang.String str19 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getDefaultExtension();
        java.lang.String str26 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = null;
        byte[] byteArray31 = pcxImageParser28.getIccProfileBytes(byteSource29, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser28.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser28.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser28.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat38 = null;
        boolean boolean39 = pcxImageParser28.canAcceptType(imageFormat38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser28.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser21.getIccProfileBytes(byteSource27, pcxImagingParameters40);
        byte[] byteArray42 = pcxImageParser6.getIccProfileBytes(byteSource20, pcxImagingParameters40);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo43 = pcxImageParser0.getImageInfo(byteSource5, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "pcx" + "'", str11, "pcx");
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "pcx" + "'", str15, "pcx");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "pcx" + "'", str19, "pcx");
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "pcx" + "'", str25, "pcx");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNull(byteArray42);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser0.getDefaultParameters();
        java.lang.String str32 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList34 = pcxImageParser0.getAllBufferedImages(byteSource33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser21.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser21.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser32.getMetadata(byteSource38, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser46.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser50.getMetadata(byteSource54);
        boolean boolean57 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser46.getMetadata(byteSource49, pcxImagingParameters58);
        byte[] byteArray60 = pcxImageParser32.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser32.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = null;
        byte[] byteArray67 = pcxImageParser64.getIccProfileBytes(byteSource65, pcxImagingParameters66);
        java.nio.ByteOrder byteOrder68 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser64.getMetadata(byteSource69, pcxImagingParameters78);
        byte[] byteArray80 = pcxImageParser32.getIccProfileBytes(byteSource63, pcxImagingParameters78);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser21.getMetadata(byteSource31, pcxImagingParameters78);
        byte[] byteArray82 = pcxImageParser8.getIccProfileBytes(byteSource20, pcxImagingParameters78);
        byte[] byteArray83 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters78);
        org.apache.commons.imaging.bytesource.ByteSource byteSource84 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance85 = pcxImageParser0.getFormatCompliance(byteSource84);
        org.apache.commons.imaging.ImageFormat imageFormat86 = null;
        boolean boolean87 = pcxImageParser0.canAcceptType(imageFormat86);
        java.nio.ByteOrder byteOrder88 = pcxImageParser0.getByteOrder();
        java.io.File file89 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray90 = pcxImageParser0.getIccProfileBytes(file89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNull(byteArray82);
        org.junit.Assert.assertNull(byteArray83);
        org.junit.Assert.assertNull(formatCompliance85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(byteOrder88);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser0.getMetadata(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = pcxImageParser0.dumpImageFile(byteSource23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata22);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser9.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser9.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser19.getMetadata(byteSource24, pcxImagingParameters30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser9.getMetadata(byteSource18, pcxImagingParameters32);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser0.getMetadata(byteSource8, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser36.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser36.getMetadata(byteSource39);
        org.apache.commons.imaging.ImageFormat imageFormat41 = null;
        boolean boolean42 = pcxImageParser36.canAcceptType(imageFormat41);
        java.lang.String str43 = pcxImageParser36.getDefaultExtension();
        java.lang.String str44 = pcxImageParser36.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser46.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser52.getMetadata(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder57 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser56.getMetadata(byteSource60);
        boolean boolean63 = pcxImageParser56.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser52.getMetadata(byteSource55, pcxImagingParameters64);
        byte[] byteArray66 = pcxImageParser46.getIccProfileBytes(byteSource51, pcxImagingParameters64);
        java.lang.String str67 = pcxImageParser46.getName();
        java.lang.String str68 = pcxImageParser46.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser36.getMetadata(byteSource45, pcxImagingParameters69);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension71 = pcxImageParser0.getImageSize(byteSource35, pcxImagingParameters69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "pcx" + "'", str29, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "pcx" + "'", str43, "pcx");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Pcx-Custom" + "'", str67, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "pcx" + "'", str68, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata70);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser0.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = null;
        byte[] byteArray25 = pcxImageParser22.getIccProfileBytes(byteSource23, pcxImagingParameters24);
        java.lang.String str26 = pcxImageParser22.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser29.getMetadata(byteSource34, pcxImagingParameters40);
        byte[] byteArray42 = pcxImageParser22.getIccProfileBytes(byteSource28, pcxImagingParameters40);
        byte[] byteArray43 = pcxImageParser0.getIccProfileBytes(byteSource21, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo46 = pcxImageParser0.getImageInfo(byteSource45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(byteArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pcx" + "'", str26, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        java.io.File file33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension34 = pcxImageParser0.getImageSize(file33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser0.getMetadata(byteSource25);
        boolean boolean28 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.lang.String str29 = pcxImageParser0.getDefaultExtension();
        java.io.File file30 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean31 = pcxImageParser0.canAcceptExtension(file30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "pcx" + "'", str29, "pcx");
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser0.getFormatCompliance(byteSource58);
        java.io.File file60 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray61 = pcxImageParser0.getIccProfileBytes(file60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(formatCompliance59);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        java.nio.ByteOrder byteOrder13 = pcxImageParser0.getByteOrder();
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder13);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getDefaultExtension();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser18.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser18.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser28.getMetadata(byteSource33, pcxImagingParameters39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser18.getMetadata(byteSource27, pcxImagingParameters41);
        java.lang.String str43 = pcxImageParser18.getName();
        java.lang.String str44 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = null;
        byte[] byteArray49 = pcxImageParser46.getIccProfileBytes(byteSource47, pcxImagingParameters48);
        java.lang.String str50 = pcxImageParser46.getName();
        java.lang.String str51 = pcxImageParser46.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser46.getMetadata(byteSource52, pcxImagingParameters57);
        java.lang.String str59 = pcxImageParser46.getName();
        org.apache.commons.imaging.ImageFormat imageFormat60 = null;
        boolean boolean61 = pcxImageParser46.canAcceptType(imageFormat60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser46.getDefaultParameters();
        byte[] byteArray63 = pcxImageParser18.getIccProfileBytes(byteSource45, pcxImagingParameters62);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters62);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser0.getMetadata(byteSource10, pcxImagingParameters62);
        java.io.File file66 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean67 = pcxImageParser0.canAcceptExtension(file66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "pcx" + "'", str15, "pcx");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "pcx" + "'", str38, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Pcx-Custom" + "'", str59, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNull(imageMetadata65);
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat34 = null;
        boolean boolean35 = pcxImageParser29.canAcceptType(imageFormat34);
        java.nio.ByteOrder byteOrder36 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo38 = pcxImageParser0.getImageInfo(byteSource28, pcxImagingParameters37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        boolean boolean10 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource11);
        java.io.File file13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList14 = pcxImageParser0.getAllBufferedImages(file13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(imageMetadata12);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str7 = pcxImageParser0.getName();
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str11 = pcxImageParser10.getName();
        java.nio.ByteOrder byteOrder12 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser10.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.ImageFormat imageFormat15 = null;
        boolean boolean16 = pcxImageParser10.canAcceptType(imageFormat15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = null;
        byte[] byteArray31 = pcxImageParser28.getIccProfileBytes(byteSource29, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser28.getName();
        java.lang.String str33 = pcxImageParser28.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser28.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat42 = null;
        boolean boolean43 = pcxImageParser37.canAcceptType(imageFormat42);
        java.lang.String str44 = pcxImageParser37.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser37.getDefaultParameters();
        byte[] byteArray46 = pcxImageParser28.getIccProfileBytes(byteSource36, pcxImagingParameters45);
        byte[] byteArray47 = pcxImageParser18.getIccProfileBytes(byteSource27, pcxImagingParameters45);
        byte[] byteArray48 = pcxImageParser10.getIccProfileBytes(byteSource17, pcxImagingParameters45);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage49 = pcxImageParser0.getBufferedImage(byteSource9, pcxImagingParameters45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "pcx" + "'", str44, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertNull(byteArray48);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser0.getMetadata(byteSource10);
        java.lang.String str12 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "pcx" + "'", str12, "pcx");
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = null;
        byte[] byteArray6 = pcxImageParser0.getIccProfileBytes(byteSource4, pcxImagingParameters5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        byte[] byteArray21 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNull(byteArray6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertNull(imageMetadata23);
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        byte[] byteArray30 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        java.lang.String str41 = pcxImageParser32.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser11.getMetadata(byteSource31, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser0.getIccProfileBytes(byteSource10, pcxImagingParameters42);
        java.nio.ByteOrder byteOrder45 = pcxImageParser0.getByteOrder();
        java.lang.Class<?> wildcardClass46 = pcxImageParser0.getClass();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser0.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser20.getMetadata(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser24.getMetadata(byteSource28);
        boolean boolean31 = pcxImageParser24.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser20.getMetadata(byteSource23, pcxImagingParameters32);
        byte[] byteArray34 = pcxImageParser14.getIccProfileBytes(byteSource19, pcxImagingParameters32);
        java.lang.String str35 = pcxImageParser14.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = null;
        byte[] byteArray43 = pcxImageParser40.getIccProfileBytes(byteSource41, pcxImagingParameters42);
        java.lang.String str44 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser10.getMetadata(byteSource39, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser10.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser10.getMetadata(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser10.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = null;
        byte[] byteArray57 = pcxImageParser54.getIccProfileBytes(byteSource55, pcxImagingParameters56);
        java.lang.String str58 = pcxImageParser54.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser54.getMetadata(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser54.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser54.getDefaultParameters();
        byte[] byteArray64 = pcxImageParser10.getIccProfileBytes(byteSource53, pcxImagingParameters63);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray65 = pcxImageParser0.getIccProfileBytes(file9, pcxImagingParameters63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "pcx" + "'", str44, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Pcx-Custom" + "'", str58, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNull(byteArray64);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList8 = pcxImageParser0.getAllBufferedImages(byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        boolean boolean8 = pcxImageParser0.canAcceptExtension("");
        java.awt.image.BufferedImage bufferedImage9 = null;
        java.io.OutputStream outputStream10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder12 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser11.getDefaultParameters();
        java.lang.String str16 = pcxImageParser11.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser11.getDefaultExtension();
        boolean boolean22 = pcxImageParser11.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser11.getDefaultParameters();
        java.lang.String str24 = pcxImageParser11.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = null;
        byte[] byteArray29 = pcxImageParser26.getIccProfileBytes(byteSource27, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser26.getDefaultExtension();
        java.lang.String str31 = pcxImageParser26.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser33.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser33.getMetadata(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser33.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat43 = null;
        boolean boolean44 = pcxImageParser33.canAcceptType(imageFormat43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser33.getDefaultParameters();
        byte[] byteArray46 = pcxImageParser26.getIccProfileBytes(byteSource32, pcxImagingParameters45);
        byte[] byteArray47 = pcxImageParser11.getIccProfileBytes(byteSource25, pcxImagingParameters45);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser11.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage9, outputStream10, pcxImagingParameters48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "pcx" + "'", str24, "pcx");
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(byteSource23, pcxImagingParameters32);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass34 = byteArray33.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        java.io.File file10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str12 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        java.lang.String str15 = pcxImageParser11.getName();
        boolean boolean17 = pcxImageParser11.canAcceptExtension("hi!");
        java.lang.String str18 = pcxImageParser11.getName();
        java.lang.String str19 = pcxImageParser11.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser11.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage21 = pcxImageParser0.getBufferedImage(file10, pcxImagingParameters20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "pcx" + "'", str19, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser11.getFormatCompliance(byteSource40);
        java.nio.ByteOrder byteOrder42 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = null;
        byte[] byteArray47 = pcxImageParser44.getIccProfileBytes(byteSource45, pcxImagingParameters46);
        java.lang.String str48 = pcxImageParser44.getName();
        java.lang.String str49 = pcxImageParser44.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser44.getMetadata(byteSource50, pcxImagingParameters55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser58.getMetadata(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder63 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser62.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser62.getMetadata(byteSource66);
        boolean boolean69 = pcxImageParser62.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser58.getMetadata(byteSource61, pcxImagingParameters70);
        byte[] byteArray72 = pcxImageParser44.getIccProfileBytes(byteSource57, pcxImagingParameters70);
        byte[] byteArray73 = pcxImageParser11.getIccProfileBytes(byteSource43, pcxImagingParameters70);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata74 = pcxImageParser0.getMetadata(byteSource10, pcxImagingParameters70);
        java.io.File file75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList76 = pcxImageParser0.getAllBufferedImages(file75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Pcx-Custom" + "'", str49, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNull(imageMetadata74);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser21.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser21.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser32.getMetadata(byteSource38, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser46.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser50.getMetadata(byteSource54);
        boolean boolean57 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser46.getMetadata(byteSource49, pcxImagingParameters58);
        byte[] byteArray60 = pcxImageParser32.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser32.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = null;
        byte[] byteArray67 = pcxImageParser64.getIccProfileBytes(byteSource65, pcxImagingParameters66);
        java.nio.ByteOrder byteOrder68 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser64.getMetadata(byteSource69, pcxImagingParameters78);
        byte[] byteArray80 = pcxImageParser32.getIccProfileBytes(byteSource63, pcxImagingParameters78);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser21.getMetadata(byteSource31, pcxImagingParameters78);
        byte[] byteArray82 = pcxImageParser8.getIccProfileBytes(byteSource20, pcxImagingParameters78);
        byte[] byteArray83 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters78);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser0.getDefaultParameters();
        java.lang.Class<?> wildcardClass85 = pcxImagingParameters84.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNull(byteArray82);
        org.junit.Assert.assertNull(byteArray83);
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getDefaultExtension();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser18.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser18.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser28.getMetadata(byteSource33, pcxImagingParameters39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser18.getMetadata(byteSource27, pcxImagingParameters41);
        java.lang.String str43 = pcxImageParser18.getName();
        java.lang.String str44 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = null;
        byte[] byteArray49 = pcxImageParser46.getIccProfileBytes(byteSource47, pcxImagingParameters48);
        java.lang.String str50 = pcxImageParser46.getName();
        java.lang.String str51 = pcxImageParser46.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser46.getMetadata(byteSource52, pcxImagingParameters57);
        java.lang.String str59 = pcxImageParser46.getName();
        org.apache.commons.imaging.ImageFormat imageFormat60 = null;
        boolean boolean61 = pcxImageParser46.canAcceptType(imageFormat60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser46.getDefaultParameters();
        byte[] byteArray63 = pcxImageParser18.getIccProfileBytes(byteSource45, pcxImagingParameters62);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters62);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser0.getMetadata(byteSource10, pcxImagingParameters62);
        java.io.File file66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser0.getMetadata(file66, pcxImagingParameters67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "pcx" + "'", str15, "pcx");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "pcx" + "'", str38, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Pcx-Custom" + "'", str59, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNull(imageMetadata65);
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder23 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo27 = pcxImageParser0.getImageInfo(byteSource26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(imageMetadata25);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder9 = pcxImageParser0.getByteOrder();
        java.lang.Class<?> wildcardClass10 = byteOrder9.getClass();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        boolean boolean21 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser29.getMetadata(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser33.getMetadata(byteSource37);
        boolean boolean40 = pcxImageParser33.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser29.getMetadata(byteSource32, pcxImagingParameters41);
        byte[] byteArray43 = pcxImageParser23.getIccProfileBytes(byteSource28, pcxImagingParameters41);
        java.lang.String str44 = pcxImageParser23.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser23.canAcceptType(imageFormat46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser0.getMetadata(byteSource22, pcxImagingParameters48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser0.getFormatCompliance(byteSource50);
        java.io.File file52 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList53 = pcxImageParser0.getAllBufferedImages(file52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNull(formatCompliance51);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.nio.ByteOrder byteOrder10 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList12 = pcxImageParser0.getAllBufferedImages(byteSource11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertNotNull(byteOrder10);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(byteSource23, pcxImagingParameters32);
        java.io.File file34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser0.getMetadata(file34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.ImageFormat imageFormat7 = null;
        boolean boolean8 = pcxImageParser0.canAcceptType(imageFormat7);
        java.awt.image.BufferedImage bufferedImage9 = null;
        java.io.OutputStream outputStream10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        boolean boolean17 = pcxImageParser11.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser19.getDefaultParameters();
        byte[] byteArray25 = pcxImageParser11.getIccProfileBytes(byteSource18, pcxImagingParameters24);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage9, outputStream10, pcxImagingParameters24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(byteArray25);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.ImageFormat imageFormat21 = null;
        boolean boolean22 = pcxImageParser0.canAcceptType(imageFormat21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str24 = pcxImageParser0.dumpImageFile(byteSource23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        byte[] byteArray36 = pcxImageParser17.getIccProfileBytes(byteSource30, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser0.getIccProfileBytes(byteSource16, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        java.lang.String str43 = pcxImageParser39.getName();
        java.lang.String str44 = pcxImageParser39.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser46.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser39.getMetadata(byteSource45, pcxImagingParameters50);
        java.lang.String str52 = pcxImageParser39.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser39.getMetadata(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = null;
        byte[] byteArray59 = pcxImageParser56.getIccProfileBytes(byteSource57, pcxImagingParameters58);
        java.lang.String str60 = pcxImageParser56.getName();
        java.lang.String str61 = pcxImageParser56.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder64 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser63.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser56.getMetadata(byteSource62, pcxImagingParameters67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = null;
        byte[] byteArray73 = pcxImageParser70.getIccProfileBytes(byteSource71, pcxImagingParameters72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        byte[] byteArray75 = pcxImageParser56.getIccProfileBytes(byteSource69, pcxImagingParameters74);
        byte[] byteArray76 = pcxImageParser39.getIccProfileBytes(byteSource55, pcxImagingParameters74);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser0.getMetadata(byteSource38, pcxImagingParameters74);
        java.io.File file78 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList79 = pcxImageParser0.getAllBufferedImages(file78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Pcx-Custom" + "'", str52, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Pcx-Custom" + "'", str60, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Pcx-Custom" + "'", str61, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertNull(byteArray75);
        org.junit.Assert.assertNull(byteArray76);
        org.junit.Assert.assertNull(imageMetadata77);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertNull(imageMetadata9);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        boolean boolean10 = pcxImageParser0.canAcceptExtension("");
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str10 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = null;
        byte[] byteArray15 = pcxImageParser12.getIccProfileBytes(byteSource13, pcxImagingParameters14);
        java.lang.String str16 = pcxImageParser12.getName();
        java.lang.String str17 = pcxImageParser12.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser12.getMetadata(byteSource18, pcxImagingParameters23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser26.getMetadata(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser30.getMetadata(byteSource34);
        boolean boolean37 = pcxImageParser30.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser26.getMetadata(byteSource29, pcxImagingParameters38);
        byte[] byteArray40 = pcxImageParser12.getIccProfileBytes(byteSource25, pcxImagingParameters38);
        java.nio.ByteOrder byteOrder41 = pcxImageParser12.getByteOrder();
        java.lang.String str42 = pcxImageParser12.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser12.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser46.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser50.getMetadata(byteSource54);
        boolean boolean57 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser46.getMetadata(byteSource49, pcxImagingParameters58);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser12.getMetadata(byteSource45, pcxImagingParameters58);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage61 = pcxImageParser0.getBufferedImage(byteSource11, pcxImagingParameters58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "pcx" + "'", str42, "pcx");
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(imageMetadata60);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser8.getDefaultParameters();
        byte[] byteArray14 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser0.getDefaultParameters();
        java.io.PrintWriter printWriter17 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean19 = pcxImageParser0.dumpImageFile(printWriter17, byteSource18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        boolean boolean32 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat33 = null;
        boolean boolean34 = pcxImageParser0.canAcceptType(imageFormat33);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser0.getDefaultParameters();
        java.io.File file25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str26 = pcxImageParser0.dumpImageFile(file25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource21, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getName();
        java.lang.String str30 = pcxImageParser25.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser25.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat39 = null;
        boolean boolean40 = pcxImageParser34.canAcceptType(imageFormat39);
        java.lang.String str41 = pcxImageParser34.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray43 = pcxImageParser25.getIccProfileBytes(byteSource33, pcxImagingParameters42);
        org.apache.commons.imaging.ImageFormat imageFormat44 = null;
        boolean boolean45 = pcxImageParser25.canAcceptType(imageFormat44);
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser25.canAcceptType(imageFormat46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser25.getDefaultParameters();
        byte[] byteArray49 = pcxImageParser0.getIccProfileBytes(byteSource24, pcxImagingParameters48);
        java.io.File file50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser57.getMetadata(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder62 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser61.getFormatCompliance(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser61.getMetadata(byteSource65);
        boolean boolean68 = pcxImageParser61.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser61.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser57.getMetadata(byteSource60, pcxImagingParameters69);
        byte[] byteArray71 = pcxImageParser51.getIccProfileBytes(byteSource56, pcxImagingParameters69);
        java.lang.String str72 = pcxImageParser51.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = pcxImageParser51.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension74 = pcxImageParser0.getImageSize(file50, pcxImagingParameters73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "pcx" + "'", str41, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Pcx-Custom" + "'", str72, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters73);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        org.apache.commons.imaging.ImageFormat imageFormat21 = null;
        boolean boolean22 = pcxImageParser0.canAcceptType(imageFormat21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        java.lang.String str26 = pcxImageParser0.getName();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        java.lang.String str26 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser0.getMetadata(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str30 = pcxImageParser0.dumpImageFile(byteSource29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pcx" + "'", str26, "pcx");
        org.junit.Assert.assertNull(imageMetadata28);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = pcxImageParser0.dumpImageFile(byteSource9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        java.lang.String str10 = pcxImageParser0.getName();
        java.io.File file11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser12.getMetadata(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser16.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        java.lang.String str37 = pcxImageParser16.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser12.getMetadata(byteSource15, pcxImagingParameters38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = null;
        byte[] byteArray45 = pcxImageParser42.getIccProfileBytes(byteSource43, pcxImagingParameters44);
        java.lang.String str46 = pcxImageParser42.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser12.getMetadata(byteSource41, pcxImagingParameters47);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser0.getMetadata(file11, pcxImagingParameters47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "pcx" + "'", str46, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser0.canAcceptType(imageFormat37);
        org.apache.commons.imaging.ImageFormat imageFormat39 = null;
        boolean boolean40 = pcxImageParser0.canAcceptType(imageFormat39);
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.File file31 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray32 = pcxImageParser0.getIccProfileBytes(file31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder60 = pcxImageParser59.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser59.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser59.getDefaultParameters();
        java.lang.String str64 = pcxImageParser59.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser59.getMetadata(byteSource65, pcxImagingParameters66);
        java.lang.String str68 = pcxImageParser59.getDefaultExtension();
        boolean boolean70 = pcxImageParser59.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser59.getDefaultParameters();
        java.lang.String str72 = pcxImageParser59.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser74 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = null;
        byte[] byteArray77 = pcxImageParser74.getIccProfileBytes(byteSource75, pcxImagingParameters76);
        java.lang.String str78 = pcxImageParser74.getDefaultExtension();
        java.lang.String str79 = pcxImageParser74.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser81 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = null;
        byte[] byteArray84 = pcxImageParser81.getIccProfileBytes(byteSource82, pcxImagingParameters83);
        java.lang.String str85 = pcxImageParser81.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource86 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata87 = pcxImageParser81.getMetadata(byteSource86);
        org.apache.commons.imaging.bytesource.ByteSource byteSource88 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance89 = pcxImageParser81.getFormatCompliance(byteSource88);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters90 = pcxImageParser81.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat91 = null;
        boolean boolean92 = pcxImageParser81.canAcceptType(imageFormat91);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters93 = pcxImageParser81.getDefaultParameters();
        byte[] byteArray94 = pcxImageParser74.getIccProfileBytes(byteSource80, pcxImagingParameters93);
        byte[] byteArray95 = pcxImageParser59.getIccProfileBytes(byteSource73, pcxImagingParameters93);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters96 = pcxImageParser59.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata97 = pcxImageParser0.getMetadata(byteSource58, pcxImagingParameters96);
        org.apache.commons.imaging.bytesource.ByteSource byteSource98 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo99 = pcxImageParser0.getImageInfo(byteSource98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "pcx" + "'", str64, "pcx");
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "pcx" + "'", str68, "pcx");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "pcx" + "'", str72, "pcx");
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "pcx" + "'", str78, "pcx");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Pcx-Custom" + "'", str79, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Pcx-Custom" + "'", str85, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata87);
        org.junit.Assert.assertNull(formatCompliance89);
        org.junit.Assert.assertNotNull(pcxImagingParameters90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters93);
        org.junit.Assert.assertNull(byteArray94);
        org.junit.Assert.assertNull(byteArray95);
        org.junit.Assert.assertNotNull(pcxImagingParameters96);
        org.junit.Assert.assertNull(imageMetadata97);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder8 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser24.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser28.getMetadata(byteSource32);
        boolean boolean35 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser24.getMetadata(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser18.getIccProfileBytes(byteSource23, pcxImagingParameters36);
        java.lang.String str39 = pcxImageParser18.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters40);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters40);
        byte[] byteArray43 = pcxImageParser0.getIccProfileBytes(byteSource9, pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(byteArray43);
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser0.getDefaultExtension();
        boolean boolean26 = pcxImageParser0.canAcceptExtension("");
        java.lang.String str27 = pcxImageParser0.getDefaultExtension();
        java.io.File file28 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean29 = pcxImageParser0.canAcceptExtension(file28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "pcx" + "'", str24, "pcx");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser0.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser0.getMetadata(byteSource30);
        java.io.File file32 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean33 = pcxImageParser0.canAcceptExtension(file32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(imageMetadata31);
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser26.getMetadata(byteSource30);
        boolean boolean33 = pcxImageParser26.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser8.getIccProfileBytes(byteSource21, pcxImagingParameters34);
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser8.canAcceptType(imageFormat37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat45 = null;
        boolean boolean46 = pcxImageParser40.canAcceptType(imageFormat45);
        java.lang.String str47 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser40.getDefaultParameters();
        byte[] byteArray49 = pcxImageParser8.getIccProfileBytes(byteSource39, pcxImagingParameters48);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser0.getMetadata(byteSource7, pcxImagingParameters48);
        boolean boolean52 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        byte[] byteArray36 = pcxImageParser17.getIccProfileBytes(byteSource30, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser0.getIccProfileBytes(byteSource16, pcxImagingParameters35);
        org.apache.commons.imaging.ImageFormat imageFormat38 = null;
        boolean boolean39 = pcxImageParser0.canAcceptType(imageFormat38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str41 = pcxImageParser0.dumpImageFile(byteSource40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.nio.ByteOrder byteOrder36 = pcxImageParser0.getByteOrder();
        java.lang.String str37 = pcxImageParser0.getName();
        java.lang.Class<?> wildcardClass38 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        boolean boolean10 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = null;
        byte[] byteArray15 = pcxImageParser12.getIccProfileBytes(byteSource13, pcxImagingParameters14);
        java.lang.String str16 = pcxImageParser12.getName();
        java.lang.String str17 = pcxImageParser12.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser12.getMetadata(byteSource18, pcxImagingParameters23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser12.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser12.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str31 = pcxImageParser30.getName();
        java.nio.ByteOrder byteOrder32 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat33 = null;
        boolean boolean34 = pcxImageParser30.canAcceptType(imageFormat33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        byte[] byteArray36 = pcxImageParser12.getIccProfileBytes(byteSource29, pcxImagingParameters35);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage37 = pcxImageParser0.getBufferedImage(byteSource11, pcxImagingParameters35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(byteArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray36);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = pcxImageParser0.canAcceptExtension(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        java.lang.String str8 = pcxImageParser0.getName();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = pcxImageParser0.dumpImageFile(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Pcx-Custom" + "'", str8, "Pcx-Custom");
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.io.File file21 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean22 = pcxImageParser0.canAcceptExtension(file21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(byteSource14);
        java.io.File file16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser26.getMetadata(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser30.getMetadata(byteSource34);
        boolean boolean37 = pcxImageParser30.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser26.getMetadata(byteSource29, pcxImagingParameters38);
        byte[] byteArray40 = pcxImageParser20.getIccProfileBytes(byteSource25, pcxImagingParameters38);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser17.getMetadata(byteSource19, pcxImagingParameters38);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser0.getMetadata(file16, pcxImagingParameters38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertNull(imageMetadata41);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat9 = null;
        boolean boolean10 = pcxImageParser4.canAcceptType(imageFormat9);
        java.lang.String str11 = pcxImageParser4.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        byte[] byteArray13 = pcxImageParser0.getIccProfileBytes(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str16 = pcxImageParser15.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        boolean boolean20 = pcxImageParser15.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser15.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser24.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser28.getMetadata(byteSource32);
        boolean boolean35 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser24.getMetadata(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser15.getIccProfileBytes(byteSource23, pcxImagingParameters36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser15.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension40 = pcxImageParser0.getImageSize(byteSource14, pcxImagingParameters39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "pcx" + "'", str11, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser0.getFormatCompliance(byteSource58);
        java.io.PrintWriter printWriter60 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = pcxImageParser0.dumpImageFile(printWriter60, byteSource61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(formatCompliance59);
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser0.getMetadata(byteSource28);
        boolean boolean31 = pcxImageParser0.canAcceptExtension("");
        java.io.File file32 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(file32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser9.getMetadata(byteSource15, pcxImagingParameters20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser23.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser27.getMetadata(byteSource31);
        boolean boolean34 = pcxImageParser27.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser23.getMetadata(byteSource26, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser9.getIccProfileBytes(byteSource22, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser9.getFormatCompliance(byteSource38);
        java.nio.ByteOrder byteOrder40 = pcxImageParser9.getByteOrder();
        java.nio.ByteOrder byteOrder41 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser49.getMetadata(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser53.getMetadata(byteSource57);
        boolean boolean60 = pcxImageParser53.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser49.getMetadata(byteSource52, pcxImagingParameters61);
        byte[] byteArray63 = pcxImageParser43.getIccProfileBytes(byteSource48, pcxImagingParameters61);
        java.lang.String str64 = pcxImageParser43.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser43.getDefaultParameters();
        byte[] byteArray66 = pcxImageParser9.getIccProfileBytes(byteSource42, pcxImagingParameters65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance68 = pcxImageParser9.getFormatCompliance(byteSource67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = null;
        byte[] byteArray73 = pcxImageParser70.getIccProfileBytes(byteSource71, pcxImagingParameters72);
        java.lang.String str74 = pcxImageParser70.getName();
        java.lang.String str75 = pcxImageParser70.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance77 = pcxImageParser70.getFormatCompliance(byteSource76);
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser79 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder80 = pcxImageParser79.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource81 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance82 = pcxImageParser79.getFormatCompliance(byteSource81);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = pcxImageParser79.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat84 = null;
        boolean boolean85 = pcxImageParser79.canAcceptType(imageFormat84);
        java.lang.String str86 = pcxImageParser79.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters87 = pcxImageParser79.getDefaultParameters();
        byte[] byteArray88 = pcxImageParser70.getIccProfileBytes(byteSource78, pcxImagingParameters87);
        org.apache.commons.imaging.ImageFormat imageFormat89 = null;
        boolean boolean90 = pcxImageParser70.canAcceptType(imageFormat89);
        org.apache.commons.imaging.ImageFormat imageFormat91 = null;
        boolean boolean92 = pcxImageParser70.canAcceptType(imageFormat91);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters93 = pcxImageParser70.getDefaultParameters();
        byte[] byteArray94 = pcxImageParser9.getIccProfileBytes(byteSource69, pcxImagingParameters93);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray95 = pcxImageParser0.getIccProfileBytes(file8, pcxImagingParameters93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Pcx-Custom" + "'", str64, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertNull(formatCompliance68);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "Pcx-Custom" + "'", str74, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Pcx-Custom" + "'", str75, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance77);
        org.junit.Assert.assertNotNull(byteOrder80);
        org.junit.Assert.assertNull(formatCompliance82);
        org.junit.Assert.assertNotNull(pcxImagingParameters83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "pcx" + "'", str86, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters87);
        org.junit.Assert.assertNull(byteArray88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters93);
        org.junit.Assert.assertNull(byteArray94);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        org.apache.commons.imaging.ImageFormat imageFormat4 = null;
        boolean boolean5 = pcxImageParser0.canAcceptType(imageFormat4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters37);
        java.nio.ByteOrder byteOrder40 = pcxImageParser11.getByteOrder();
        java.lang.String str41 = pcxImageParser11.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser11.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser45.getMetadata(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser49.getMetadata(byteSource53);
        boolean boolean56 = pcxImageParser49.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser45.getMetadata(byteSource48, pcxImagingParameters57);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser11.getMetadata(byteSource44, pcxImagingParameters57);
        byte[] byteArray60 = pcxImageParser0.getIccProfileBytes(byteSource10, pcxImagingParameters57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = null;
        byte[] byteArray65 = pcxImageParser62.getIccProfileBytes(byteSource63, pcxImagingParameters64);
        java.lang.String str66 = pcxImageParser62.getName();
        java.lang.String str67 = pcxImageParser62.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance69 = pcxImageParser62.getFormatCompliance(byteSource68);
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = null;
        byte[] byteArray74 = pcxImageParser71.getIccProfileBytes(byteSource72, pcxImagingParameters73);
        java.lang.String str75 = pcxImageParser71.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser71.getMetadata(byteSource76);
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance79 = pcxImageParser71.getFormatCompliance(byteSource78);
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser81 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder82 = pcxImageParser81.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource83 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance84 = pcxImageParser81.getFormatCompliance(byteSource83);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters85 = pcxImageParser81.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource86 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser87 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource88 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters89 = null;
        byte[] byteArray90 = pcxImageParser87.getIccProfileBytes(byteSource88, pcxImagingParameters89);
        java.lang.String str91 = pcxImageParser87.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters92 = pcxImageParser87.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata93 = pcxImageParser81.getMetadata(byteSource86, pcxImagingParameters92);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters94 = pcxImageParser81.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata95 = pcxImageParser71.getMetadata(byteSource80, pcxImagingParameters94);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata96 = pcxImageParser62.getMetadata(byteSource70, pcxImagingParameters94);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage97 = pcxImageParser0.getBufferedImage(byteSource61, pcxImagingParameters94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "pcx" + "'", str41, "pcx");
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Pcx-Custom" + "'", str66, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Pcx-Custom" + "'", str67, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance69);
        org.junit.Assert.assertNull(byteArray74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Pcx-Custom" + "'", str75, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata77);
        org.junit.Assert.assertNull(formatCompliance79);
        org.junit.Assert.assertNotNull(byteOrder82);
        org.junit.Assert.assertNull(formatCompliance84);
        org.junit.Assert.assertNotNull(pcxImagingParameters85);
        org.junit.Assert.assertNull(byteArray90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "pcx" + "'", str91, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters92);
        org.junit.Assert.assertNull(imageMetadata93);
        org.junit.Assert.assertNotNull(pcxImagingParameters94);
        org.junit.Assert.assertNull(imageMetadata95);
        org.junit.Assert.assertNull(imageMetadata96);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource16, pcxImagingParameters21);
        java.lang.String str23 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser10.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = null;
        byte[] byteArray30 = pcxImageParser27.getIccProfileBytes(byteSource28, pcxImagingParameters29);
        java.lang.String str31 = pcxImageParser27.getName();
        java.lang.String str32 = pcxImageParser27.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser27.getMetadata(byteSource33, pcxImagingParameters38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = null;
        byte[] byteArray44 = pcxImageParser41.getIccProfileBytes(byteSource42, pcxImagingParameters43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        byte[] byteArray46 = pcxImageParser27.getIccProfileBytes(byteSource40, pcxImagingParameters45);
        byte[] byteArray47 = pcxImageParser10.getIccProfileBytes(byteSource26, pcxImagingParameters45);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters45);
        java.io.File file49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo51 = pcxImageParser0.getImageInfo(file49, pcxImagingParameters50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertNull(imageMetadata48);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        boolean boolean8 = pcxImageParser0.canAcceptExtension("");
        boolean boolean10 = pcxImageParser0.canAcceptExtension("");
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.ImageFormat imageFormat28 = null;
        boolean boolean29 = pcxImageParser0.canAcceptType(imageFormat28);
        java.lang.String str30 = pcxImageParser0.getName();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.io.PrintWriter printWriter6 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean8 = pcxImageParser0.dumpImageFile(printWriter6, byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(byteSource9);
        java.io.PrintWriter printWriter11 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean13 = pcxImageParser0.dumpImageFile(printWriter11, byteSource12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNull(imageMetadata10);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        boolean boolean15 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str17 = pcxImageParser0.dumpImageFile(file16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser10.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat24 = null;
        boolean boolean25 = pcxImageParser19.canAcceptType(imageFormat24);
        java.lang.String str26 = pcxImageParser19.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser19.getDefaultParameters();
        byte[] byteArray28 = pcxImageParser10.getIccProfileBytes(byteSource18, pcxImagingParameters27);
        byte[] byteArray29 = pcxImageParser0.getIccProfileBytes(byteSource9, pcxImagingParameters27);
        java.io.File file30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser0.getFormatCompliance(file30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pcx" + "'", str26, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(byteArray29);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(byteSource23, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser44.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser48.getMetadata(byteSource52);
        boolean boolean55 = pcxImageParser48.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser44.getMetadata(byteSource47, pcxImagingParameters56);
        byte[] byteArray58 = pcxImageParser38.getIccProfileBytes(byteSource43, pcxImagingParameters56);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser35.getMetadata(byteSource37, pcxImagingParameters56);
        byte[] byteArray60 = pcxImageParser0.getIccProfileBytes(byteSource34, pcxImagingParameters56);
        org.apache.commons.imaging.ImageFormat imageFormat61 = null;
        boolean boolean62 = pcxImageParser0.canAcceptType(imageFormat61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList64 = pcxImageParser0.getAllBufferedImages(byteSource63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        java.nio.ByteOrder byteOrder14 = pcxImageParser10.getByteOrder();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser18.getName();
        java.lang.String str23 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser18.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat32 = null;
        boolean boolean33 = pcxImageParser27.canAcceptType(imageFormat32);
        java.lang.String str34 = pcxImageParser27.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser27.getDefaultParameters();
        byte[] byteArray36 = pcxImageParser18.getIccProfileBytes(byteSource26, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat43 = null;
        boolean boolean44 = pcxImageParser38.canAcceptType(imageFormat43);
        java.lang.String str45 = pcxImageParser38.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        byte[] byteArray47 = pcxImageParser18.getIccProfileBytes(byteSource37, pcxImagingParameters46);
        byte[] byteArray48 = pcxImageParser10.getIccProfileBytes(byteSource17, pcxImagingParameters46);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo49 = pcxImageParser0.getImageInfo(file9, pcxImagingParameters46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertNull(byteArray48);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser0.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        java.io.File file12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser19.getMetadata(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser23.getMetadata(byteSource27);
        boolean boolean30 = pcxImageParser23.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser19.getMetadata(byteSource22, pcxImagingParameters31);
        byte[] byteArray33 = pcxImageParser13.getIccProfileBytes(byteSource18, pcxImagingParameters31);
        java.lang.String str34 = pcxImageParser13.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat36 = null;
        boolean boolean37 = pcxImageParser13.canAcceptType(imageFormat36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser13.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray39 = pcxImageParser0.getIccProfileBytes(file12, pcxImagingParameters38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata3 = pcxImageParser0.getMetadata(byteSource2);
        org.apache.commons.imaging.ImageFormat imageFormat4 = null;
        boolean boolean5 = pcxImageParser0.canAcceptType(imageFormat4);
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList7 = pcxImageParser0.getAllBufferedImages(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        boolean boolean21 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo24 = pcxImageParser0.getImageInfo(byteSource23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(byteSource25);
        java.io.File file27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser28.getMetadata(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser38.getMetadata(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser42.getMetadata(byteSource46);
        boolean boolean49 = pcxImageParser42.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser38.getMetadata(byteSource41, pcxImagingParameters50);
        byte[] byteArray52 = pcxImageParser32.getIccProfileBytes(byteSource37, pcxImagingParameters50);
        java.lang.String str53 = pcxImageParser32.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser28.getMetadata(byteSource31, pcxImagingParameters54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder58 = pcxImageParser57.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser57.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser63.getMetadata(byteSource64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser67 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder68 = pcxImageParser67.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser67.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser67.getMetadata(byteSource71);
        boolean boolean74 = pcxImageParser67.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser63.getMetadata(byteSource66, pcxImagingParameters75);
        byte[] byteArray77 = pcxImageParser57.getIccProfileBytes(byteSource62, pcxImagingParameters75);
        java.lang.String str78 = pcxImageParser57.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser28.getMetadata(byteSource56, pcxImagingParameters79);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray81 = pcxImageParser0.getIccProfileBytes(file27, pcxImagingParameters79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Pcx-Custom" + "'", str53, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNull(imageMetadata72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Pcx-Custom" + "'", str78, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
        org.junit.Assert.assertNull(imageMetadata80);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat7 = null;
        boolean boolean8 = pcxImageParser0.canAcceptType(imageFormat7);
        boolean boolean10 = pcxImageParser0.canAcceptExtension("");
        java.lang.String str11 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "pcx" + "'", str11, "pcx");
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser0.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = null;
        byte[] byteArray25 = pcxImageParser22.getIccProfileBytes(byteSource23, pcxImagingParameters24);
        java.lang.String str26 = pcxImageParser22.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser29.getMetadata(byteSource34, pcxImagingParameters40);
        byte[] byteArray42 = pcxImageParser22.getIccProfileBytes(byteSource28, pcxImagingParameters40);
        byte[] byteArray43 = pcxImageParser0.getIccProfileBytes(byteSource21, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser0.getDefaultParameters();
        java.lang.String str45 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str47 = pcxImageParser0.dumpImageFile(byteSource46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(byteArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pcx" + "'", str26, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getName();
        java.lang.String str18 = pcxImageParser13.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser13.getMetadata(byteSource19, pcxImagingParameters24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser27.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser31.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser27.getMetadata(byteSource30, pcxImagingParameters39);
        byte[] byteArray41 = pcxImageParser13.getIccProfileBytes(byteSource26, pcxImagingParameters39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser13.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = null;
        byte[] byteArray48 = pcxImageParser45.getIccProfileBytes(byteSource46, pcxImagingParameters47);
        java.nio.ByteOrder byteOrder49 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat56 = null;
        boolean boolean57 = pcxImageParser51.canAcceptType(imageFormat56);
        java.lang.String str58 = pcxImageParser51.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser45.getMetadata(byteSource50, pcxImagingParameters59);
        byte[] byteArray61 = pcxImageParser13.getIccProfileBytes(byteSource44, pcxImagingParameters59);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser0.getMetadata(byteSource12, pcxImagingParameters59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser0.getMetadata(byteSource63);
        java.io.File file65 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean66 = pcxImageParser0.canAcceptExtension(file65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "pcx" + "'", str58, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertNull(imageMetadata64);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo14 = pcxImageParser0.getImageInfo(byteSource13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat25 = null;
        boolean boolean26 = pcxImageParser20.canAcceptType(imageFormat25);
        java.lang.String str27 = pcxImageParser20.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser20.getDefaultParameters();
        byte[] byteArray29 = pcxImageParser0.getIccProfileBytes(byteSource19, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser0.getName();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser34.getMetadata(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser38.getMetadata(byteSource42);
        boolean boolean45 = pcxImageParser38.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser34.getMetadata(byteSource37, pcxImagingParameters46);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource33, pcxImagingParameters46);
        java.lang.String str49 = pcxImageParser0.getDefaultExtension();
        java.lang.String str50 = pcxImageParser0.getName();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "pcx" + "'", str49, "pcx");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat26 = null;
        boolean boolean27 = pcxImageParser21.canAcceptType(imageFormat26);
        java.lang.String str28 = pcxImageParser21.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = null;
        byte[] byteArray41 = pcxImageParser38.getIccProfileBytes(byteSource39, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser38.getName();
        java.lang.String str43 = pcxImageParser38.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder46 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser45.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser45.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser38.getMetadata(byteSource44, pcxImagingParameters49);
        java.lang.String str51 = pcxImageParser38.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser38.getMetadata(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = null;
        byte[] byteArray58 = pcxImageParser55.getIccProfileBytes(byteSource56, pcxImagingParameters57);
        java.lang.String str59 = pcxImageParser55.getName();
        java.lang.String str60 = pcxImageParser55.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder63 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser62.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser55.getMetadata(byteSource61, pcxImagingParameters66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser69 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = null;
        byte[] byteArray72 = pcxImageParser69.getIccProfileBytes(byteSource70, pcxImagingParameters71);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = pcxImageParser69.getDefaultParameters();
        byte[] byteArray74 = pcxImageParser55.getIccProfileBytes(byteSource68, pcxImagingParameters73);
        byte[] byteArray75 = pcxImageParser38.getIccProfileBytes(byteSource54, pcxImagingParameters73);
        byte[] byteArray76 = pcxImageParser30.getIccProfileBytes(byteSource37, pcxImagingParameters73);
        byte[] byteArray77 = pcxImageParser21.getIccProfileBytes(byteSource29, pcxImagingParameters73);
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance79 = pcxImageParser21.getFormatCompliance(byteSource78);
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance81 = pcxImageParser21.getFormatCompliance(byteSource80);
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser83 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource84 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters85 = null;
        byte[] byteArray86 = pcxImageParser83.getIccProfileBytes(byteSource84, pcxImagingParameters85);
        java.lang.String str87 = pcxImageParser83.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters88 = pcxImageParser83.getDefaultParameters();
        java.nio.ByteOrder byteOrder89 = pcxImageParser83.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters90 = pcxImageParser83.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata91 = pcxImageParser21.getMetadata(byteSource82, pcxImagingParameters90);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata92 = pcxImageParser0.getMetadata(byteSource20, pcxImagingParameters90);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Pcx-Custom" + "'", str59, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Pcx-Custom" + "'", str60, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertNotNull(pcxImagingParameters73);
        org.junit.Assert.assertNull(byteArray74);
        org.junit.Assert.assertNull(byteArray75);
        org.junit.Assert.assertNull(byteArray76);
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertNull(formatCompliance79);
        org.junit.Assert.assertNull(formatCompliance81);
        org.junit.Assert.assertNull(byteArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "pcx" + "'", str87, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters88);
        org.junit.Assert.assertNotNull(byteOrder89);
        org.junit.Assert.assertNotNull(pcxImagingParameters90);
        org.junit.Assert.assertNull(imageMetadata91);
        org.junit.Assert.assertNull(imageMetadata92);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat26 = null;
        boolean boolean27 = pcxImageParser21.canAcceptType(imageFormat26);
        java.lang.String str28 = pcxImageParser21.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        java.lang.String str30 = pcxImageParser21.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource20, pcxImagingParameters31);
        boolean boolean34 = pcxImageParser0.canAcceptExtension("pcx");
        boolean boolean36 = pcxImageParser0.canAcceptExtension("");
        java.nio.ByteOrder byteOrder37 = pcxImageParser0.getByteOrder();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteOrder37);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        java.lang.String str8 = pcxImageParser0.getName();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser0.getFormatCompliance(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Pcx-Custom" + "'", str8, "Pcx-Custom");
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser21.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser21.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser32.getMetadata(byteSource38, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser46.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser50.getMetadata(byteSource54);
        boolean boolean57 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser46.getMetadata(byteSource49, pcxImagingParameters58);
        byte[] byteArray60 = pcxImageParser32.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser32.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = null;
        byte[] byteArray67 = pcxImageParser64.getIccProfileBytes(byteSource65, pcxImagingParameters66);
        java.nio.ByteOrder byteOrder68 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser64.getMetadata(byteSource69, pcxImagingParameters78);
        byte[] byteArray80 = pcxImageParser32.getIccProfileBytes(byteSource63, pcxImagingParameters78);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser21.getMetadata(byteSource31, pcxImagingParameters78);
        byte[] byteArray82 = pcxImageParser8.getIccProfileBytes(byteSource20, pcxImagingParameters78);
        byte[] byteArray83 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters78);
        org.apache.commons.imaging.bytesource.ByteSource byteSource84 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance85 = pcxImageParser0.getFormatCompliance(byteSource84);
        org.apache.commons.imaging.bytesource.ByteSource byteSource86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo87 = pcxImageParser0.getImageInfo(byteSource86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNull(byteArray82);
        org.junit.Assert.assertNull(byteArray83);
        org.junit.Assert.assertNull(formatCompliance85);
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        java.lang.String str7 = pcxImageParser0.getName();
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str9 = pcxImageParser0.dumpImageFile(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(byteSource23, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser0.getFormatCompliance(byteSource34);
        java.nio.ByteOrder byteOrder36 = pcxImageParser0.getByteOrder();
        java.io.File file37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = pcxImageParser0.dumpImageFile(file37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(byteOrder36);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        java.lang.String str5 = pcxImageParser0.getName();
        boolean boolean7 = pcxImageParser0.canAcceptExtension("");
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str10 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        java.lang.String str13 = pcxImageParser9.getName();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.ImageFormat imageFormat15 = null;
        boolean boolean16 = pcxImageParser9.canAcceptType(imageFormat15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser18.getName();
        java.lang.String str23 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser18.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser9.getMetadata(byteSource17, pcxImagingParameters26);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(file8, pcxImagingParameters26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser17.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getName();
        java.lang.String str39 = pcxImageParser34.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource40, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = null;
        byte[] byteArray51 = pcxImageParser48.getIccProfileBytes(byteSource49, pcxImagingParameters50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        byte[] byteArray53 = pcxImageParser34.getIccProfileBytes(byteSource47, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser17.getIccProfileBytes(byteSource33, pcxImagingParameters52);
        byte[] byteArray55 = pcxImageParser9.getIccProfileBytes(byteSource16, pcxImagingParameters52);
        byte[] byteArray56 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser0.getFormatCompliance(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser0.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = null;
        byte[] byteArray65 = pcxImageParser62.getIccProfileBytes(byteSource63, pcxImagingParameters64);
        java.lang.String str66 = pcxImageParser62.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser62.getDefaultParameters();
        java.nio.ByteOrder byteOrder68 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser0.getMetadata(byteSource61, pcxImagingParameters69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo72 = pcxImageParser0.getImageInfo(byteSource71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "pcx" + "'", str66, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata70);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.io.File file4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser5.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        java.lang.String str9 = pcxImageParser5.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser5.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser5.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage13 = pcxImageParser0.getBufferedImage(file4, pcxImagingParameters12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        java.lang.String str25 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder26 = pcxImageParser0.getByteOrder();
        java.lang.String str27 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser0.getFormatCompliance(byteSource28);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "pcx" + "'", str25, "pcx");
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance29);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray10 = pcxImageParser0.getIccProfileBytes(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser0.getFormatCompliance(byteSource17);
        java.io.PrintWriter printWriter19 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = pcxImageParser0.dumpImageFile(printWriter19, byteSource20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(formatCompliance18);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser2 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str3 = pcxImageParser2.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance5 = pcxImageParser2.getFormatCompliance(byteSource4);
        boolean boolean7 = pcxImageParser2.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser2.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser11.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser15.getMetadata(byteSource19);
        boolean boolean22 = pcxImageParser15.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser11.getMetadata(byteSource14, pcxImagingParameters23);
        byte[] byteArray25 = pcxImageParser2.getIccProfileBytes(byteSource10, pcxImagingParameters23);
        java.nio.ByteOrder byteOrder26 = pcxImageParser2.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = null;
        byte[] byteArray31 = pcxImageParser28.getIccProfileBytes(byteSource29, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser28.getName();
        java.lang.String str33 = pcxImageParser28.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser28.getMetadata(byteSource34, pcxImagingParameters39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser42.getMetadata(byteSource43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser46.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser46.getMetadata(byteSource50);
        boolean boolean53 = pcxImageParser46.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser42.getMetadata(byteSource45, pcxImagingParameters54);
        byte[] byteArray56 = pcxImageParser28.getIccProfileBytes(byteSource41, pcxImagingParameters54);
        org.apache.commons.imaging.ImageFormat imageFormat57 = null;
        boolean boolean58 = pcxImageParser28.canAcceptType(imageFormat57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder61 = pcxImageParser60.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance63 = pcxImageParser60.getFormatCompliance(byteSource62);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat65 = null;
        boolean boolean66 = pcxImageParser60.canAcceptType(imageFormat65);
        java.lang.String str67 = pcxImageParser60.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser60.getDefaultParameters();
        byte[] byteArray69 = pcxImageParser28.getIccProfileBytes(byteSource59, pcxImagingParameters68);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser2.getMetadata(byteSource27, pcxImagingParameters68);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo71 = pcxImageParser0.getImageInfo(byteSource1, pcxImagingParameters68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "Pcx-Custom" + "'", str3, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(byteArray25);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNull(formatCompliance63);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "pcx" + "'", str67, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(byteArray69);
        org.junit.Assert.assertNull(imageMetadata70);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser3 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder4 = pcxImageParser3.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser3.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser3.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser3.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource2, pcxImagingParameters21);
        java.lang.String str25 = pcxImageParser0.getName();
        java.io.File file26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension27 = pcxImageParser0.getImageSize(file26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.ImageFormat imageFormat24 = null;
        boolean boolean25 = pcxImageParser0.canAcceptType(imageFormat24);
        java.io.File file26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(file26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser0.getDefaultParameters();
        java.lang.String str43 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser0.getFormatCompliance(byteSource44);
        java.io.File file46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser0.getMetadata(file46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance45);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage7 = pcxImageParser0.getBufferedImage(byteSource5, pcxImagingParameters6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        boolean boolean21 = pcxImageParser0.canAcceptExtension("hi!");
        java.nio.ByteOrder byteOrder22 = pcxImageParser0.getByteOrder();
        java.io.File file23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str25 = pcxImageParser24.getName();
        java.nio.ByteOrder byteOrder26 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser24.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser32.getMetadata(byteSource36);
        boolean boolean39 = pcxImageParser32.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = null;
        byte[] byteArray45 = pcxImageParser42.getIccProfileBytes(byteSource43, pcxImagingParameters44);
        java.lang.String str46 = pcxImageParser42.getName();
        java.lang.String str47 = pcxImageParser42.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser42.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat56 = null;
        boolean boolean57 = pcxImageParser51.canAcceptType(imageFormat56);
        java.lang.String str58 = pcxImageParser51.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        byte[] byteArray60 = pcxImageParser42.getIccProfileBytes(byteSource50, pcxImagingParameters59);
        byte[] byteArray61 = pcxImageParser32.getIccProfileBytes(byteSource41, pcxImagingParameters59);
        byte[] byteArray62 = pcxImageParser24.getIccProfileBytes(byteSource31, pcxImagingParameters59);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage63 = pcxImageParser0.getBufferedImage(file23, pcxImagingParameters59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "pcx" + "'", str58, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertNull(byteArray62);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(byteSource25);
        java.lang.String str27 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser29.getName();
        java.lang.String str34 = pcxImageParser29.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser29.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat43 = null;
        boolean boolean44 = pcxImageParser38.canAcceptType(imageFormat43);
        java.lang.String str45 = pcxImageParser38.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        byte[] byteArray47 = pcxImageParser29.getIccProfileBytes(byteSource37, pcxImagingParameters46);
        org.apache.commons.imaging.ImageFormat imageFormat48 = null;
        boolean boolean49 = pcxImageParser29.canAcceptType(imageFormat48);
        org.apache.commons.imaging.ImageFormat imageFormat50 = null;
        boolean boolean51 = pcxImageParser29.canAcceptType(imageFormat50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = null;
        byte[] byteArray62 = pcxImageParser59.getIccProfileBytes(byteSource60, pcxImagingParameters61);
        java.lang.String str63 = pcxImageParser59.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser59.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser53.getMetadata(byteSource58, pcxImagingParameters64);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser29.getMetadata(byteSource52, pcxImagingParameters66);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage68 = pcxImageParser0.getBufferedImage(byteSource28, pcxImagingParameters66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "pcx" + "'", str63, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(imageMetadata67);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser0.getName();
        java.lang.String str26 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = null;
        byte[] byteArray31 = pcxImageParser28.getIccProfileBytes(byteSource29, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser28.getName();
        java.lang.String str33 = pcxImageParser28.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser28.getMetadata(byteSource34, pcxImagingParameters39);
        java.lang.String str41 = pcxImageParser28.getName();
        org.apache.commons.imaging.ImageFormat imageFormat42 = null;
        boolean boolean43 = pcxImageParser28.canAcceptType(imageFormat42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser28.getDefaultParameters();
        byte[] byteArray45 = pcxImageParser0.getIccProfileBytes(byteSource27, pcxImagingParameters44);
        java.io.File file46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser47.getMetadata(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser51.getMetadata(byteSource55);
        boolean boolean58 = pcxImageParser51.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser47.getMetadata(byteSource50, pcxImagingParameters59);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo61 = pcxImageParser0.getImageInfo(file46, pcxImagingParameters59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser0.getMetadata(byteSource28);
        boolean boolean31 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo33 = pcxImageParser0.getImageInfo(byteSource32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = pcxImageParser0.dumpImageFile(byteSource30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        java.awt.image.BufferedImage bufferedImage8 = null;
        java.io.OutputStream outputStream9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser10.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage8, outputStream9, pcxImagingParameters18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser0.getDefaultParameters();
        java.lang.String str19 = pcxImageParser0.getName();
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.ImageFormat imageFormat26 = null;
        boolean boolean27 = pcxImageParser0.canAcceptType(imageFormat26);
        boolean boolean29 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.File file30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser0.getMetadata(file30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.nio.ByteOrder byteOrder10 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = pcxImageParser0.dumpImageFile(byteSource11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertNotNull(byteOrder10);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        java.lang.Class<?> wildcardClass8 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser34.getMetadata(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser38.getMetadata(byteSource42);
        boolean boolean45 = pcxImageParser38.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser34.getMetadata(byteSource37, pcxImagingParameters46);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource33, pcxImagingParameters46);
        java.lang.String str49 = pcxImageParser0.getDefaultExtension();
        java.io.File file50 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray51 = pcxImageParser0.getIccProfileBytes(file50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "pcx" + "'", str49, "pcx");
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        java.lang.String str29 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder30 = pcxImageParser0.getByteOrder();
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder30);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat22 = null;
        boolean boolean23 = pcxImageParser0.canAcceptType(imageFormat22);
        java.io.File file24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = null;
        byte[] byteArray31 = pcxImageParser25.getIccProfileBytes(byteSource29, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser33.getMetadata(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser33.getMetadata(byteSource36);
        java.lang.String str38 = pcxImageParser33.getDefaultExtension();
        java.lang.String str39 = pcxImageParser33.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser25.getMetadata(byteSource32, pcxImagingParameters40);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension42 = pcxImageParser0.getImageSize(file24, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "pcx" + "'", str38, "pcx");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser15.getMetadata(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser19.getMetadata(byteSource23);
        boolean boolean26 = pcxImageParser19.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser15.getMetadata(byteSource18, pcxImagingParameters27);
        byte[] byteArray29 = pcxImageParser9.getIccProfileBytes(byteSource14, pcxImagingParameters27);
        java.lang.String str30 = pcxImageParser9.getName();
        java.lang.String str31 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat38 = null;
        boolean boolean39 = pcxImageParser33.canAcceptType(imageFormat38);
        java.lang.String str40 = pcxImageParser33.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser33.getDefaultParameters();
        byte[] byteArray42 = pcxImageParser9.getIccProfileBytes(byteSource32, pcxImagingParameters41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser9.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser9.getMetadata(byteSource45);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(file8, pcxImagingParameters47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "pcx" + "'", str40, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo6 = pcxImageParser0.getImageInfo(byteSource5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser0.getDefaultParameters();
        java.lang.String str43 = pcxImageParser0.getName();
        java.io.File file44 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser0.getMetadata(file44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder23 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str26 = pcxImageParser25.getName();
        org.apache.commons.imaging.ImageFormat imageFormat27 = null;
        boolean boolean28 = pcxImageParser25.canAcceptType(imageFormat27);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser25.canAcceptType(imageFormat29);
        boolean boolean32 = pcxImageParser25.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.ImageFormat imageFormat33 = null;
        boolean boolean34 = pcxImageParser25.canAcceptType(imageFormat33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = null;
        byte[] byteArray39 = pcxImageParser36.getIccProfileBytes(byteSource37, pcxImagingParameters38);
        java.lang.String str40 = pcxImageParser36.getName();
        java.lang.String str41 = pcxImageParser36.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser36.getMetadata(byteSource42, pcxImagingParameters47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser50.getMetadata(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder55 = pcxImageParser54.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance57 = pcxImageParser54.getFormatCompliance(byteSource56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser54.getMetadata(byteSource58);
        boolean boolean61 = pcxImageParser54.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser54.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser50.getMetadata(byteSource53, pcxImagingParameters62);
        byte[] byteArray64 = pcxImageParser36.getIccProfileBytes(byteSource49, pcxImagingParameters62);
        java.nio.ByteOrder byteOrder65 = pcxImageParser36.getByteOrder();
        java.lang.String str66 = pcxImageParser36.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance68 = pcxImageParser36.getFormatCompliance(byteSource67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser70.getMetadata(byteSource71);
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser74 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder75 = pcxImageParser74.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance77 = pcxImageParser74.getFormatCompliance(byteSource76);
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser74.getMetadata(byteSource78);
        boolean boolean81 = pcxImageParser74.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters82 = pcxImageParser74.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata83 = pcxImageParser70.getMetadata(byteSource73, pcxImagingParameters82);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata84 = pcxImageParser36.getMetadata(byteSource69, pcxImagingParameters82);
        byte[] byteArray85 = pcxImageParser25.getIccProfileBytes(byteSource35, pcxImagingParameters82);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage86 = pcxImageParser0.getBufferedImage(byteSource24, pcxImagingParameters82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNotNull(byteOrder55);
        org.junit.Assert.assertNull(formatCompliance57);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "pcx" + "'", str66, "pcx");
        org.junit.Assert.assertNull(formatCompliance68);
        org.junit.Assert.assertNull(imageMetadata72);
        org.junit.Assert.assertNotNull(byteOrder75);
        org.junit.Assert.assertNull(formatCompliance77);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters82);
        org.junit.Assert.assertNull(imageMetadata83);
        org.junit.Assert.assertNull(imageMetadata84);
        org.junit.Assert.assertNull(byteArray85);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(byteSource25);
        java.lang.String str27 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder28 = pcxImageParser0.getByteOrder();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertNotNull(byteOrder28);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser0.getFormatCompliance(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser8.getDefaultParameters();
        byte[] byteArray14 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser0.getName();
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray17 = pcxImageParser0.getIccProfileBytes(file16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource21, pcxImagingParameters22);
        java.nio.ByteOrder byteOrder24 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser32.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser36.getMetadata(byteSource40);
        boolean boolean43 = pcxImageParser36.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser32.getMetadata(byteSource35, pcxImagingParameters44);
        byte[] byteArray46 = pcxImageParser26.getIccProfileBytes(byteSource31, pcxImagingParameters44);
        java.lang.String str47 = pcxImageParser26.getDefaultExtension();
        java.lang.String str48 = pcxImageParser26.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat49 = null;
        boolean boolean50 = pcxImageParser26.canAcceptType(imageFormat49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser26.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser0.getMetadata(byteSource25, pcxImagingParameters53);
        java.io.File file55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = null;
        byte[] byteArray59 = pcxImageParser56.getIccProfileBytes(byteSource57, pcxImagingParameters58);
        java.lang.String str60 = pcxImageParser56.getName();
        java.lang.String str61 = pcxImageParser56.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder64 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser63.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser56.getMetadata(byteSource62, pcxImagingParameters67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser56.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance72 = pcxImageParser56.getFormatCompliance(byteSource71);
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser74 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str75 = pcxImageParser74.getName();
        java.nio.ByteOrder byteOrder76 = pcxImageParser74.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat77 = null;
        boolean boolean78 = pcxImageParser74.canAcceptType(imageFormat77);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser74.getDefaultParameters();
        byte[] byteArray80 = pcxImageParser56.getIccProfileBytes(byteSource73, pcxImagingParameters79);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray81 = pcxImageParser0.getIccProfileBytes(file55, pcxImagingParameters79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "pcx" + "'", str48, "pcx");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Pcx-Custom" + "'", str60, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Pcx-Custom" + "'", str61, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNull(formatCompliance72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "Pcx-Custom" + "'", str75, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
        org.junit.Assert.assertNull(byteArray80);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(byteSource23, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser44.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser48.getMetadata(byteSource52);
        boolean boolean55 = pcxImageParser48.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser44.getMetadata(byteSource47, pcxImagingParameters56);
        byte[] byteArray58 = pcxImageParser38.getIccProfileBytes(byteSource43, pcxImagingParameters56);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser35.getMetadata(byteSource37, pcxImagingParameters56);
        byte[] byteArray60 = pcxImageParser0.getIccProfileBytes(byteSource34, pcxImagingParameters56);
        org.apache.commons.imaging.ImageFormat imageFormat61 = null;
        boolean boolean62 = pcxImageParser0.canAcceptType(imageFormat61);
        java.lang.String str63 = pcxImageParser0.getName();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "Pcx-Custom" + "'", str63, "Pcx-Custom");
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str28 = pcxImageParser0.dumpImageFile(byteSource27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList8 = pcxImageParser0.getAllBufferedImages(byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        java.nio.ByteOrder byteOrder33 = pcxImageParser0.getByteOrder();
        java.io.File file34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser35.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser35.getMetadata(byteSource38);
        java.lang.String str40 = pcxImageParser35.getDefaultExtension();
        java.lang.String str41 = pcxImageParser35.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser35.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage43 = pcxImageParser0.getBufferedImage(file34, pcxImagingParameters42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "pcx" + "'", str40, "pcx");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "pcx" + "'", str41, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.lang.String str16 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder17 = pcxImageParser0.getByteOrder();
        java.io.File file18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser0.getFormatCompliance(file18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(byteOrder17);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.ImageFormat imageFormat25 = null;
        boolean boolean26 = pcxImageParser0.canAcceptType(imageFormat25);
        java.lang.String str27 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        java.io.File file29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser30.getMetadata(byteSource34);
        boolean boolean37 = pcxImageParser30.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = null;
        byte[] byteArray43 = pcxImageParser40.getIccProfileBytes(byteSource41, pcxImagingParameters42);
        java.lang.String str44 = pcxImageParser40.getName();
        java.lang.String str45 = pcxImageParser40.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser40.getMetadata(byteSource46, pcxImagingParameters51);
        java.lang.String str53 = pcxImageParser40.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser40.getMetadata(byteSource54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = null;
        byte[] byteArray60 = pcxImageParser57.getIccProfileBytes(byteSource58, pcxImagingParameters59);
        java.lang.String str61 = pcxImageParser57.getName();
        java.lang.String str62 = pcxImageParser57.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder65 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance67 = pcxImageParser64.getFormatCompliance(byteSource66);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser64.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser57.getMetadata(byteSource63, pcxImagingParameters68);
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = null;
        byte[] byteArray74 = pcxImageParser71.getIccProfileBytes(byteSource72, pcxImagingParameters73);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser71.getDefaultParameters();
        byte[] byteArray76 = pcxImageParser57.getIccProfileBytes(byteSource70, pcxImagingParameters75);
        byte[] byteArray77 = pcxImageParser40.getIccProfileBytes(byteSource56, pcxImagingParameters75);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata78 = pcxImageParser30.getMetadata(byteSource39, pcxImagingParameters75);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo79 = pcxImageParser0.getImageInfo(file29, pcxImagingParameters75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Pcx-Custom" + "'", str53, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Pcx-Custom" + "'", str61, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Pcx-Custom" + "'", str62, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNull(formatCompliance67);
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(imageMetadata69);
        org.junit.Assert.assertNull(byteArray74);
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(byteArray76);
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertNull(imageMetadata78);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat43 = null;
        boolean boolean44 = pcxImageParser0.canAcceptType(imageFormat43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo46 = pcxImageParser0.getImageInfo(byteSource45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.ImageFormat imageFormat25 = null;
        boolean boolean26 = pcxImageParser0.canAcceptType(imageFormat25);
        java.lang.String str27 = pcxImageParser0.getName();
        java.io.File file28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension29 = pcxImageParser0.getImageSize(file28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser35.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser39.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser39.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser35.getMetadata(byteSource38, pcxImagingParameters47);
        byte[] byteArray49 = pcxImageParser29.getIccProfileBytes(byteSource34, pcxImagingParameters47);
        java.lang.String str50 = pcxImageParser29.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser0.getMetadata(byteSource28, pcxImagingParameters51);
        java.io.File file53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = null;
        byte[] byteArray57 = pcxImageParser54.getIccProfileBytes(byteSource55, pcxImagingParameters56);
        java.lang.String str58 = pcxImageParser54.getName();
        java.lang.String str59 = pcxImageParser54.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser54.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser54.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage63 = pcxImageParser0.getBufferedImage(file53, pcxImagingParameters62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Pcx-Custom" + "'", str58, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Pcx-Custom" + "'", str59, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        java.nio.ByteOrder byteOrder5 = pcxImageParser0.getByteOrder();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension7 = pcxImageParser0.getImageSize(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteOrder5);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        boolean boolean8 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.nio.ByteOrder byteOrder14 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser10.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser18.getName();
        java.lang.String str23 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser18.getMetadata(byteSource24, pcxImagingParameters29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser32.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser36.getMetadata(byteSource40);
        boolean boolean43 = pcxImageParser36.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser32.getMetadata(byteSource35, pcxImagingParameters44);
        byte[] byteArray46 = pcxImageParser18.getIccProfileBytes(byteSource31, pcxImagingParameters44);
        org.apache.commons.imaging.ImageFormat imageFormat47 = null;
        boolean boolean48 = pcxImageParser18.canAcceptType(imageFormat47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser18.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser10.getMetadata(byteSource17, pcxImagingParameters51);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo53 = pcxImageParser0.getImageInfo(byteSource9, pcxImagingParameters51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat13 = null;
        boolean boolean14 = pcxImageParser0.canAcceptType(imageFormat13);
        java.io.File file15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = pcxImageParser0.canAcceptExtension(file15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        java.nio.ByteOrder byteOrder5 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage12 = pcxImageParser0.getBufferedImage(byteSource6, pcxImagingParameters11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser0.getDefaultExtension();
        java.io.File file30 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray31 = pcxImageParser0.getIccProfileBytes(file30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "pcx" + "'", str29, "pcx");
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(imageMetadata8);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser0.getMetadata(byteSource32);
        java.io.File file34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser0.getFormatCompliance(file34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(imageMetadata33);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        boolean boolean11 = pcxImageParser0.canAcceptExtension("hi!");
        java.nio.ByteOrder byteOrder12 = pcxImageParser0.getByteOrder();
        java.awt.image.BufferedImage bufferedImage13 = null;
        java.io.OutputStream outputStream14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat20 = null;
        boolean boolean21 = pcxImageParser15.canAcceptType(imageFormat20);
        java.lang.String str22 = pcxImageParser15.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser15.getDefaultParameters();
        java.lang.String str24 = pcxImageParser15.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser15.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage13, outputStream14, pcxImagingParameters25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource12);
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray15 = pcxImageParser0.getIccProfileBytes(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(imageMetadata13);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.io.File file33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension34 = pcxImageParser0.getImageSize(file33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder25 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser33.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser27.getMetadata(byteSource32, pcxImagingParameters38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser27.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource26, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser0.getDefaultParameters();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "pcx" + "'", str37, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        boolean boolean19 = pcxImageParser0.canAcceptExtension("");
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        java.lang.String str9 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser0.getDefaultParameters();
        boolean boolean12 = pcxImageParser0.canAcceptExtension("");
        java.io.File file13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        java.lang.String str18 = pcxImageParser14.getName();
        java.lang.String str19 = pcxImageParser14.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser14.getMetadata(byteSource20, pcxImagingParameters25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser28.getMetadata(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser32.getMetadata(byteSource36);
        boolean boolean39 = pcxImageParser32.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser28.getMetadata(byteSource31, pcxImagingParameters40);
        byte[] byteArray42 = pcxImageParser14.getIccProfileBytes(byteSource27, pcxImagingParameters40);
        java.nio.ByteOrder byteOrder43 = pcxImageParser14.getByteOrder();
        java.lang.String str44 = pcxImageParser14.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser14.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser48.getMetadata(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder53 = pcxImageParser52.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser52.getFormatCompliance(byteSource54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser52.getMetadata(byteSource56);
        boolean boolean59 = pcxImageParser52.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser48.getMetadata(byteSource51, pcxImagingParameters60);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser14.getMetadata(byteSource47, pcxImagingParameters60);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray63 = pcxImageParser0.getIccProfileBytes(file13, pcxImagingParameters60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "pcx" + "'", str44, "pcx");
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNull(imageMetadata62);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str10 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        java.lang.String str13 = pcxImageParser9.getName();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.ImageFormat imageFormat15 = null;
        boolean boolean16 = pcxImageParser9.canAcceptType(imageFormat15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser9.getMetadata(byteSource17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        byte[] byteArray23 = pcxImageParser20.getIccProfileBytes(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser20.getName();
        java.lang.String str25 = pcxImageParser20.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser20.getMetadata(byteSource26, pcxImagingParameters31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser34.getMetadata(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser38.getMetadata(byteSource42);
        boolean boolean45 = pcxImageParser38.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser34.getMetadata(byteSource37, pcxImagingParameters46);
        byte[] byteArray48 = pcxImageParser20.getIccProfileBytes(byteSource33, pcxImagingParameters46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser20.getFormatCompliance(byteSource49);
        java.nio.ByteOrder byteOrder51 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = null;
        byte[] byteArray56 = pcxImageParser53.getIccProfileBytes(byteSource54, pcxImagingParameters55);
        java.lang.String str57 = pcxImageParser53.getName();
        java.lang.String str58 = pcxImageParser53.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder61 = pcxImageParser60.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance63 = pcxImageParser60.getFormatCompliance(byteSource62);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser53.getMetadata(byteSource59, pcxImagingParameters64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser67 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser67.getMetadata(byteSource68);
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder72 = pcxImageParser71.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance74 = pcxImageParser71.getFormatCompliance(byteSource73);
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser71.getMetadata(byteSource75);
        boolean boolean78 = pcxImageParser71.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser71.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser67.getMetadata(byteSource70, pcxImagingParameters79);
        byte[] byteArray81 = pcxImageParser53.getIccProfileBytes(byteSource66, pcxImagingParameters79);
        byte[] byteArray82 = pcxImageParser20.getIccProfileBytes(byteSource52, pcxImagingParameters79);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata83 = pcxImageParser9.getMetadata(byteSource19, pcxImagingParameters79);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo84 = pcxImageParser0.getImageInfo(byteSource8, pcxImagingParameters79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Pcx-Custom" + "'", str57, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Pcx-Custom" + "'", str58, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNull(formatCompliance63);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNull(imageMetadata69);
        org.junit.Assert.assertNotNull(byteOrder72);
        org.junit.Assert.assertNull(formatCompliance74);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertNull(byteArray81);
        org.junit.Assert.assertNull(byteArray82);
        org.junit.Assert.assertNull(imageMetadata83);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat43 = null;
        boolean boolean44 = pcxImageParser0.canAcceptType(imageFormat43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser0.getFormatCompliance(byteSource45);
        java.io.File file47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser54.getMetadata(byteSource55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser58.getMetadata(byteSource62);
        boolean boolean65 = pcxImageParser58.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser54.getMetadata(byteSource57, pcxImagingParameters66);
        byte[] byteArray68 = pcxImageParser48.getIccProfileBytes(byteSource53, pcxImagingParameters66);
        java.lang.String str69 = pcxImageParser48.getName();
        java.lang.String str70 = pcxImageParser48.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser72 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder73 = pcxImageParser72.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance75 = pcxImageParser72.getFormatCompliance(byteSource74);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = pcxImageParser72.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat77 = null;
        boolean boolean78 = pcxImageParser72.canAcceptType(imageFormat77);
        java.lang.String str79 = pcxImageParser72.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters80 = pcxImageParser72.getDefaultParameters();
        byte[] byteArray81 = pcxImageParser48.getIccProfileBytes(byteSource71, pcxImagingParameters80);
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance83 = pcxImageParser48.getFormatCompliance(byteSource82);
        org.apache.commons.imaging.bytesource.ByteSource byteSource84 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata85 = pcxImageParser48.getMetadata(byteSource84);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters86 = pcxImageParser48.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension87 = pcxImageParser0.getImageSize(file47, pcxImagingParameters86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertNull(byteArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Pcx-Custom" + "'", str69, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "pcx" + "'", str70, "pcx");
        org.junit.Assert.assertNotNull(byteOrder73);
        org.junit.Assert.assertNull(formatCompliance75);
        org.junit.Assert.assertNotNull(pcxImagingParameters76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "pcx" + "'", str79, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters80);
        org.junit.Assert.assertNull(byteArray81);
        org.junit.Assert.assertNull(formatCompliance83);
        org.junit.Assert.assertNull(imageMetadata85);
        org.junit.Assert.assertNotNull(pcxImagingParameters86);
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser3 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder4 = pcxImageParser3.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser3.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser3.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser3.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource2, pcxImagingParameters21);
        java.lang.String str25 = pcxImageParser0.getName();
        java.io.File file26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList27 = pcxImageParser0.getAllBufferedImages(file26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getDefaultExtension();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser18.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser18.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser28.getMetadata(byteSource33, pcxImagingParameters39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser18.getMetadata(byteSource27, pcxImagingParameters41);
        java.lang.String str43 = pcxImageParser18.getName();
        java.lang.String str44 = pcxImageParser18.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = null;
        byte[] byteArray49 = pcxImageParser46.getIccProfileBytes(byteSource47, pcxImagingParameters48);
        java.lang.String str50 = pcxImageParser46.getName();
        java.lang.String str51 = pcxImageParser46.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser46.getMetadata(byteSource52, pcxImagingParameters57);
        java.lang.String str59 = pcxImageParser46.getName();
        org.apache.commons.imaging.ImageFormat imageFormat60 = null;
        boolean boolean61 = pcxImageParser46.canAcceptType(imageFormat60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser46.getDefaultParameters();
        byte[] byteArray63 = pcxImageParser18.getIccProfileBytes(byteSource45, pcxImagingParameters62);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters62);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser0.getMetadata(byteSource10, pcxImagingParameters62);
        java.lang.String str66 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "pcx" + "'", str15, "pcx");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "pcx" + "'", str38, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Pcx-Custom" + "'", str59, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "pcx" + "'", str66, "pcx");
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser0.getMetadata(byteSource32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser0.getFormatCompliance(byteSource35);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(formatCompliance36);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = null;
        byte[] byteArray6 = pcxImageParser0.getIccProfileBytes(byteSource4, pcxImagingParameters5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo8 = pcxImageParser0.getImageInfo(byteSource7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNull(byteArray6);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo7 = pcxImageParser0.getImageInfo(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat43 = null;
        boolean boolean44 = pcxImageParser0.canAcceptType(imageFormat43);
        java.io.File file45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = null;
        byte[] byteArray49 = pcxImageParser46.getIccProfileBytes(byteSource47, pcxImagingParameters48);
        java.lang.String str50 = pcxImageParser46.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser46.getDefaultParameters();
        java.nio.ByteOrder byteOrder52 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder56 = pcxImageParser55.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser55.getFormatCompliance(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser55.getMetadata(byteSource59);
        boolean boolean62 = pcxImageParser55.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat63 = null;
        boolean boolean64 = pcxImageParser55.canAcceptType(imageFormat63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser66 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser66.getMetadata(byteSource67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser76 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata78 = pcxImageParser76.getMetadata(byteSource77);
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser80 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder81 = pcxImageParser80.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance83 = pcxImageParser80.getFormatCompliance(byteSource82);
        org.apache.commons.imaging.bytesource.ByteSource byteSource84 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata85 = pcxImageParser80.getMetadata(byteSource84);
        boolean boolean87 = pcxImageParser80.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters88 = pcxImageParser80.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata89 = pcxImageParser76.getMetadata(byteSource79, pcxImagingParameters88);
        byte[] byteArray90 = pcxImageParser70.getIccProfileBytes(byteSource75, pcxImagingParameters88);
        java.lang.String str91 = pcxImageParser70.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters92 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata93 = pcxImageParser66.getMetadata(byteSource69, pcxImagingParameters92);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata94 = pcxImageParser55.getMetadata(byteSource65, pcxImagingParameters92);
        byte[] byteArray95 = pcxImageParser46.getIccProfileBytes(byteSource54, pcxImagingParameters92);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension96 = pcxImageParser0.getImageSize(file45, pcxImagingParameters92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "pcx" + "'", str50, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertNull(imageMetadata78);
        org.junit.Assert.assertNotNull(byteOrder81);
        org.junit.Assert.assertNull(formatCompliance83);
        org.junit.Assert.assertNull(imageMetadata85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters88);
        org.junit.Assert.assertNull(imageMetadata89);
        org.junit.Assert.assertNull(byteArray90);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "Pcx-Custom" + "'", str91, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters92);
        org.junit.Assert.assertNull(imageMetadata93);
        org.junit.Assert.assertNull(imageMetadata94);
        org.junit.Assert.assertNull(byteArray95);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean6 = pcxImageParser0.canAcceptExtension(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.ImageFormat imageFormat31 = null;
        boolean boolean32 = pcxImageParser0.canAcceptType(imageFormat31);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser35.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser39.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser39.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser35.getMetadata(byteSource38, pcxImagingParameters47);
        byte[] byteArray49 = pcxImageParser29.getIccProfileBytes(byteSource34, pcxImagingParameters47);
        java.lang.String str50 = pcxImageParser29.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser0.getMetadata(byteSource28, pcxImagingParameters51);
        java.nio.ByteOrder byteOrder53 = pcxImageParser0.getByteOrder();
        java.lang.String str54 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser56.getMetadata(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder61 = pcxImageParser60.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance63 = pcxImageParser60.getFormatCompliance(byteSource62);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser66 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser66.getMetadata(byteSource67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser70.getMetadata(byteSource74);
        boolean boolean77 = pcxImageParser70.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser66.getMetadata(byteSource69, pcxImagingParameters78);
        byte[] byteArray80 = pcxImageParser60.getIccProfileBytes(byteSource65, pcxImagingParameters78);
        java.lang.String str81 = pcxImageParser60.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters82 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata83 = pcxImageParser56.getMetadata(byteSource59, pcxImagingParameters82);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata85 = pcxImageParser0.getMetadata(byteSource55, pcxImagingParameters84);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass86 = imageMetadata85.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNull(formatCompliance63);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNull(imageMetadata75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Pcx-Custom" + "'", str81, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters82);
        org.junit.Assert.assertNull(imageMetadata83);
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertNull(imageMetadata85);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = pcxImageParser0.dumpImageFile(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        org.apache.commons.imaging.ImageFormat imageFormat9 = null;
        boolean boolean10 = pcxImageParser0.canAcceptType(imageFormat9);
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = pcxImageParser0.dumpImageFile(file11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser21.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser21.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser32.getMetadata(byteSource38, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser46.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser50.getMetadata(byteSource54);
        boolean boolean57 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser46.getMetadata(byteSource49, pcxImagingParameters58);
        byte[] byteArray60 = pcxImageParser32.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser32.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = null;
        byte[] byteArray67 = pcxImageParser64.getIccProfileBytes(byteSource65, pcxImagingParameters66);
        java.nio.ByteOrder byteOrder68 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser64.getMetadata(byteSource69, pcxImagingParameters78);
        byte[] byteArray80 = pcxImageParser32.getIccProfileBytes(byteSource63, pcxImagingParameters78);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser21.getMetadata(byteSource31, pcxImagingParameters78);
        byte[] byteArray82 = pcxImageParser8.getIccProfileBytes(byteSource20, pcxImagingParameters78);
        byte[] byteArray83 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters78);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource85 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser86 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder87 = pcxImageParser86.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource88 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance89 = pcxImageParser86.getFormatCompliance(byteSource88);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters90 = pcxImageParser86.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat91 = null;
        boolean boolean92 = pcxImageParser86.canAcceptType(imageFormat91);
        java.lang.String str93 = pcxImageParser86.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters94 = pcxImageParser86.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata95 = pcxImageParser0.getMetadata(byteSource85, pcxImagingParameters94);
        java.io.File file96 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray97 = pcxImageParser0.getIccProfileBytes(file96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNull(byteArray82);
        org.junit.Assert.assertNull(byteArray83);
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertNotNull(byteOrder87);
        org.junit.Assert.assertNull(formatCompliance89);
        org.junit.Assert.assertNotNull(pcxImagingParameters90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "pcx" + "'", str93, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters94);
        org.junit.Assert.assertNull(imageMetadata95);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        java.lang.Class<?> wildcardClass8 = byteOrder7.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder7 = pcxImageParser0.getByteOrder();
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser35.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser39.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser39.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser35.getMetadata(byteSource38, pcxImagingParameters47);
        byte[] byteArray49 = pcxImageParser29.getIccProfileBytes(byteSource34, pcxImagingParameters47);
        java.lang.String str50 = pcxImageParser29.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser0.getMetadata(byteSource28, pcxImagingParameters51);
        java.nio.ByteOrder byteOrder53 = pcxImageParser0.getByteOrder();
        java.lang.String str54 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser56.getMetadata(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder61 = pcxImageParser60.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance63 = pcxImageParser60.getFormatCompliance(byteSource62);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser66 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser66.getMetadata(byteSource67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser70.getMetadata(byteSource74);
        boolean boolean77 = pcxImageParser70.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser66.getMetadata(byteSource69, pcxImagingParameters78);
        byte[] byteArray80 = pcxImageParser60.getIccProfileBytes(byteSource65, pcxImagingParameters78);
        java.lang.String str81 = pcxImageParser60.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters82 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata83 = pcxImageParser56.getMetadata(byteSource59, pcxImagingParameters82);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata85 = pcxImageParser0.getMetadata(byteSource55, pcxImagingParameters84);
        java.lang.String str86 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNull(formatCompliance63);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNull(imageMetadata75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Pcx-Custom" + "'", str81, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters82);
        org.junit.Assert.assertNull(imageMetadata83);
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertNull(imageMetadata85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "pcx" + "'", str86, "pcx");
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.awt.image.BufferedImage bufferedImage31 = null;
        java.io.OutputStream outputStream32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser33.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser33.getDefaultParameters();
        java.nio.ByteOrder byteOrder39 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser42.getMetadata(byteSource46);
        boolean boolean49 = pcxImageParser42.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat50 = null;
        boolean boolean51 = pcxImageParser42.canAcceptType(imageFormat50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser53.getMetadata(byteSource54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder58 = pcxImageParser57.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser57.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser63.getMetadata(byteSource64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser67 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder68 = pcxImageParser67.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser67.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser67.getMetadata(byteSource71);
        boolean boolean74 = pcxImageParser67.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser63.getMetadata(byteSource66, pcxImagingParameters75);
        byte[] byteArray77 = pcxImageParser57.getIccProfileBytes(byteSource62, pcxImagingParameters75);
        java.lang.String str78 = pcxImageParser57.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser53.getMetadata(byteSource56, pcxImagingParameters79);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser42.getMetadata(byteSource52, pcxImagingParameters79);
        byte[] byteArray82 = pcxImageParser33.getIccProfileBytes(byteSource41, pcxImagingParameters79);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage31, outputStream32, pcxImagingParameters79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "pcx" + "'", str37, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNull(imageMetadata72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Pcx-Custom" + "'", str78, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNull(byteArray82);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.lang.String str6 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        java.lang.String str14 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser9.getMetadata(byteSource15, pcxImagingParameters16);
        java.lang.String str18 = pcxImageParser9.getDefaultExtension();
        boolean boolean20 = pcxImageParser9.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser9.getDefaultParameters();
        java.lang.String str22 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = null;
        byte[] byteArray27 = pcxImageParser24.getIccProfileBytes(byteSource25, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser24.getDefaultExtension();
        java.lang.String str29 = pcxImageParser24.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        java.lang.String str35 = pcxImageParser31.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser31.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser31.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat41 = null;
        boolean boolean42 = pcxImageParser31.canAcceptType(imageFormat41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser31.getDefaultParameters();
        byte[] byteArray44 = pcxImageParser24.getIccProfileBytes(byteSource30, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser9.getIccProfileBytes(byteSource23, pcxImagingParameters43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage47 = pcxImageParser0.getBufferedImage(byteSource8, pcxImagingParameters46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "pcx" + "'", str6, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "pcx" + "'", str14, "pcx");
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "pcx" + "'", str18, "pcx");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNull(byteArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource21, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getName();
        java.lang.String str30 = pcxImageParser25.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser25.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat39 = null;
        boolean boolean40 = pcxImageParser34.canAcceptType(imageFormat39);
        java.lang.String str41 = pcxImageParser34.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray43 = pcxImageParser25.getIccProfileBytes(byteSource33, pcxImagingParameters42);
        org.apache.commons.imaging.ImageFormat imageFormat44 = null;
        boolean boolean45 = pcxImageParser25.canAcceptType(imageFormat44);
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser25.canAcceptType(imageFormat46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser25.getDefaultParameters();
        byte[] byteArray49 = pcxImageParser0.getIccProfileBytes(byteSource24, pcxImagingParameters48);
        java.io.File file50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList51 = pcxImageParser0.getAllBufferedImages(file50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "pcx" + "'", str41, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(byteArray49);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        boolean boolean10 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource11);
        java.io.File file13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str15 = pcxImageParser14.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser14.getMetadata(byteSource16);
        org.apache.commons.imaging.ImageFormat imageFormat18 = null;
        boolean boolean19 = pcxImageParser14.canAcceptType(imageFormat18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str22 = pcxImageParser21.getName();
        java.nio.ByteOrder byteOrder23 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat24 = null;
        boolean boolean25 = pcxImageParser21.canAcceptType(imageFormat24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser36.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser40.getMetadata(byteSource44);
        boolean boolean47 = pcxImageParser40.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser36.getMetadata(byteSource39, pcxImagingParameters48);
        byte[] byteArray50 = pcxImageParser30.getIccProfileBytes(byteSource35, pcxImagingParameters48);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser27.getMetadata(byteSource29, pcxImagingParameters48);
        byte[] byteArray52 = pcxImageParser21.getIccProfileBytes(byteSource26, pcxImagingParameters48);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser14.getMetadata(byteSource20, pcxImagingParameters48);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension54 = pcxImageParser0.getImageSize(file13, pcxImagingParameters48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertNull(imageMetadata53);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.nio.ByteOrder byteOrder5 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNotNull(byteOrder6);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(byteSource9);
        java.lang.String str11 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser0.getFormatCompliance(byteSource12);
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList15 = pcxImageParser0.getAllBufferedImages(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "pcx" + "'", str11, "pcx");
        org.junit.Assert.assertNull(formatCompliance13);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource16, pcxImagingParameters21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser24.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser28.getMetadata(byteSource32);
        boolean boolean35 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser24.getMetadata(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser10.getIccProfileBytes(byteSource23, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser10.getFormatCompliance(byteSource39);
        java.nio.ByteOrder byteOrder41 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.lang.String str47 = pcxImageParser43.getName();
        java.lang.String str48 = pcxImageParser43.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser43.getMetadata(byteSource49, pcxImagingParameters54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser57.getMetadata(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder62 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser61.getFormatCompliance(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser61.getMetadata(byteSource65);
        boolean boolean68 = pcxImageParser61.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser61.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser57.getMetadata(byteSource60, pcxImagingParameters69);
        byte[] byteArray71 = pcxImageParser43.getIccProfileBytes(byteSource56, pcxImagingParameters69);
        byte[] byteArray72 = pcxImageParser10.getIccProfileBytes(byteSource42, pcxImagingParameters69);
        byte[] byteArray73 = pcxImageParser0.getIccProfileBytes(byteSource9, pcxImagingParameters69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance75 = pcxImageParser0.getFormatCompliance(byteSource74);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNull(formatCompliance75);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.io.PrintWriter printWriter7 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = pcxImageParser0.dumpImageFile(printWriter7, byteSource8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList29 = pcxImageParser0.getAllBufferedImages(byteSource28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata27);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(byteSource14);
        boolean boolean17 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser19.getMetadata(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser29.getMetadata(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser33.getMetadata(byteSource37);
        boolean boolean40 = pcxImageParser33.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser29.getMetadata(byteSource32, pcxImagingParameters41);
        byte[] byteArray43 = pcxImageParser23.getIccProfileBytes(byteSource28, pcxImagingParameters41);
        java.lang.String str44 = pcxImageParser23.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser19.getMetadata(byteSource22, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser54.getMetadata(byteSource55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser58.getMetadata(byteSource62);
        boolean boolean65 = pcxImageParser58.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser54.getMetadata(byteSource57, pcxImagingParameters66);
        byte[] byteArray68 = pcxImageParser48.getIccProfileBytes(byteSource53, pcxImagingParameters66);
        java.lang.String str69 = pcxImageParser48.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser19.getMetadata(byteSource47, pcxImagingParameters70);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension72 = pcxImageParser0.getImageSize(byteSource18, pcxImagingParameters70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertNull(byteArray68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "Pcx-Custom" + "'", str69, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertNull(imageMetadata71);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser0.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser19.getMetadata(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser23.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser33.getMetadata(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser37.getMetadata(byteSource41);
        boolean boolean44 = pcxImageParser37.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser33.getMetadata(byteSource36, pcxImagingParameters45);
        byte[] byteArray47 = pcxImageParser27.getIccProfileBytes(byteSource32, pcxImagingParameters45);
        java.lang.String str48 = pcxImageParser27.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser23.getMetadata(byteSource26, pcxImagingParameters49);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser19.getMetadata(byteSource22, pcxImagingParameters49);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage52 = pcxImageParser0.getBufferedImage(byteSource18, pcxImagingParameters49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNull(imageMetadata51);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser35.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser39.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser39.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser35.getMetadata(byteSource38, pcxImagingParameters47);
        byte[] byteArray49 = pcxImageParser29.getIccProfileBytes(byteSource34, pcxImagingParameters47);
        java.lang.String str50 = pcxImageParser29.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser0.getMetadata(byteSource28, pcxImagingParameters51);
        java.nio.ByteOrder byteOrder53 = pcxImageParser0.getByteOrder();
        java.lang.String str54 = pcxImageParser0.getName();
        java.io.File file55 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser0.getFormatCompliance(file55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource21, pcxImagingParameters22);
        java.nio.ByteOrder byteOrder24 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser32.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser36.getMetadata(byteSource40);
        boolean boolean43 = pcxImageParser36.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser32.getMetadata(byteSource35, pcxImagingParameters44);
        byte[] byteArray46 = pcxImageParser26.getIccProfileBytes(byteSource31, pcxImagingParameters44);
        java.lang.String str47 = pcxImageParser26.getDefaultExtension();
        java.lang.String str48 = pcxImageParser26.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat49 = null;
        boolean boolean50 = pcxImageParser26.canAcceptType(imageFormat49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser26.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser0.getMetadata(byteSource25, pcxImagingParameters53);
        java.lang.String str55 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo57 = pcxImageParser0.getImageInfo(byteSource56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "pcx" + "'", str48, "pcx");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "pcx" + "'", str55, "pcx");
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str8 = pcxImageParser7.getName();
        java.nio.ByteOrder byteOrder9 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser7.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.ImageFormat imageFormat12 = null;
        boolean boolean13 = pcxImageParser7.canAcceptType(imageFormat12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser15.getMetadata(byteSource19);
        boolean boolean22 = pcxImageParser15.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getName();
        java.lang.String str30 = pcxImageParser25.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser25.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat39 = null;
        boolean boolean40 = pcxImageParser34.canAcceptType(imageFormat39);
        java.lang.String str41 = pcxImageParser34.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray43 = pcxImageParser25.getIccProfileBytes(byteSource33, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser15.getIccProfileBytes(byteSource24, pcxImagingParameters42);
        byte[] byteArray45 = pcxImageParser7.getIccProfileBytes(byteSource14, pcxImagingParameters42);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser0.getDefaultParameters();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Pcx-Custom" + "'", str8, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "pcx" + "'", str41, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.nio.ByteOrder byteOrder16 = pcxImageParser0.getByteOrder();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(byteOrder16);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser0.getMetadata(byteSource28);
        java.io.File file30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str31 = pcxImageParser0.dumpImageFile(file30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(imageMetadata29);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser9.getMetadata(byteSource13);
        boolean boolean16 = pcxImageParser9.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat17 = null;
        boolean boolean18 = pcxImageParser9.canAcceptType(imageFormat17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser20.getMetadata(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser30.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser34.getMetadata(byteSource38);
        boolean boolean41 = pcxImageParser34.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser30.getMetadata(byteSource33, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser24.getIccProfileBytes(byteSource29, pcxImagingParameters42);
        java.lang.String str45 = pcxImageParser24.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser20.getMetadata(byteSource23, pcxImagingParameters46);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser9.getMetadata(byteSource19, pcxImagingParameters46);
        byte[] byteArray49 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser0.getMetadata(byteSource50);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(imageMetadata51);
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str9 = pcxImageParser8.getName();
        java.nio.ByteOrder byteOrder10 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser8.canAcceptType(imageFormat11);
        org.apache.commons.imaging.ImageFormat imageFormat13 = null;
        boolean boolean14 = pcxImageParser8.canAcceptType(imageFormat13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str17 = pcxImageParser16.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        java.lang.String str20 = pcxImageParser16.getName();
        java.lang.String str21 = pcxImageParser16.getName();
        org.apache.commons.imaging.ImageFormat imageFormat22 = null;
        boolean boolean23 = pcxImageParser16.canAcceptType(imageFormat22);
        boolean boolean25 = pcxImageParser16.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = null;
        byte[] byteArray30 = pcxImageParser27.getIccProfileBytes(byteSource28, pcxImagingParameters29);
        java.lang.String str31 = pcxImageParser27.getName();
        java.lang.String str32 = pcxImageParser27.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser27.getMetadata(byteSource33, pcxImagingParameters38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = null;
        byte[] byteArray44 = pcxImageParser41.getIccProfileBytes(byteSource42, pcxImagingParameters43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        byte[] byteArray46 = pcxImageParser27.getIccProfileBytes(byteSource40, pcxImagingParameters45);
        byte[] byteArray47 = pcxImageParser16.getIccProfileBytes(byteSource26, pcxImagingParameters45);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser8.getMetadata(byteSource15, pcxImagingParameters45);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo49 = pcxImageParser0.getImageInfo(byteSource7, pcxImagingParameters45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertNull(imageMetadata48);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser0.getMetadata(byteSource39);
        org.apache.commons.imaging.ImageFormat imageFormat41 = null;
        boolean boolean42 = pcxImageParser0.canAcceptType(imageFormat41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser0.getDefaultParameters();
        java.io.File file44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = null;
        byte[] byteArray48 = pcxImageParser45.getIccProfileBytes(byteSource46, pcxImagingParameters47);
        java.lang.String str49 = pcxImageParser45.getName();
        java.lang.String str50 = pcxImageParser45.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser45.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder55 = pcxImageParser54.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance57 = pcxImageParser54.getFormatCompliance(byteSource56);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser54.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat59 = null;
        boolean boolean60 = pcxImageParser54.canAcceptType(imageFormat59);
        java.lang.String str61 = pcxImageParser54.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser54.getDefaultParameters();
        byte[] byteArray63 = pcxImageParser45.getIccProfileBytes(byteSource53, pcxImagingParameters62);
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser45.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser45.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo67 = pcxImageParser0.getImageInfo(file44, pcxImagingParameters66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Pcx-Custom" + "'", str49, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(byteOrder55);
        org.junit.Assert.assertNull(formatCompliance57);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "pcx" + "'", str61, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser0.getDefaultParameters();
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = pcxImageParser0.dumpImageFile(file11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser0.getFormatCompliance(byteSource18);
        java.nio.ByteOrder byteOrder20 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser0.getMetadata(byteSource21);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(imageMetadata22);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        boolean boolean10 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser0.canAcceptType(imageFormat11);
        java.io.File file13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser0.getFormatCompliance(file13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder8 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource16, pcxImagingParameters21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser24.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser28.getMetadata(byteSource32);
        boolean boolean35 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser24.getMetadata(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser10.getIccProfileBytes(byteSource23, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser10.getFormatCompliance(byteSource39);
        java.nio.ByteOrder byteOrder41 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.lang.String str47 = pcxImageParser43.getName();
        java.lang.String str48 = pcxImageParser43.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser43.getMetadata(byteSource49, pcxImagingParameters54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser57.getMetadata(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder62 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser61.getFormatCompliance(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser61.getMetadata(byteSource65);
        boolean boolean68 = pcxImageParser61.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser61.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser57.getMetadata(byteSource60, pcxImagingParameters69);
        byte[] byteArray71 = pcxImageParser43.getIccProfileBytes(byteSource56, pcxImagingParameters69);
        byte[] byteArray72 = pcxImageParser10.getIccProfileBytes(byteSource42, pcxImagingParameters69);
        byte[] byteArray73 = pcxImageParser0.getIccProfileBytes(byteSource9, pcxImagingParameters69);
        java.nio.ByteOrder byteOrder74 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser0.getMetadata(byteSource75);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNotNull(byteOrder74);
        org.junit.Assert.assertNull(imageMetadata76);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = pcxImageParser0.dumpImageFile(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder23 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat30 = null;
        boolean boolean31 = pcxImageParser25.canAcceptType(imageFormat30);
        java.lang.String str32 = pcxImageParser25.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser25.getDefaultParameters();
        java.lang.String str34 = pcxImageParser25.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser25.getDefaultParameters();
        byte[] byteArray36 = pcxImageParser0.getIccProfileBytes(byteSource24, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "pcx" + "'", str32, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(imageMetadata38);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.ImageFormat imageFormat1 = null;
        boolean boolean2 = pcxImageParser0.canAcceptType(imageFormat1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        java.lang.String str11 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser6.getMetadata(byteSource12);
        boolean boolean15 = pcxImageParser6.canAcceptExtension("");
        boolean boolean17 = pcxImageParser6.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = null;
        byte[] byteArray22 = pcxImageParser19.getIccProfileBytes(byteSource20, pcxImagingParameters21);
        java.lang.String str23 = pcxImageParser19.getName();
        java.lang.String str24 = pcxImageParser19.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser19.getMetadata(byteSource25, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser33.getMetadata(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser37.getMetadata(byteSource41);
        boolean boolean44 = pcxImageParser37.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser33.getMetadata(byteSource36, pcxImagingParameters45);
        byte[] byteArray47 = pcxImageParser19.getIccProfileBytes(byteSource32, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser19.getFormatCompliance(byteSource48);
        java.nio.ByteOrder byteOrder50 = pcxImageParser19.getByteOrder();
        java.nio.ByteOrder byteOrder51 = pcxImageParser19.getByteOrder();
        java.lang.String str52 = pcxImageParser19.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser6.getMetadata(byteSource18, pcxImagingParameters53);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters53);
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "pcx" + "'", str11, "pcx");
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(byteArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Pcx-Custom" + "'", str52, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNull(imageMetadata55);
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.lang.String str6 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str10 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser9.getMetadata(byteSource11);
        org.apache.commons.imaging.ImageFormat imageFormat13 = null;
        boolean boolean14 = pcxImageParser9.canAcceptType(imageFormat13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str17 = pcxImageParser16.getName();
        java.nio.ByteOrder byteOrder18 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser16.canAcceptType(imageFormat19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser31.getMetadata(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser35.getMetadata(byteSource39);
        boolean boolean42 = pcxImageParser35.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser31.getMetadata(byteSource34, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser25.getIccProfileBytes(byteSource30, pcxImagingParameters43);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser22.getMetadata(byteSource24, pcxImagingParameters43);
        byte[] byteArray47 = pcxImageParser16.getIccProfileBytes(byteSource21, pcxImagingParameters43);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser9.getMetadata(byteSource15, pcxImagingParameters43);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray49 = pcxImageParser0.getIccProfileBytes(file8, pcxImagingParameters43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Pcx-Custom" + "'", str6, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertNull(imageMetadata48);
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser8.getDefaultParameters();
        byte[] byteArray14 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters13);
        org.apache.commons.imaging.ImageFormat imageFormat15 = null;
        boolean boolean16 = pcxImageParser0.canAcceptType(imageFormat15);
        java.lang.String str17 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "pcx" + "'", str17, "pcx");
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser21.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser21.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser32.getMetadata(byteSource38, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser46.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser50.getMetadata(byteSource54);
        boolean boolean57 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser46.getMetadata(byteSource49, pcxImagingParameters58);
        byte[] byteArray60 = pcxImageParser32.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser32.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = null;
        byte[] byteArray67 = pcxImageParser64.getIccProfileBytes(byteSource65, pcxImagingParameters66);
        java.nio.ByteOrder byteOrder68 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser64.getMetadata(byteSource69, pcxImagingParameters78);
        byte[] byteArray80 = pcxImageParser32.getIccProfileBytes(byteSource63, pcxImagingParameters78);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser21.getMetadata(byteSource31, pcxImagingParameters78);
        byte[] byteArray82 = pcxImageParser8.getIccProfileBytes(byteSource20, pcxImagingParameters78);
        byte[] byteArray83 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters78);
        java.io.File file84 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata85 = pcxImageParser0.getMetadata(file84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNull(byteArray82);
        org.junit.Assert.assertNull(byteArray83);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.io.File file26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser27.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser37.getMetadata(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser41.getMetadata(byteSource45);
        boolean boolean48 = pcxImageParser41.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser37.getMetadata(byteSource40, pcxImagingParameters49);
        byte[] byteArray51 = pcxImageParser31.getIccProfileBytes(byteSource36, pcxImagingParameters49);
        java.lang.String str52 = pcxImageParser31.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser27.getMetadata(byteSource30, pcxImagingParameters53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser27.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser0.getMetadata(file26, pcxImagingParameters55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Pcx-Custom" + "'", str52, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser24.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser24.getDefaultParameters();
        byte[] byteArray33 = pcxImageParser0.getIccProfileBytes(byteSource23, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser44.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser48.getMetadata(byteSource52);
        boolean boolean55 = pcxImageParser48.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser44.getMetadata(byteSource47, pcxImagingParameters56);
        byte[] byteArray58 = pcxImageParser38.getIccProfileBytes(byteSource43, pcxImagingParameters56);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser35.getMetadata(byteSource37, pcxImagingParameters56);
        byte[] byteArray60 = pcxImageParser0.getIccProfileBytes(byteSource34, pcxImagingParameters56);
        org.apache.commons.imaging.ImageFormat imageFormat61 = null;
        boolean boolean62 = pcxImageParser0.canAcceptType(imageFormat61);
        java.io.File file63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = null;
        byte[] byteArray67 = pcxImageParser64.getIccProfileBytes(byteSource65, pcxImagingParameters66);
        java.nio.ByteOrder byteOrder68 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser64.getMetadata(byteSource69, pcxImagingParameters78);
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser81 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder82 = pcxImageParser81.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource83 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance84 = pcxImageParser81.getFormatCompliance(byteSource83);
        org.apache.commons.imaging.bytesource.ByteSource byteSource85 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata86 = pcxImageParser81.getMetadata(byteSource85);
        boolean boolean88 = pcxImageParser81.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters89 = pcxImageParser81.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata90 = pcxImageParser64.getMetadata(byteSource80, pcxImagingParameters89);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray91 = pcxImageParser0.getIccProfileBytes(file63, pcxImagingParameters89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(byteArray58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNotNull(byteOrder82);
        org.junit.Assert.assertNull(formatCompliance84);
        org.junit.Assert.assertNull(imageMetadata86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters89);
        org.junit.Assert.assertNull(imageMetadata90);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getName();
        java.lang.String str11 = pcxImageParser6.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser6.getMetadata(byteSource12, pcxImagingParameters17);
        boolean boolean20 = pcxImageParser6.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser6.getFormatCompliance(byteSource21);
        java.lang.String str23 = pcxImageParser6.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser6.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension25 = pcxImageParser0.getImageSize(file5, pcxImagingParameters24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser0.getFormatCompliance(byteSource43);
        java.lang.String str45 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser0.canAcceptType(imageFormat46);
        java.io.File file48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = null;
        byte[] byteArray52 = pcxImageParser49.getIccProfileBytes(byteSource50, pcxImagingParameters51);
        java.lang.String str53 = pcxImageParser49.getName();
        java.lang.String str54 = pcxImageParser49.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser49.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat63 = null;
        boolean boolean64 = pcxImageParser58.canAcceptType(imageFormat63);
        java.lang.String str65 = pcxImageParser58.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser58.getDefaultParameters();
        byte[] byteArray67 = pcxImageParser49.getIccProfileBytes(byteSource57, pcxImagingParameters66);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser49.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage69 = pcxImageParser0.getBufferedImage(file48, pcxImagingParameters68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Pcx-Custom" + "'", str53, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "pcx" + "'", str65, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser27.getMetadata(byteSource31);
        boolean boolean34 = pcxImageParser27.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = null;
        byte[] byteArray40 = pcxImageParser37.getIccProfileBytes(byteSource38, pcxImagingParameters39);
        java.lang.String str41 = pcxImageParser37.getName();
        java.lang.String str42 = pcxImageParser37.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser37.getMetadata(byteSource43, pcxImagingParameters48);
        java.lang.String str50 = pcxImageParser37.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser37.getMetadata(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = null;
        byte[] byteArray57 = pcxImageParser54.getIccProfileBytes(byteSource55, pcxImagingParameters56);
        java.lang.String str58 = pcxImageParser54.getName();
        java.lang.String str59 = pcxImageParser54.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder62 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser61.getFormatCompliance(byteSource63);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser61.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser54.getMetadata(byteSource60, pcxImagingParameters65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = null;
        byte[] byteArray71 = pcxImageParser68.getIccProfileBytes(byteSource69, pcxImagingParameters70);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser68.getDefaultParameters();
        byte[] byteArray73 = pcxImageParser54.getIccProfileBytes(byteSource67, pcxImagingParameters72);
        byte[] byteArray74 = pcxImageParser37.getIccProfileBytes(byteSource53, pcxImagingParameters72);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser27.getMetadata(byteSource36, pcxImagingParameters72);
        byte[] byteArray76 = pcxImageParser0.getIccProfileBytes(byteSource26, pcxImagingParameters72);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Pcx-Custom" + "'", str58, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Pcx-Custom" + "'", str59, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNull(byteArray74);
        org.junit.Assert.assertNull(imageMetadata75);
        org.junit.Assert.assertNull(byteArray76);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser0.getDefaultParameters();
        java.lang.String str28 = pcxImageParser0.getDefaultExtension();
        java.io.File file29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser30.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser30.getMetadata(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser30.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension59 = pcxImageParser0.getImageSize(file29, pcxImagingParameters58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder60 = pcxImageParser59.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser59.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser59.getDefaultParameters();
        java.lang.String str64 = pcxImageParser59.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser59.getMetadata(byteSource65, pcxImagingParameters66);
        java.lang.String str68 = pcxImageParser59.getDefaultExtension();
        boolean boolean70 = pcxImageParser59.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = pcxImageParser59.getDefaultParameters();
        java.lang.String str72 = pcxImageParser59.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser74 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = null;
        byte[] byteArray77 = pcxImageParser74.getIccProfileBytes(byteSource75, pcxImagingParameters76);
        java.lang.String str78 = pcxImageParser74.getDefaultExtension();
        java.lang.String str79 = pcxImageParser74.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser81 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = null;
        byte[] byteArray84 = pcxImageParser81.getIccProfileBytes(byteSource82, pcxImagingParameters83);
        java.lang.String str85 = pcxImageParser81.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource86 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata87 = pcxImageParser81.getMetadata(byteSource86);
        org.apache.commons.imaging.bytesource.ByteSource byteSource88 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance89 = pcxImageParser81.getFormatCompliance(byteSource88);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters90 = pcxImageParser81.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat91 = null;
        boolean boolean92 = pcxImageParser81.canAcceptType(imageFormat91);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters93 = pcxImageParser81.getDefaultParameters();
        byte[] byteArray94 = pcxImageParser74.getIccProfileBytes(byteSource80, pcxImagingParameters93);
        byte[] byteArray95 = pcxImageParser59.getIccProfileBytes(byteSource73, pcxImagingParameters93);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters96 = pcxImageParser59.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata97 = pcxImageParser0.getMetadata(byteSource58, pcxImagingParameters96);
        org.apache.commons.imaging.bytesource.ByteSource byteSource98 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance99 = pcxImageParser0.getFormatCompliance(byteSource98);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "pcx" + "'", str64, "pcx");
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "pcx" + "'", str68, "pcx");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "pcx" + "'", str72, "pcx");
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "pcx" + "'", str78, "pcx");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Pcx-Custom" + "'", str79, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "Pcx-Custom" + "'", str85, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata87);
        org.junit.Assert.assertNull(formatCompliance89);
        org.junit.Assert.assertNotNull(pcxImagingParameters90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters93);
        org.junit.Assert.assertNull(byteArray94);
        org.junit.Assert.assertNull(byteArray95);
        org.junit.Assert.assertNotNull(pcxImagingParameters96);
        org.junit.Assert.assertNull(imageMetadata97);
        org.junit.Assert.assertNull(formatCompliance99);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.lang.String str16 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo18 = pcxImageParser0.getImageInfo(byteSource17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat20 = null;
        boolean boolean21 = pcxImageParser0.canAcceptType(imageFormat20);
        java.io.PrintWriter printWriter22 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean24 = pcxImageParser0.dumpImageFile(printWriter22, byteSource23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        boolean boolean29 = pcxImageParser0.canAcceptExtension("hi!");
        java.io.File file30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension31 = pcxImageParser0.getImageSize(file30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser24.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser28.getMetadata(byteSource32);
        boolean boolean35 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser24.getMetadata(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser18.getIccProfileBytes(byteSource23, pcxImagingParameters36);
        java.lang.String str39 = pcxImageParser18.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters40);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser44.getDefaultParameters();
        java.lang.String str49 = pcxImageParser44.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser44.getMetadata(byteSource50);
        boolean boolean53 = pcxImageParser44.canAcceptExtension("");
        boolean boolean55 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = null;
        byte[] byteArray60 = pcxImageParser57.getIccProfileBytes(byteSource58, pcxImagingParameters59);
        java.lang.String str61 = pcxImageParser57.getName();
        java.lang.String str62 = pcxImageParser57.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder65 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance67 = pcxImageParser64.getFormatCompliance(byteSource66);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser64.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser57.getMetadata(byteSource63, pcxImagingParameters68);
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser71.getMetadata(byteSource72);
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser75 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder76 = pcxImageParser75.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance78 = pcxImageParser75.getFormatCompliance(byteSource77);
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser75.getMetadata(byteSource79);
        boolean boolean82 = pcxImageParser75.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = pcxImageParser75.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata84 = pcxImageParser71.getMetadata(byteSource74, pcxImagingParameters83);
        byte[] byteArray85 = pcxImageParser57.getIccProfileBytes(byteSource70, pcxImagingParameters83);
        org.apache.commons.imaging.bytesource.ByteSource byteSource86 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance87 = pcxImageParser57.getFormatCompliance(byteSource86);
        java.nio.ByteOrder byteOrder88 = pcxImageParser57.getByteOrder();
        java.nio.ByteOrder byteOrder89 = pcxImageParser57.getByteOrder();
        java.lang.String str90 = pcxImageParser57.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters91 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata92 = pcxImageParser44.getMetadata(byteSource56, pcxImagingParameters91);
        byte[] byteArray93 = pcxImageParser10.getIccProfileBytes(byteSource43, pcxImagingParameters91);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata94 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters91);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "pcx" + "'", str49, "pcx");
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Pcx-Custom" + "'", str61, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Pcx-Custom" + "'", str62, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder65);
        org.junit.Assert.assertNull(formatCompliance67);
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(imageMetadata69);
        org.junit.Assert.assertNull(imageMetadata73);
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNull(formatCompliance78);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters83);
        org.junit.Assert.assertNull(imageMetadata84);
        org.junit.Assert.assertNull(byteArray85);
        org.junit.Assert.assertNull(formatCompliance87);
        org.junit.Assert.assertNotNull(byteOrder88);
        org.junit.Assert.assertNotNull(byteOrder89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Pcx-Custom" + "'", str90, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters91);
        org.junit.Assert.assertNull(imageMetadata92);
        org.junit.Assert.assertNull(byteArray93);
        org.junit.Assert.assertNull(imageMetadata94);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser34.getMetadata(byteSource38);
        boolean boolean41 = pcxImageParser34.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = null;
        byte[] byteArray47 = pcxImageParser44.getIccProfileBytes(byteSource45, pcxImagingParameters46);
        java.lang.String str48 = pcxImageParser44.getName();
        java.lang.String str49 = pcxImageParser44.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser44.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat58 = null;
        boolean boolean59 = pcxImageParser53.canAcceptType(imageFormat58);
        java.lang.String str60 = pcxImageParser53.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser53.getDefaultParameters();
        byte[] byteArray62 = pcxImageParser44.getIccProfileBytes(byteSource52, pcxImagingParameters61);
        byte[] byteArray63 = pcxImageParser34.getIccProfileBytes(byteSource43, pcxImagingParameters61);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo64 = pcxImageParser0.getImageInfo(byteSource33, pcxImagingParameters61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Pcx-Custom" + "'", str49, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "pcx" + "'", str60, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertNull(byteArray63);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        java.io.File file24 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean25 = pcxImageParser0.canAcceptExtension(file24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder5 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.io.File file8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList9 = pcxImageParser0.getAllBufferedImages(file8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser0.getMetadata(byteSource43);
        java.io.File file45 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str46 = pcxImageParser0.dumpImageFile(file45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata44);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        java.io.PrintWriter printWriter14 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean16 = pcxImageParser0.dumpImageFile(printWriter14, byteSource15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        boolean boolean23 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser0.getDefaultParameters();
        boolean boolean26 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = null;
        byte[] byteArray31 = pcxImageParser28.getIccProfileBytes(byteSource29, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser28.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser28.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser28.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        java.lang.String str43 = pcxImageParser39.getName();
        java.lang.String str44 = pcxImageParser39.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser46.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser39.getMetadata(byteSource45, pcxImagingParameters50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser53.getMetadata(byteSource54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder58 = pcxImageParser57.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser57.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser57.getMetadata(byteSource61);
        boolean boolean64 = pcxImageParser57.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser53.getMetadata(byteSource56, pcxImagingParameters65);
        byte[] byteArray67 = pcxImageParser39.getIccProfileBytes(byteSource52, pcxImagingParameters65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance69 = pcxImageParser39.getFormatCompliance(byteSource68);
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = null;
        byte[] byteArray74 = pcxImageParser71.getIccProfileBytes(byteSource72, pcxImagingParameters73);
        java.nio.ByteOrder byteOrder75 = pcxImageParser71.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser77 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder78 = pcxImageParser77.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance80 = pcxImageParser77.getFormatCompliance(byteSource79);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters81 = pcxImageParser77.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat82 = null;
        boolean boolean83 = pcxImageParser77.canAcceptType(imageFormat82);
        java.lang.String str84 = pcxImageParser77.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters85 = pcxImageParser77.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata86 = pcxImageParser71.getMetadata(byteSource76, pcxImagingParameters85);
        byte[] byteArray87 = pcxImageParser39.getIccProfileBytes(byteSource70, pcxImagingParameters85);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata88 = pcxImageParser28.getMetadata(byteSource38, pcxImagingParameters85);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension89 = pcxImageParser0.getImageSize(byteSource27, pcxImagingParameters85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNull(formatCompliance69);
        org.junit.Assert.assertNull(byteArray74);
        org.junit.Assert.assertNotNull(byteOrder75);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNull(formatCompliance80);
        org.junit.Assert.assertNotNull(pcxImagingParameters81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "pcx" + "'", str84, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters85);
        org.junit.Assert.assertNull(imageMetadata86);
        org.junit.Assert.assertNull(byteArray87);
        org.junit.Assert.assertNull(imageMetadata88);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.lang.String str33 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser0.getDefaultParameters();
        boolean boolean36 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser38.getDefaultParameters();
        java.lang.String str43 = pcxImageParser38.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser38.getMetadata(byteSource44);
        boolean boolean47 = pcxImageParser38.canAcceptExtension("");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser0.getMetadata(byteSource37, pcxImagingParameters48);
        java.io.File file50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser57.getMetadata(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder62 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser61.getFormatCompliance(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser61.getMetadata(byteSource65);
        boolean boolean68 = pcxImageParser61.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser61.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser57.getMetadata(byteSource60, pcxImagingParameters69);
        byte[] byteArray71 = pcxImageParser51.getIccProfileBytes(byteSource56, pcxImagingParameters69);
        java.lang.String str72 = pcxImageParser51.getName();
        java.lang.String str73 = pcxImageParser51.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser75 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder76 = pcxImageParser75.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance78 = pcxImageParser75.getFormatCompliance(byteSource77);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser75.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat80 = null;
        boolean boolean81 = pcxImageParser75.canAcceptType(imageFormat80);
        java.lang.String str82 = pcxImageParser75.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = pcxImageParser75.getDefaultParameters();
        byte[] byteArray84 = pcxImageParser51.getIccProfileBytes(byteSource74, pcxImagingParameters83);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata85 = pcxImageParser0.getMetadata(file50, pcxImagingParameters83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "pcx" + "'", str43, "pcx");
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Pcx-Custom" + "'", str72, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "pcx" + "'", str73, "pcx");
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNull(formatCompliance78);
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "pcx" + "'", str82, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters83);
        org.junit.Assert.assertNull(byteArray84);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser0.getDefaultParameters();
        java.lang.String str43 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser0.getFormatCompliance(byteSource44);
        java.io.PrintWriter printWriter46 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean48 = pcxImageParser0.dumpImageFile(printWriter46, byteSource47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance45);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str11 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        java.nio.ByteOrder byteOrder16 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser10.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        java.lang.String str26 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser21.getMetadata(byteSource27, pcxImagingParameters32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser35.getDefaultParameters();
        byte[] byteArray40 = pcxImageParser21.getIccProfileBytes(byteSource34, pcxImagingParameters39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat47 = null;
        boolean boolean48 = pcxImageParser42.canAcceptType(imageFormat47);
        java.lang.String str49 = pcxImageParser42.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser42.getDefaultParameters();
        java.lang.String str51 = pcxImageParser42.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser21.getMetadata(byteSource41, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser10.getIccProfileBytes(byteSource20, pcxImagingParameters52);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension55 = pcxImageParser0.getImageSize(file9, pcxImagingParameters52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "Pcx-Custom" + "'", str26, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "pcx" + "'", str49, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        boolean boolean8 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(byteSource9);
        java.io.File file11 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray12 = pcxImageParser0.getIccProfileBytes(file11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(imageMetadata10);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.ImageFormat imageFormat25 = null;
        boolean boolean26 = pcxImageParser0.canAcceptType(imageFormat25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser0.getDefaultParameters();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        org.apache.commons.imaging.ImageFormat imageFormat4 = null;
        boolean boolean5 = pcxImageParser0.canAcceptType(imageFormat4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        java.nio.ByteOrder byteOrder10 = pcxImageParser0.getByteOrder();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(byteOrder10);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters7);
        java.lang.String str9 = pcxImageParser0.getDefaultExtension();
        boolean boolean11 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList13 = pcxImageParser0.getAllBufferedImages(byteSource12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pcx" + "'", str9, "pcx");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser0.getMetadata(byteSource28);
        java.io.File file30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser0.getFormatCompliance(file30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(imageMetadata29);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser0.getFormatCompliance(byteSource13);
        boolean boolean16 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser0.getMetadata(byteSource17);
        java.io.File file19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension20 = pcxImageParser0.getImageSize(file19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(imageMetadata18);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str7 = pcxImageParser6.getName();
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser6.canAcceptType(imageFormat8);
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser6.canAcceptType(imageFormat10);
        boolean boolean13 = pcxImageParser6.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser6.canAcceptType(imageFormat14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser31.getMetadata(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser35.getMetadata(byteSource39);
        boolean boolean42 = pcxImageParser35.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser31.getMetadata(byteSource34, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser17.getIccProfileBytes(byteSource30, pcxImagingParameters43);
        java.nio.ByteOrder byteOrder46 = pcxImageParser17.getByteOrder();
        java.lang.String str47 = pcxImageParser17.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser17.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser51.getMetadata(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder56 = pcxImageParser55.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser55.getFormatCompliance(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser55.getMetadata(byteSource59);
        boolean boolean62 = pcxImageParser55.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser55.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser51.getMetadata(byteSource54, pcxImagingParameters63);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser17.getMetadata(byteSource50, pcxImagingParameters63);
        byte[] byteArray66 = pcxImageParser6.getIccProfileBytes(byteSource16, pcxImagingParameters63);
        byte[] byteArray67 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters63);
        java.io.File file68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str69 = pcxImageParser0.dumpImageFile(file68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertNull(byteArray67);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser0.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        java.awt.image.BufferedImage bufferedImage9 = null;
        java.io.OutputStream outputStream10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat16 = null;
        boolean boolean17 = pcxImageParser11.canAcceptType(imageFormat16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = null;
        byte[] byteArray22 = pcxImageParser19.getIccProfileBytes(byteSource20, pcxImagingParameters21);
        java.lang.String str23 = pcxImageParser19.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser11.getMetadata(byteSource18, pcxImagingParameters25);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage9, outputStream10, pcxImagingParameters25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "pcx" + "'", str15, "pcx");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(byteArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "pcx" + "'", str23, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata26);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser0.getDefaultParameters();
        java.lang.String str24 = pcxImageParser0.getName();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser0.getDefaultParameters();
        boolean boolean10 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser0.getFormatCompliance(byteSource11);
        java.nio.ByteOrder byteOrder13 = pcxImageParser0.getByteOrder();
        java.io.File file14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension15 = pcxImageParser0.getImageSize(file14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(byteOrder13);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        java.lang.String str33 = pcxImageParser0.getName();
        java.awt.image.BufferedImage bufferedImage34 = null;
        java.io.OutputStream outputStream35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = null;
        byte[] byteArray39 = pcxImageParser36.getIccProfileBytes(byteSource37, pcxImagingParameters38);
        java.lang.String str40 = pcxImageParser36.getName();
        java.lang.String str41 = pcxImageParser36.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser36.getMetadata(byteSource42, pcxImagingParameters47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser50.getMetadata(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder55 = pcxImageParser54.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance57 = pcxImageParser54.getFormatCompliance(byteSource56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser54.getMetadata(byteSource58);
        boolean boolean61 = pcxImageParser54.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser54.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser50.getMetadata(byteSource53, pcxImagingParameters62);
        byte[] byteArray64 = pcxImageParser36.getIccProfileBytes(byteSource49, pcxImagingParameters62);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser36.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = null;
        byte[] byteArray71 = pcxImageParser68.getIccProfileBytes(byteSource69, pcxImagingParameters70);
        java.nio.ByteOrder byteOrder72 = pcxImageParser68.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser74 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder75 = pcxImageParser74.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance77 = pcxImageParser74.getFormatCompliance(byteSource76);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser74.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat79 = null;
        boolean boolean80 = pcxImageParser74.canAcceptType(imageFormat79);
        java.lang.String str81 = pcxImageParser74.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters82 = pcxImageParser74.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata83 = pcxImageParser68.getMetadata(byteSource73, pcxImagingParameters82);
        byte[] byteArray84 = pcxImageParser36.getIccProfileBytes(byteSource67, pcxImagingParameters82);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage34, outputStream35, pcxImagingParameters82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNotNull(byteOrder55);
        org.junit.Assert.assertNull(formatCompliance57);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertNotNull(byteOrder72);
        org.junit.Assert.assertNotNull(byteOrder75);
        org.junit.Assert.assertNull(formatCompliance77);
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "pcx" + "'", str81, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters82);
        org.junit.Assert.assertNull(imageMetadata83);
        org.junit.Assert.assertNull(byteArray84);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource12);
        java.lang.String str14 = pcxImageParser0.getName();
        java.io.File file15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = pcxImageParser0.dumpImageFile(file15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance5 = pcxImageParser0.getFormatCompliance(byteSource4);
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList7 = pcxImageParser0.getAllBufferedImages(byteSource6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(formatCompliance5);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        java.io.File file18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList19 = pcxImageParser0.getAllBufferedImages(file18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNull(imageMetadata17);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        boolean boolean11 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser0.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        java.io.File file12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = pcxImageParser0.dumpImageFile(file12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser10.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat24 = null;
        boolean boolean25 = pcxImageParser19.canAcceptType(imageFormat24);
        java.lang.String str26 = pcxImageParser19.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser19.getDefaultParameters();
        byte[] byteArray28 = pcxImageParser10.getIccProfileBytes(byteSource18, pcxImagingParameters27);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser10.canAcceptType(imageFormat29);
        org.apache.commons.imaging.ImageFormat imageFormat31 = null;
        boolean boolean32 = pcxImageParser10.canAcceptType(imageFormat31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser10.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension34 = pcxImageParser0.getImageSize(byteSource9, pcxImagingParameters33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pcx" + "'", str26, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList11 = pcxImageParser0.getAllBufferedImages(byteSource10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        boolean boolean29 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        java.lang.String str35 = pcxImageParser31.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser31.getDefaultParameters();
        java.nio.ByteOrder byteOrder37 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser31.getDefaultParameters();
        byte[] byteArray39 = pcxImageParser0.getIccProfileBytes(byteSource30, pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "pcx" + "'", str35, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(byteArray39);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.lang.String str16 = pcxImageParser0.getDefaultExtension();
        java.lang.String str17 = pcxImageParser0.getName();
        java.io.File file18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser0.getFormatCompliance(file18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        boolean boolean8 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser0.getFormatCompliance(byteSource9);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(formatCompliance10);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser0.getFormatCompliance(byteSource13);
        java.lang.String str15 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "pcx" + "'", str15, "pcx");
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        boolean boolean8 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(byteSource9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str13 = pcxImageParser12.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        java.lang.String str16 = pcxImageParser12.getName();
        java.lang.String str17 = pcxImageParser12.getName();
        org.apache.commons.imaging.ImageFormat imageFormat18 = null;
        boolean boolean19 = pcxImageParser12.canAcceptType(imageFormat18);
        boolean boolean21 = pcxImageParser12.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = null;
        byte[] byteArray26 = pcxImageParser23.getIccProfileBytes(byteSource24, pcxImagingParameters25);
        java.lang.String str27 = pcxImageParser23.getName();
        java.lang.String str28 = pcxImageParser23.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser23.getMetadata(byteSource29, pcxImagingParameters34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = null;
        byte[] byteArray40 = pcxImageParser37.getIccProfileBytes(byteSource38, pcxImagingParameters39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        byte[] byteArray42 = pcxImageParser23.getIccProfileBytes(byteSource36, pcxImagingParameters41);
        byte[] byteArray43 = pcxImageParser12.getIccProfileBytes(byteSource22, pcxImagingParameters41);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser0.getMetadata(byteSource11, pcxImagingParameters41);
        java.io.File file45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = null;
        byte[] byteArray49 = pcxImageParser46.getIccProfileBytes(byteSource47, pcxImagingParameters48);
        java.lang.String str50 = pcxImageParser46.getName();
        java.lang.String str51 = pcxImageParser46.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser46.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder56 = pcxImageParser55.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser55.getFormatCompliance(byteSource57);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser55.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat60 = null;
        boolean boolean61 = pcxImageParser55.canAcceptType(imageFormat60);
        java.lang.String str62 = pcxImageParser55.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser55.getDefaultParameters();
        byte[] byteArray64 = pcxImageParser46.getIccProfileBytes(byteSource54, pcxImagingParameters63);
        org.apache.commons.imaging.ImageFormat imageFormat65 = null;
        boolean boolean66 = pcxImageParser46.canAcceptType(imageFormat65);
        org.apache.commons.imaging.ImageFormat imageFormat67 = null;
        boolean boolean68 = pcxImageParser46.canAcceptType(imageFormat67);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser46.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension70 = pcxImageParser0.getImageSize(file45, pcxImagingParameters69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "pcx" + "'", str62, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        boolean boolean11 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.io.File file12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = pcxImageParser0.dumpImageFile(file12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser0.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str19 = pcxImageParser18.getName();
        java.nio.ByteOrder byteOrder20 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat21 = null;
        boolean boolean22 = pcxImageParser18.canAcceptType(imageFormat21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser18.getDefaultParameters();
        byte[] byteArray24 = pcxImageParser0.getIccProfileBytes(byteSource17, pcxImagingParameters23);
        java.lang.Class<?> wildcardClass25 = pcxImagingParameters23.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "Pcx-Custom" + "'", str19, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.lang.String str6 = pcxImageParser0.getName();
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str9 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser8.canAcceptType(imageFormat14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser17.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser8.getMetadata(byteSource16, pcxImagingParameters25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser34.getMetadata(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser38.getMetadata(byteSource42);
        boolean boolean45 = pcxImageParser38.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser34.getMetadata(byteSource37, pcxImagingParameters46);
        byte[] byteArray48 = pcxImageParser28.getIccProfileBytes(byteSource33, pcxImagingParameters46);
        java.lang.String str49 = pcxImageParser28.getName();
        java.lang.String str50 = pcxImageParser28.getDefaultExtension();
        java.nio.ByteOrder byteOrder51 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat58 = null;
        boolean boolean59 = pcxImageParser53.canAcceptType(imageFormat58);
        java.lang.String str60 = pcxImageParser53.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser53.getDefaultParameters();
        java.lang.String str62 = pcxImageParser53.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser53.getDefaultParameters();
        byte[] byteArray64 = pcxImageParser28.getIccProfileBytes(byteSource52, pcxImagingParameters63);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser8.getMetadata(byteSource27, pcxImagingParameters63);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser0.getMetadata(file7, pcxImagingParameters63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Pcx-Custom" + "'", str6, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Pcx-Custom" + "'", str49, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "pcx" + "'", str50, "pcx");
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "pcx" + "'", str60, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Pcx-Custom" + "'", str62, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertNull(imageMetadata65);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser9.canAcceptType(imageFormat14);
        java.lang.String str16 = pcxImageParser9.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser0.getMetadata(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        java.awt.image.BufferedImage bufferedImage25 = null;
        java.io.OutputStream outputStream26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        java.lang.String str32 = pcxImageParser27.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser27.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser27.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser27.canAcceptType(imageFormat37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = null;
        byte[] byteArray43 = pcxImageParser40.getIccProfileBytes(byteSource41, pcxImagingParameters42);
        java.lang.String str44 = pcxImageParser40.getName();
        java.lang.String str45 = pcxImageParser40.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser40.getMetadata(byteSource46, pcxImagingParameters51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser54.getMetadata(byteSource55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser58.getMetadata(byteSource62);
        boolean boolean65 = pcxImageParser58.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser54.getMetadata(byteSource57, pcxImagingParameters66);
        byte[] byteArray68 = pcxImageParser40.getIccProfileBytes(byteSource53, pcxImagingParameters66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser40.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser72 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = null;
        byte[] byteArray75 = pcxImageParser72.getIccProfileBytes(byteSource73, pcxImagingParameters74);
        java.nio.ByteOrder byteOrder76 = pcxImageParser72.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser78 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder79 = pcxImageParser78.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance81 = pcxImageParser78.getFormatCompliance(byteSource80);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters82 = pcxImageParser78.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat83 = null;
        boolean boolean84 = pcxImageParser78.canAcceptType(imageFormat83);
        java.lang.String str85 = pcxImageParser78.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters86 = pcxImageParser78.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata87 = pcxImageParser72.getMetadata(byteSource77, pcxImagingParameters86);
        byte[] byteArray88 = pcxImageParser40.getIccProfileBytes(byteSource71, pcxImagingParameters86);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata89 = pcxImageParser27.getMetadata(byteSource39, pcxImagingParameters86);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage25, outputStream26, pcxImagingParameters86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "pcx" + "'", str32, "pcx");
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertNull(byteArray68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNull(byteArray75);
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNotNull(byteOrder79);
        org.junit.Assert.assertNull(formatCompliance81);
        org.junit.Assert.assertNotNull(pcxImagingParameters82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "pcx" + "'", str85, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters86);
        org.junit.Assert.assertNull(imageMetadata87);
        org.junit.Assert.assertNull(byteArray88);
        org.junit.Assert.assertNull(imageMetadata89);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser0.getFormatCompliance(byteSource17);
        java.io.File file19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser0.getMetadata(file19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(formatCompliance18);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser40.getMetadata(byteSource43);
        java.lang.String str45 = pcxImageParser40.getDefaultExtension();
        java.lang.String str46 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource39, pcxImagingParameters47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser0.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser0.getMetadata(byteSource51);
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "pcx" + "'", str46, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNull(imageMetadata52);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder9 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser0.getMetadata(byteSource10);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(imageMetadata11);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.ImageFormat imageFormat31 = null;
        boolean boolean32 = pcxImageParser0.canAcceptType(imageFormat31);
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        byte[] byteArray30 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        java.lang.String str41 = pcxImageParser32.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser11.getMetadata(byteSource31, pcxImagingParameters42);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo44 = pcxImageParser0.getImageInfo(byteSource10, pcxImagingParameters42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat33 = null;
        boolean boolean34 = pcxImageParser0.canAcceptType(imageFormat33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str37 = pcxImageParser36.getName();
        org.apache.commons.imaging.ImageFormat imageFormat38 = null;
        boolean boolean39 = pcxImageParser36.canAcceptType(imageFormat38);
        org.apache.commons.imaging.ImageFormat imageFormat40 = null;
        boolean boolean41 = pcxImageParser36.canAcceptType(imageFormat40);
        boolean boolean43 = pcxImageParser36.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.ImageFormat imageFormat44 = null;
        boolean boolean45 = pcxImageParser36.canAcceptType(imageFormat44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = null;
        byte[] byteArray50 = pcxImageParser47.getIccProfileBytes(byteSource48, pcxImagingParameters49);
        java.lang.String str51 = pcxImageParser47.getName();
        java.lang.String str52 = pcxImageParser47.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder55 = pcxImageParser54.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance57 = pcxImageParser54.getFormatCompliance(byteSource56);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser54.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser47.getMetadata(byteSource53, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser61.getMetadata(byteSource62);
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser65 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder66 = pcxImageParser65.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance68 = pcxImageParser65.getFormatCompliance(byteSource67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser65.getMetadata(byteSource69);
        boolean boolean72 = pcxImageParser65.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = pcxImageParser65.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata74 = pcxImageParser61.getMetadata(byteSource64, pcxImagingParameters73);
        byte[] byteArray75 = pcxImageParser47.getIccProfileBytes(byteSource60, pcxImagingParameters73);
        java.nio.ByteOrder byteOrder76 = pcxImageParser47.getByteOrder();
        java.lang.String str77 = pcxImageParser47.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance79 = pcxImageParser47.getFormatCompliance(byteSource78);
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser81 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata83 = pcxImageParser81.getMetadata(byteSource82);
        org.apache.commons.imaging.bytesource.ByteSource byteSource84 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser85 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder86 = pcxImageParser85.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource87 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance88 = pcxImageParser85.getFormatCompliance(byteSource87);
        org.apache.commons.imaging.bytesource.ByteSource byteSource89 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata90 = pcxImageParser85.getMetadata(byteSource89);
        boolean boolean92 = pcxImageParser85.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters93 = pcxImageParser85.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata94 = pcxImageParser81.getMetadata(byteSource84, pcxImagingParameters93);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata95 = pcxImageParser47.getMetadata(byteSource80, pcxImagingParameters93);
        byte[] byteArray96 = pcxImageParser36.getIccProfileBytes(byteSource46, pcxImagingParameters93);
        byte[] byteArray97 = pcxImageParser0.getIccProfileBytes(byteSource35, pcxImagingParameters93);
        java.lang.String str98 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Pcx-Custom" + "'", str52, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder55);
        org.junit.Assert.assertNull(formatCompliance57);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertNull(formatCompliance68);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters73);
        org.junit.Assert.assertNull(imageMetadata74);
        org.junit.Assert.assertNull(byteArray75);
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNull(formatCompliance79);
        org.junit.Assert.assertNull(imageMetadata83);
        org.junit.Assert.assertNotNull(byteOrder86);
        org.junit.Assert.assertNull(formatCompliance88);
        org.junit.Assert.assertNull(imageMetadata90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters93);
        org.junit.Assert.assertNull(imageMetadata94);
        org.junit.Assert.assertNull(imageMetadata95);
        org.junit.Assert.assertNull(byteArray96);
        org.junit.Assert.assertNull(byteArray97);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "pcx" + "'", str98, "pcx");
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        java.lang.String str25 = pcxImageParser0.getDefaultExtension();
        java.io.File file26 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean27 = pcxImageParser0.canAcceptExtension(file26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "pcx" + "'", str25, "pcx");
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder26 = pcxImageParser0.getByteOrder();
        java.awt.image.BufferedImage bufferedImage27 = null;
        java.io.OutputStream outputStream28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = null;
        byte[] byteArray32 = pcxImageParser29.getIccProfileBytes(byteSource30, pcxImagingParameters31);
        java.lang.String str33 = pcxImageParser29.getName();
        java.lang.String str34 = pcxImageParser29.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser29.getMetadata(byteSource35, pcxImagingParameters40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser43.getMetadata(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser47.getMetadata(byteSource51);
        boolean boolean54 = pcxImageParser47.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser43.getMetadata(byteSource46, pcxImagingParameters55);
        byte[] byteArray57 = pcxImageParser29.getIccProfileBytes(byteSource42, pcxImagingParameters55);
        boolean boolean59 = pcxImageParser29.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder60 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser62.getMetadata(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser66 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder67 = pcxImageParser66.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance69 = pcxImageParser66.getFormatCompliance(byteSource68);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser66.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser72 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata74 = pcxImageParser72.getMetadata(byteSource73);
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser76 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder77 = pcxImageParser76.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance79 = pcxImageParser76.getFormatCompliance(byteSource78);
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser76.getMetadata(byteSource80);
        boolean boolean83 = pcxImageParser76.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser76.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata85 = pcxImageParser72.getMetadata(byteSource75, pcxImagingParameters84);
        byte[] byteArray86 = pcxImageParser66.getIccProfileBytes(byteSource71, pcxImagingParameters84);
        java.lang.String str87 = pcxImageParser66.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters88 = pcxImageParser66.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata89 = pcxImageParser62.getMetadata(byteSource65, pcxImagingParameters88);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters90 = pcxImageParser62.getDefaultParameters();
        byte[] byteArray91 = pcxImageParser29.getIccProfileBytes(byteSource61, pcxImagingParameters90);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage27, outputStream28, pcxImagingParameters90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(formatCompliance69);
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertNull(imageMetadata74);
        org.junit.Assert.assertNotNull(byteOrder77);
        org.junit.Assert.assertNull(formatCompliance79);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertNull(imageMetadata85);
        org.junit.Assert.assertNull(byteArray86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "Pcx-Custom" + "'", str87, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters88);
        org.junit.Assert.assertNull(imageMetadata89);
        org.junit.Assert.assertNotNull(pcxImagingParameters90);
        org.junit.Assert.assertNull(byteArray91);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        org.apache.commons.imaging.ImageFormat imageFormat4 = null;
        boolean boolean5 = pcxImageParser0.canAcceptType(imageFormat4);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.lang.String str9 = pcxImageParser0.getDefaultExtension();
        java.io.File file10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder12 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser11.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser11.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser17.getMetadata(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser21.getMetadata(byteSource25);
        boolean boolean28 = pcxImageParser21.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser17.getMetadata(byteSource20, pcxImagingParameters29);
        byte[] byteArray31 = pcxImageParser11.getIccProfileBytes(byteSource16, pcxImagingParameters29);
        java.lang.String str32 = pcxImageParser11.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser11.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser11.getMetadata(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser11.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = null;
        byte[] byteArray43 = pcxImageParser40.getIccProfileBytes(byteSource41, pcxImagingParameters42);
        java.lang.String str44 = pcxImageParser40.getName();
        java.lang.String str45 = pcxImageParser40.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser40.getMetadata(byteSource46, pcxImagingParameters51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser54.getMetadata(byteSource55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser58.getMetadata(byteSource62);
        boolean boolean65 = pcxImageParser58.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser54.getMetadata(byteSource57, pcxImagingParameters66);
        byte[] byteArray68 = pcxImageParser40.getIccProfileBytes(byteSource53, pcxImagingParameters66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser40.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser72 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = null;
        byte[] byteArray75 = pcxImageParser72.getIccProfileBytes(byteSource73, pcxImagingParameters74);
        java.nio.ByteOrder byteOrder76 = pcxImageParser72.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser78 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder79 = pcxImageParser78.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance81 = pcxImageParser78.getFormatCompliance(byteSource80);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters82 = pcxImageParser78.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat83 = null;
        boolean boolean84 = pcxImageParser78.canAcceptType(imageFormat83);
        java.lang.String str85 = pcxImageParser78.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters86 = pcxImageParser78.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata87 = pcxImageParser72.getMetadata(byteSource77, pcxImagingParameters86);
        byte[] byteArray88 = pcxImageParser40.getIccProfileBytes(byteSource71, pcxImagingParameters86);
        byte[] byteArray89 = pcxImageParser11.getIccProfileBytes(byteSource39, pcxImagingParameters86);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters90 = pcxImageParser11.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray91 = pcxImageParser0.getIccProfileBytes(file10, pcxImagingParameters90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pcx" + "'", str9, "pcx");
        org.junit.Assert.assertNotNull(byteOrder12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNull(byteArray31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "pcx" + "'", str32, "pcx");
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertNull(byteArray68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNull(byteArray75);
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNotNull(byteOrder79);
        org.junit.Assert.assertNull(formatCompliance81);
        org.junit.Assert.assertNotNull(pcxImagingParameters82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "pcx" + "'", str85, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters86);
        org.junit.Assert.assertNull(imageMetadata87);
        org.junit.Assert.assertNull(byteArray88);
        org.junit.Assert.assertNull(byteArray89);
        org.junit.Assert.assertNotNull(pcxImagingParameters90);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource15, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource9, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder26 = pcxImageParser0.getByteOrder();
        java.io.File file27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser0.getMetadata(file27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "pcx" + "'", str20, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder26);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser0.getFormatCompliance(byteSource18);
        java.io.File file20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser27.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser31.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser27.getMetadata(byteSource30, pcxImagingParameters39);
        byte[] byteArray41 = pcxImageParser21.getIccProfileBytes(byteSource26, pcxImagingParameters39);
        java.lang.String str42 = pcxImageParser21.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser21.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser21.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.ImageFormat imageFormat47 = null;
        boolean boolean48 = pcxImageParser21.canAcceptType(imageFormat47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser50.getMetadata(byteSource54);
        boolean boolean57 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = null;
        byte[] byteArray63 = pcxImageParser60.getIccProfileBytes(byteSource61, pcxImagingParameters62);
        java.lang.String str64 = pcxImageParser60.getName();
        java.lang.String str65 = pcxImageParser60.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance67 = pcxImageParser60.getFormatCompliance(byteSource66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser69 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder70 = pcxImageParser69.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance72 = pcxImageParser69.getFormatCompliance(byteSource71);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = pcxImageParser69.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat74 = null;
        boolean boolean75 = pcxImageParser69.canAcceptType(imageFormat74);
        java.lang.String str76 = pcxImageParser69.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters77 = pcxImageParser69.getDefaultParameters();
        byte[] byteArray78 = pcxImageParser60.getIccProfileBytes(byteSource68, pcxImagingParameters77);
        byte[] byteArray79 = pcxImageParser50.getIccProfileBytes(byteSource59, pcxImagingParameters77);
        byte[] byteArray80 = pcxImageParser21.getIccProfileBytes(byteSource49, pcxImagingParameters77);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray81 = pcxImageParser0.getIccProfileBytes(file20, pcxImagingParameters77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "pcx" + "'", str42, "pcx");
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Pcx-Custom" + "'", str64, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Pcx-Custom" + "'", str65, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance67);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNull(formatCompliance72);
        org.junit.Assert.assertNotNull(pcxImagingParameters73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "pcx" + "'", str76, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters77);
        org.junit.Assert.assertNull(byteArray78);
        org.junit.Assert.assertNull(byteArray79);
        org.junit.Assert.assertNull(byteArray80);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = pcxImageParser0.dumpImageFile(byteSource12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser8.getMetadata(byteSource9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser18.getMetadata(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser22.getMetadata(byteSource26);
        boolean boolean29 = pcxImageParser22.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser18.getMetadata(byteSource21, pcxImagingParameters30);
        byte[] byteArray32 = pcxImageParser12.getIccProfileBytes(byteSource17, pcxImagingParameters30);
        java.lang.String str33 = pcxImageParser12.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser8.getMetadata(byteSource11, pcxImagingParameters34);
        byte[] byteArray36 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters34);
        java.io.File file37 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean38 = pcxImageParser0.canAcceptExtension(file37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(byteArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(byteArray36);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        boolean boolean17 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.ImageFormat imageFormat18 = null;
        boolean boolean19 = pcxImageParser0.canAcceptType(imageFormat18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser0.getFormatCompliance(byteSource20);
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(formatCompliance21);
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser0.getMetadata(byteSource39);
        org.apache.commons.imaging.ImageFormat imageFormat41 = null;
        boolean boolean42 = pcxImageParser0.canAcceptType(imageFormat41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser0.getMetadata(byteSource43);
        boolean boolean46 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.lang.String str47 = pcxImageParser0.getDefaultExtension();
        java.io.File file48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList49 = pcxImageParser0.getAllBufferedImages(file48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser21.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser21.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser32.getMetadata(byteSource38, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser46.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser50.getMetadata(byteSource54);
        boolean boolean57 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser46.getMetadata(byteSource49, pcxImagingParameters58);
        byte[] byteArray60 = pcxImageParser32.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser32.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = null;
        byte[] byteArray67 = pcxImageParser64.getIccProfileBytes(byteSource65, pcxImagingParameters66);
        java.nio.ByteOrder byteOrder68 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser64.getMetadata(byteSource69, pcxImagingParameters78);
        byte[] byteArray80 = pcxImageParser32.getIccProfileBytes(byteSource63, pcxImagingParameters78);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser21.getMetadata(byteSource31, pcxImagingParameters78);
        byte[] byteArray82 = pcxImageParser8.getIccProfileBytes(byteSource20, pcxImagingParameters78);
        byte[] byteArray83 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters78);
        org.apache.commons.imaging.bytesource.ByteSource byteSource84 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance85 = pcxImageParser0.getFormatCompliance(byteSource84);
        org.apache.commons.imaging.ImageFormat imageFormat86 = null;
        boolean boolean87 = pcxImageParser0.canAcceptType(imageFormat86);
        org.apache.commons.imaging.bytesource.ByteSource byteSource88 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata89 = pcxImageParser0.getMetadata(byteSource88);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters90 = pcxImageParser0.getDefaultParameters();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNull(byteArray82);
        org.junit.Assert.assertNull(byteArray83);
        org.junit.Assert.assertNull(formatCompliance85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertNull(imageMetadata89);
        org.junit.Assert.assertNotNull(pcxImagingParameters90);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        boolean boolean11 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getName();
        java.lang.String str18 = pcxImageParser13.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser13.getMetadata(byteSource19, pcxImagingParameters24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser27.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser31.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser27.getMetadata(byteSource30, pcxImagingParameters39);
        byte[] byteArray41 = pcxImageParser13.getIccProfileBytes(byteSource26, pcxImagingParameters39);
        java.nio.ByteOrder byteOrder42 = pcxImageParser13.getByteOrder();
        java.lang.String str43 = pcxImageParser13.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser13.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser47.getMetadata(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser51.getMetadata(byteSource55);
        boolean boolean58 = pcxImageParser51.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser47.getMetadata(byteSource50, pcxImagingParameters59);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser13.getMetadata(byteSource46, pcxImagingParameters59);
        byte[] byteArray62 = pcxImageParser0.getIccProfileBytes(byteSource12, pcxImagingParameters59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList64 = pcxImageParser0.getAllBufferedImages(byteSource63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "pcx" + "'", str43, "pcx");
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNull(byteArray62);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser0.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        java.lang.String str24 = pcxImageParser19.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser19.getMetadata(byteSource25, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser19.getDefaultExtension();
        boolean boolean30 = pcxImageParser19.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource18, pcxImagingParameters31);
        org.apache.commons.imaging.ImageFormat imageFormat33 = null;
        boolean boolean34 = pcxImageParser0.canAcceptType(imageFormat33);
        java.io.File file35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str36 = pcxImageParser0.dumpImageFile(file35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "pcx" + "'", str24, "pcx");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        java.lang.String str33 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser0.getDefaultParameters();
        boolean boolean36 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str38 = pcxImageParser0.dumpImageFile(byteSource37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        byte[] byteArray36 = pcxImageParser17.getIccProfileBytes(byteSource30, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser0.getIccProfileBytes(byteSource16, pcxImagingParameters35);
        org.apache.commons.imaging.ImageFormat imageFormat38 = null;
        boolean boolean39 = pcxImageParser0.canAcceptType(imageFormat38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = null;
        byte[] byteArray44 = pcxImageParser41.getIccProfileBytes(byteSource42, pcxImagingParameters43);
        java.lang.String str45 = pcxImageParser41.getName();
        java.lang.String str46 = pcxImageParser41.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder49 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser48.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser41.getMetadata(byteSource47, pcxImagingParameters52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser55 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser55.getMetadata(byteSource56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser59 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder60 = pcxImageParser59.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser59.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser59.getMetadata(byteSource63);
        boolean boolean66 = pcxImageParser59.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser59.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser55.getMetadata(byteSource58, pcxImagingParameters67);
        byte[] byteArray69 = pcxImageParser41.getIccProfileBytes(byteSource54, pcxImagingParameters67);
        java.nio.ByteOrder byteOrder70 = pcxImageParser41.getByteOrder();
        java.lang.String str71 = pcxImageParser41.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser41.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage73 = pcxImageParser0.getBufferedImage(byteSource40, pcxImagingParameters72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder49);
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNotNull(byteOrder60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertNull(byteArray69);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "pcx" + "'", str71, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        byte[] byteArray30 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        java.lang.String str41 = pcxImageParser32.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser11.getMetadata(byteSource31, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser0.getIccProfileBytes(byteSource10, pcxImagingParameters42);
        java.nio.ByteOrder byteOrder45 = pcxImageParser0.getByteOrder();
        java.io.File file46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser0.getMetadata(file46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNotNull(byteOrder45);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.io.File file31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(file31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters7);
        java.lang.String str9 = pcxImageParser0.getDefaultExtension();
        java.io.File file10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList11 = pcxImageParser0.getAllBufferedImages(file10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pcx" + "'", str9, "pcx");
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser17.getMetadata(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder22 = pcxImageParser21.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser21.getFormatCompliance(byteSource23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser27.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder32 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance34 = pcxImageParser31.getFormatCompliance(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser31.getMetadata(byteSource35);
        boolean boolean38 = pcxImageParser31.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser27.getMetadata(byteSource30, pcxImagingParameters39);
        byte[] byteArray41 = pcxImageParser21.getIccProfileBytes(byteSource26, pcxImagingParameters39);
        java.lang.String str42 = pcxImageParser21.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser17.getMetadata(byteSource20, pcxImagingParameters43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = null;
        byte[] byteArray50 = pcxImageParser47.getIccProfileBytes(byteSource48, pcxImagingParameters49);
        java.lang.String str51 = pcxImageParser47.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser17.getMetadata(byteSource46, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser0.getIccProfileBytes(byteSource16, pcxImagingParameters52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str57 = pcxImageParser56.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        boolean boolean61 = pcxImageParser56.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder64 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser66 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder67 = pcxImageParser66.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance69 = pcxImageParser66.getFormatCompliance(byteSource68);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser66.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser72 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata74 = pcxImageParser72.getMetadata(byteSource73);
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser76 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder77 = pcxImageParser76.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance79 = pcxImageParser76.getFormatCompliance(byteSource78);
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser76.getMetadata(byteSource80);
        boolean boolean83 = pcxImageParser76.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser76.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata85 = pcxImageParser72.getMetadata(byteSource75, pcxImagingParameters84);
        byte[] byteArray86 = pcxImageParser66.getIccProfileBytes(byteSource71, pcxImagingParameters84);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata87 = pcxImageParser63.getMetadata(byteSource65, pcxImagingParameters84);
        byte[] byteArray88 = pcxImageParser56.getIccProfileBytes(byteSource62, pcxImagingParameters84);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo89 = pcxImageParser0.getImageInfo(byteSource55, pcxImagingParameters84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(formatCompliance24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNull(formatCompliance34);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "pcx" + "'", str51, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Pcx-Custom" + "'", str57, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(formatCompliance69);
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertNull(imageMetadata74);
        org.junit.Assert.assertNotNull(byteOrder77);
        org.junit.Assert.assertNull(formatCompliance79);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertNull(imageMetadata85);
        org.junit.Assert.assertNull(byteArray86);
        org.junit.Assert.assertNull(imageMetadata87);
        org.junit.Assert.assertNull(byteArray88);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser9.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser0.getMetadata(byteSource8, pcxImagingParameters17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        byte[] byteArray23 = pcxImageParser20.getIccProfileBytes(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser20.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser20.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser20.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = null;
        byte[] byteArray39 = pcxImageParser36.getIccProfileBytes(byteSource37, pcxImagingParameters38);
        java.lang.String str40 = pcxImageParser36.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser30.getMetadata(byteSource35, pcxImagingParameters41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser20.getMetadata(byteSource29, pcxImagingParameters43);
        java.lang.String str45 = pcxImageParser20.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser0.getMetadata(byteSource19, pcxImagingParameters46);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "pcx" + "'", str40, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        java.lang.String str29 = pcxImageParser0.getName();
        java.io.File file30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser31.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser39.getMetadata(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser39.getMetadata(byteSource42);
        java.lang.String str44 = pcxImageParser39.getDefaultExtension();
        java.lang.String str45 = pcxImageParser39.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser31.getMetadata(byteSource38, pcxImagingParameters46);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage48 = pcxImageParser0.getBufferedImage(file30, pcxImagingParameters46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "pcx" + "'", str44, "pcx");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        java.lang.String str7 = pcxImageParser0.getName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = pcxImageParser0.dumpImageFile(byteSource9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        java.nio.ByteOrder byteOrder24 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        boolean boolean27 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        java.lang.String str17 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser0.getDefaultParameters();
        java.io.File file19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList20 = pcxImageParser0.getAllBufferedImages(file19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        java.lang.String str14 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser9.getMetadata(byteSource15, pcxImagingParameters20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser23.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser27.getMetadata(byteSource31);
        boolean boolean34 = pcxImageParser27.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser23.getMetadata(byteSource26, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser9.getIccProfileBytes(byteSource22, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser9.getFormatCompliance(byteSource38);
        java.nio.ByteOrder byteOrder40 = pcxImageParser9.getByteOrder();
        java.nio.ByteOrder byteOrder41 = pcxImageParser9.getByteOrder();
        java.lang.String str42 = pcxImageParser9.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser9.getDefaultParameters();
        boolean boolean45 = pcxImageParser9.canAcceptExtension("pcx");
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser47.getDefaultParameters();
        java.lang.String str52 = pcxImageParser47.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser47.getMetadata(byteSource53);
        boolean boolean56 = pcxImageParser47.canAcceptExtension("");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser9.getMetadata(byteSource46, pcxImagingParameters57);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage59 = pcxImageParser0.getBufferedImage(byteSource8, pcxImagingParameters57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "pcx" + "'", str52, "pcx");
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder23 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        java.io.File file26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList27 = pcxImageParser0.getAllBufferedImages(file26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(imageMetadata25);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser0.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser0.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser0.getFormatCompliance(byteSource16);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNull(formatCompliance17);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser6.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser6.getFormatCompliance(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = null;
        byte[] byteArray25 = pcxImageParser22.getIccProfileBytes(byteSource23, pcxImagingParameters24);
        java.lang.String str26 = pcxImageParser22.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser16.getMetadata(byteSource21, pcxImagingParameters27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser6.getMetadata(byteSource15, pcxImagingParameters29);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage31 = pcxImageParser0.getBufferedImage(file5, pcxImagingParameters29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(formatCompliance14);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNotNull(pcxImagingParameters20);
        org.junit.Assert.assertNull(byteArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pcx" + "'", str26, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata30);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        java.io.File file18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage24 = pcxImageParser0.getBufferedImage(file18, pcxImagingParameters23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        java.lang.String str13 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser15 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder16 = pcxImageParser15.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser15.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = pcxImageParser15.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser8.getMetadata(byteSource14, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser8.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getName();
        java.lang.String str30 = pcxImageParser25.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser25.getMetadata(byteSource31, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        byte[] byteArray44 = pcxImageParser25.getIccProfileBytes(byteSource38, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser8.getIccProfileBytes(byteSource24, pcxImagingParameters43);
        byte[] byteArray46 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters43);
        org.apache.commons.imaging.ImageFormat imageFormat47 = null;
        boolean boolean48 = pcxImageParser0.canAcceptType(imageFormat47);
        boolean boolean50 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.io.File file51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder53 = pcxImageParser52.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser52.getFormatCompliance(byteSource54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser52.getMetadata(byteSource56);
        boolean boolean59 = pcxImageParser52.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat60 = null;
        boolean boolean61 = pcxImageParser52.canAcceptType(imageFormat60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser52.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray63 = pcxImageParser0.getIccProfileBytes(file51, pcxImagingParameters62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertNotNull(pcxImagingParameters19);
        org.junit.Assert.assertNull(imageMetadata20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(byteOrder53);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        java.lang.String str8 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser0.getFormatCompliance(byteSource9);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "Pcx-Custom" + "'", str8, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance10);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.ImageFormat imageFormat33 = null;
        boolean boolean34 = pcxImageParser0.canAcceptType(imageFormat33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser0.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo38 = pcxImageParser0.getImageInfo(byteSource37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(formatCompliance36);
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(byteSource9);
        java.lang.String str11 = pcxImageParser0.getName();
        java.awt.image.BufferedImage bufferedImage12 = null;
        java.io.OutputStream outputStream13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = null;
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage12, outputStream13, pcxImagingParameters14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource21, pcxImagingParameters22);
        java.nio.ByteOrder byteOrder24 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser32.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser36.getMetadata(byteSource40);
        boolean boolean43 = pcxImageParser36.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser32.getMetadata(byteSource35, pcxImagingParameters44);
        byte[] byteArray46 = pcxImageParser26.getIccProfileBytes(byteSource31, pcxImagingParameters44);
        java.lang.String str47 = pcxImageParser26.getDefaultExtension();
        java.lang.String str48 = pcxImageParser26.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat49 = null;
        boolean boolean50 = pcxImageParser26.canAcceptType(imageFormat49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser26.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser0.getMetadata(byteSource25, pcxImagingParameters53);
        java.io.PrintWriter printWriter55 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean57 = pcxImageParser0.dumpImageFile(printWriter55, byteSource56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "pcx" + "'", str47, "pcx");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "pcx" + "'", str48, "pcx");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.io.File file5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser6.canAcceptType(imageFormat11);
        java.lang.String str13 = pcxImageParser6.getDefaultExtension();
        java.nio.ByteOrder byteOrder14 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = null;
        byte[] byteArray19 = pcxImageParser16.getIccProfileBytes(byteSource17, pcxImagingParameters18);
        java.lang.String str20 = pcxImageParser16.getName();
        java.lang.String str21 = pcxImageParser16.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata28 = pcxImageParser16.getMetadata(byteSource22, pcxImagingParameters27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser30.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser34.getMetadata(byteSource38);
        boolean boolean41 = pcxImageParser34.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser30.getMetadata(byteSource33, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser16.getIccProfileBytes(byteSource29, pcxImagingParameters42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser16.getFormatCompliance(byteSource45);
        java.nio.ByteOrder byteOrder47 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = null;
        byte[] byteArray52 = pcxImageParser49.getIccProfileBytes(byteSource50, pcxImagingParameters51);
        java.lang.String str53 = pcxImageParser49.getName();
        java.lang.String str54 = pcxImageParser49.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder57 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser49.getMetadata(byteSource55, pcxImagingParameters60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser63.getMetadata(byteSource64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser67 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder68 = pcxImageParser67.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance70 = pcxImageParser67.getFormatCompliance(byteSource69);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata72 = pcxImageParser67.getMetadata(byteSource71);
        boolean boolean74 = pcxImageParser67.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata76 = pcxImageParser63.getMetadata(byteSource66, pcxImagingParameters75);
        byte[] byteArray77 = pcxImageParser49.getIccProfileBytes(byteSource62, pcxImagingParameters75);
        byte[] byteArray78 = pcxImageParser16.getIccProfileBytes(byteSource48, pcxImagingParameters75);
        byte[] byteArray79 = pcxImageParser6.getIccProfileBytes(byteSource15, pcxImagingParameters75);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo80 = pcxImageParser0.getImageInfo(file5, pcxImagingParameters75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(imageMetadata28);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "Pcx-Custom" + "'", str53, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "Pcx-Custom" + "'", str54, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNull(formatCompliance70);
        org.junit.Assert.assertNull(imageMetadata72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertNull(imageMetadata76);
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertNull(byteArray78);
        org.junit.Assert.assertNull(byteArray79);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters6);
        java.awt.image.BufferedImage bufferedImage8 = null;
        java.io.OutputStream outputStream9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser10.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage8, outputStream9, pcxImagingParameters16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser0.getFormatCompliance(byteSource12);
        boolean boolean15 = pcxImageParser0.canAcceptExtension("");
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.nio.ByteOrder byteOrder26 = pcxImageParser0.getByteOrder();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteOrder26);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        java.nio.ByteOrder byteOrder13 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str15 = pcxImageParser0.dumpImageFile(byteSource14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder13);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser5 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = null;
        byte[] byteArray8 = pcxImageParser5.getIccProfileBytes(byteSource6, pcxImagingParameters7);
        java.lang.String str9 = pcxImageParser5.getName();
        java.lang.String str10 = pcxImageParser5.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser5.getMetadata(byteSource11, pcxImagingParameters16);
        boolean boolean19 = pcxImageParser5.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser5.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser5.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.ImageFormat imageFormat24 = null;
        boolean boolean25 = pcxImageParser5.canAcceptType(imageFormat24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = null;
        byte[] byteArray30 = pcxImageParser27.getIccProfileBytes(byteSource28, pcxImagingParameters29);
        java.lang.String str31 = pcxImageParser27.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = null;
        byte[] byteArray43 = pcxImageParser40.getIccProfileBytes(byteSource41, pcxImagingParameters42);
        java.lang.String str44 = pcxImageParser40.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource39, pcxImagingParameters45);
        byte[] byteArray47 = pcxImageParser27.getIccProfileBytes(byteSource33, pcxImagingParameters45);
        byte[] byteArray48 = pcxImageParser5.getIccProfileBytes(byteSource26, pcxImagingParameters45);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser0.getMetadata(byteSource4, pcxImagingParameters45);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(byteArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(imageMetadata17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "pcx" + "'", str44, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertNull(imageMetadata49);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str7 = pcxImageParser0.getName();
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser0.getFormatCompliance(byteSource9);
        java.io.File file11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder13 = pcxImageParser12.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser12.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters20 = null;
        byte[] byteArray21 = pcxImageParser18.getIccProfileBytes(byteSource19, pcxImagingParameters20);
        java.lang.String str22 = pcxImageParser18.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser12.getMetadata(byteSource17, pcxImagingParameters23);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension25 = pcxImageParser0.getImageSize(file11, pcxImagingParameters23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(byteOrder13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertNull(byteArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata24);
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        boolean boolean21 = pcxImageParser0.canAcceptExtension("hi!");
        java.nio.ByteOrder byteOrder22 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = null;
        byte[] byteArray27 = pcxImageParser24.getIccProfileBytes(byteSource25, pcxImagingParameters26);
        java.lang.String str28 = pcxImageParser24.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getName();
        java.lang.String str35 = pcxImageParser30.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser30.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat44 = null;
        boolean boolean45 = pcxImageParser39.canAcceptType(imageFormat44);
        java.lang.String str46 = pcxImageParser39.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser39.getDefaultParameters();
        byte[] byteArray48 = pcxImageParser30.getIccProfileBytes(byteSource38, pcxImagingParameters47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat55 = null;
        boolean boolean56 = pcxImageParser50.canAcceptType(imageFormat55);
        java.lang.String str57 = pcxImageParser50.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        byte[] byteArray59 = pcxImageParser30.getIccProfileBytes(byteSource49, pcxImagingParameters58);
        byte[] byteArray60 = pcxImageParser24.getIccProfileBytes(byteSource29, pcxImagingParameters58);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo61 = pcxImageParser0.getImageInfo(byteSource23, pcxImagingParameters58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertNull(byteArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "pcx" + "'", str28, "pcx");
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "pcx" + "'", str46, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(byteArray48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "pcx" + "'", str57, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertNull(byteArray60);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat6 = null;
        boolean boolean7 = pcxImageParser0.canAcceptType(imageFormat6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser0.getMetadata(byteSource8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser11.getFormatCompliance(byteSource40);
        java.nio.ByteOrder byteOrder42 = pcxImageParser11.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = null;
        byte[] byteArray47 = pcxImageParser44.getIccProfileBytes(byteSource45, pcxImagingParameters46);
        java.lang.String str48 = pcxImageParser44.getName();
        java.lang.String str49 = pcxImageParser44.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser44.getMetadata(byteSource50, pcxImagingParameters55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser58.getMetadata(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder63 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser62.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata67 = pcxImageParser62.getMetadata(byteSource66);
        boolean boolean69 = pcxImageParser62.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser58.getMetadata(byteSource61, pcxImagingParameters70);
        byte[] byteArray72 = pcxImageParser44.getIccProfileBytes(byteSource57, pcxImagingParameters70);
        byte[] byteArray73 = pcxImageParser11.getIccProfileBytes(byteSource43, pcxImagingParameters70);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata74 = pcxImageParser0.getMetadata(byteSource10, pcxImagingParameters70);
        java.io.PrintWriter printWriter75 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean77 = pcxImageParser0.dumpImageFile(printWriter75, byteSource76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Pcx-Custom" + "'", str49, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNotNull(byteOrder63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNull(imageMetadata67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNull(imageMetadata74);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        boolean boolean15 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.File file16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList17 = pcxImageParser0.getAllBufferedImages(file16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        boolean boolean17 = pcxImageParser0.canAcceptExtension("pcx");
        java.awt.image.BufferedImage bufferedImage18 = null;
        java.io.OutputStream outputStream19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser20.getMetadata(byteSource24);
        boolean boolean27 = pcxImageParser20.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getName();
        java.lang.String str35 = pcxImageParser30.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser30.getMetadata(byteSource36, pcxImagingParameters41);
        java.lang.String str43 = pcxImageParser30.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser30.getMetadata(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = null;
        byte[] byteArray50 = pcxImageParser47.getIccProfileBytes(byteSource48, pcxImagingParameters49);
        java.lang.String str51 = pcxImageParser47.getName();
        java.lang.String str52 = pcxImageParser47.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder55 = pcxImageParser54.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance57 = pcxImageParser54.getFormatCompliance(byteSource56);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser54.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser47.getMetadata(byteSource53, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = null;
        byte[] byteArray64 = pcxImageParser61.getIccProfileBytes(byteSource62, pcxImagingParameters63);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser61.getDefaultParameters();
        byte[] byteArray66 = pcxImageParser47.getIccProfileBytes(byteSource60, pcxImagingParameters65);
        byte[] byteArray67 = pcxImageParser30.getIccProfileBytes(byteSource46, pcxImagingParameters65);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser20.getMetadata(byteSource29, pcxImagingParameters65);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage18, outputStream19, pcxImagingParameters65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "Pcx-Custom" + "'", str51, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Pcx-Custom" + "'", str52, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder55);
        org.junit.Assert.assertNull(formatCompliance57);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray64);
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNull(imageMetadata68);
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance14 = pcxImageParser0.getFormatCompliance(byteSource13);
        java.io.File file15 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray16 = pcxImageParser0.getIccProfileBytes(file15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(formatCompliance14);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser17.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getName();
        java.lang.String str39 = pcxImageParser34.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource40, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = null;
        byte[] byteArray51 = pcxImageParser48.getIccProfileBytes(byteSource49, pcxImagingParameters50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        byte[] byteArray53 = pcxImageParser34.getIccProfileBytes(byteSource47, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser17.getIccProfileBytes(byteSource33, pcxImagingParameters52);
        byte[] byteArray55 = pcxImageParser9.getIccProfileBytes(byteSource16, pcxImagingParameters52);
        byte[] byteArray56 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters52);
        java.lang.String str57 = pcxImageParser0.getDefaultExtension();
        java.io.PrintWriter printWriter58 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean60 = pcxImageParser0.dumpImageFile(printWriter58, byteSource59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "pcx" + "'", str57, "pcx");
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser34.getMetadata(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser38.getMetadata(byteSource42);
        boolean boolean45 = pcxImageParser38.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser34.getMetadata(byteSource37, pcxImagingParameters46);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource33, pcxImagingParameters46);
        java.lang.String str49 = pcxImageParser0.getDefaultExtension();
        java.io.File file50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str51 = pcxImageParser0.dumpImageFile(file50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "pcx" + "'", str49, "pcx");
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser3 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder4 = pcxImageParser3.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser3.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser3.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser3.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource2, pcxImagingParameters21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList26 = pcxImageParser0.getAllBufferedImages(byteSource25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNull(imageMetadata24);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        java.lang.Class<?> wildcardClass31 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser21.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser21.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser32.getMetadata(byteSource38, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser46.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser50.getMetadata(byteSource54);
        boolean boolean57 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser46.getMetadata(byteSource49, pcxImagingParameters58);
        byte[] byteArray60 = pcxImageParser32.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser32.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = null;
        byte[] byteArray67 = pcxImageParser64.getIccProfileBytes(byteSource65, pcxImagingParameters66);
        java.nio.ByteOrder byteOrder68 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser64.getMetadata(byteSource69, pcxImagingParameters78);
        byte[] byteArray80 = pcxImageParser32.getIccProfileBytes(byteSource63, pcxImagingParameters78);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser21.getMetadata(byteSource31, pcxImagingParameters78);
        byte[] byteArray82 = pcxImageParser8.getIccProfileBytes(byteSource20, pcxImagingParameters78);
        byte[] byteArray83 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters78);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser0.getDefaultParameters();
        java.lang.String str85 = pcxImageParser0.getDefaultExtension();
        java.lang.String str86 = pcxImageParser0.getDefaultExtension();
        java.io.PrintWriter printWriter87 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource88 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean89 = pcxImageParser0.dumpImageFile(printWriter87, byteSource88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNull(byteArray82);
        org.junit.Assert.assertNull(byteArray83);
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "pcx" + "'", str85, "pcx");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "pcx" + "'", str86, "pcx");
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        boolean boolean34 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser36.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser36.getMetadata(byteSource39);
        org.apache.commons.imaging.ImageFormat imageFormat41 = null;
        boolean boolean42 = pcxImageParser36.canAcceptType(imageFormat41);
        java.lang.String str43 = pcxImageParser36.getDefaultExtension();
        java.lang.String str44 = pcxImageParser36.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser46.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser52.getMetadata(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder57 = pcxImageParser56.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance59 = pcxImageParser56.getFormatCompliance(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser56.getMetadata(byteSource60);
        boolean boolean63 = pcxImageParser56.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser52.getMetadata(byteSource55, pcxImagingParameters64);
        byte[] byteArray66 = pcxImageParser46.getIccProfileBytes(byteSource51, pcxImagingParameters64);
        java.lang.String str67 = pcxImageParser46.getName();
        java.lang.String str68 = pcxImageParser46.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser36.getMetadata(byteSource45, pcxImagingParameters69);
        byte[] byteArray71 = pcxImageParser0.getIccProfileBytes(byteSource35, pcxImagingParameters69);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "pcx" + "'", str43, "pcx");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertNull(formatCompliance59);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters64);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Pcx-Custom" + "'", str67, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "pcx" + "'", str68, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNull(byteArray71);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        boolean boolean34 = pcxImageParser0.canAcceptExtension("pcx");
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser0.getDefaultParameters();
        java.io.PrintWriter printWriter43 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean45 = pcxImageParser0.dumpImageFile(printWriter43, byteSource44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser0.getMetadata(byteSource9);
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource11);
        java.io.File file13 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = pcxImageParser0.canAcceptExtension(file13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertNull(imageMetadata12);
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser0.getDefaultParameters();
        java.lang.String str17 = pcxImageParser0.getName();
        java.io.File file18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser0.getFormatCompliance(file18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser8.getMetadata(byteSource12);
        boolean boolean15 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat16 = null;
        boolean boolean17 = pcxImageParser8.canAcceptType(imageFormat16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser19.getMetadata(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser29.getMetadata(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser33.getMetadata(byteSource37);
        boolean boolean40 = pcxImageParser33.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser29.getMetadata(byteSource32, pcxImagingParameters41);
        byte[] byteArray43 = pcxImageParser23.getIccProfileBytes(byteSource28, pcxImagingParameters41);
        java.lang.String str44 = pcxImageParser23.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser19.getMetadata(byteSource22, pcxImagingParameters45);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser8.getMetadata(byteSource18, pcxImagingParameters45);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray48 = pcxImageParser0.getIccProfileBytes(file7, pcxImagingParameters45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(imageMetadata47);
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        boolean boolean37 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.File file38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser45.getMetadata(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser49.getMetadata(byteSource53);
        boolean boolean56 = pcxImageParser49.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser45.getMetadata(byteSource48, pcxImagingParameters57);
        byte[] byteArray59 = pcxImageParser39.getIccProfileBytes(byteSource44, pcxImagingParameters57);
        java.lang.String str60 = pcxImageParser39.getName();
        boolean boolean62 = pcxImageParser39.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser39.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray64 = pcxImageParser0.getIccProfileBytes(file38, pcxImagingParameters63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Pcx-Custom" + "'", str60, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser9.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser17.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        java.lang.String str38 = pcxImageParser34.getName();
        java.lang.String str39 = pcxImageParser34.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser34.getMetadata(byteSource40, pcxImagingParameters45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = null;
        byte[] byteArray51 = pcxImageParser48.getIccProfileBytes(byteSource49, pcxImagingParameters50);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser48.getDefaultParameters();
        byte[] byteArray53 = pcxImageParser34.getIccProfileBytes(byteSource47, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser17.getIccProfileBytes(byteSource33, pcxImagingParameters52);
        byte[] byteArray55 = pcxImageParser9.getIccProfileBytes(byteSource16, pcxImagingParameters52);
        byte[] byteArray56 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance58 = pcxImageParser0.getFormatCompliance(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser0.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = null;
        byte[] byteArray65 = pcxImageParser62.getIccProfileBytes(byteSource63, pcxImagingParameters64);
        java.lang.String str66 = pcxImageParser62.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser62.getDefaultParameters();
        java.nio.ByteOrder byteOrder68 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser62.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser0.getMetadata(byteSource61, pcxImagingParameters69);
        java.nio.ByteOrder byteOrder71 = pcxImageParser0.getByteOrder();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNotNull(pcxImagingParameters13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertNull(formatCompliance58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "pcx" + "'", str66, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNotNull(byteOrder71);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        boolean boolean32 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo34 = pcxImageParser0.getImageInfo(byteSource33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        java.nio.ByteOrder byteOrder33 = pcxImageParser0.getByteOrder();
        java.lang.String str34 = pcxImageParser0.getName();
        java.lang.String str35 = pcxImageParser0.getName();
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "Pcx-Custom" + "'", str34, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        java.lang.String str7 = pcxImageParser0.getName();
        java.awt.image.BufferedImage bufferedImage8 = null;
        java.io.OutputStream outputStream9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser16.getMetadata(byteSource17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser20.getMetadata(byteSource24);
        boolean boolean27 = pcxImageParser20.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser16.getMetadata(byteSource19, pcxImagingParameters28);
        byte[] byteArray30 = pcxImageParser10.getIccProfileBytes(byteSource15, pcxImagingParameters28);
        java.lang.String str31 = pcxImageParser10.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser10.getMetadata(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser10.getMetadata(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser10.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        java.lang.String str43 = pcxImageParser39.getDefaultExtension();
        java.lang.String str44 = pcxImageParser39.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = null;
        byte[] byteArray49 = pcxImageParser46.getIccProfileBytes(byteSource47, pcxImagingParameters48);
        java.lang.String str50 = pcxImageParser46.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser46.getMetadata(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser46.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat56 = null;
        boolean boolean57 = pcxImageParser46.canAcceptType(imageFormat56);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser46.getDefaultParameters();
        byte[] byteArray59 = pcxImageParser39.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser10.getMetadata(byteSource38, pcxImagingParameters58);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage8, outputStream9, pcxImagingParameters58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "pcx" + "'", str43, "pcx");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertNull(imageMetadata60);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        boolean boolean8 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.io.File file9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters14 = pcxImageParser10.getDefaultParameters();
        java.lang.String str15 = pcxImageParser10.getDefaultExtension();
        java.nio.ByteOrder byteOrder16 = pcxImageParser10.getByteOrder();
        boolean boolean18 = pcxImageParser10.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat25 = null;
        boolean boolean26 = pcxImageParser20.canAcceptType(imageFormat25);
        java.lang.String str27 = pcxImageParser20.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = null;
        byte[] byteArray40 = pcxImageParser37.getIccProfileBytes(byteSource38, pcxImagingParameters39);
        java.lang.String str41 = pcxImageParser37.getName();
        java.lang.String str42 = pcxImageParser37.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser37.getMetadata(byteSource43, pcxImagingParameters48);
        java.lang.String str50 = pcxImageParser37.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser37.getMetadata(byteSource51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = null;
        byte[] byteArray57 = pcxImageParser54.getIccProfileBytes(byteSource55, pcxImagingParameters56);
        java.lang.String str58 = pcxImageParser54.getName();
        java.lang.String str59 = pcxImageParser54.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder62 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser61.getFormatCompliance(byteSource63);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser61.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser54.getMetadata(byteSource60, pcxImagingParameters65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = null;
        byte[] byteArray71 = pcxImageParser68.getIccProfileBytes(byteSource69, pcxImagingParameters70);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser68.getDefaultParameters();
        byte[] byteArray73 = pcxImageParser54.getIccProfileBytes(byteSource67, pcxImagingParameters72);
        byte[] byteArray74 = pcxImageParser37.getIccProfileBytes(byteSource53, pcxImagingParameters72);
        byte[] byteArray75 = pcxImageParser29.getIccProfileBytes(byteSource36, pcxImagingParameters72);
        byte[] byteArray76 = pcxImageParser20.getIccProfileBytes(byteSource28, pcxImagingParameters72);
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance78 = pcxImageParser20.getFormatCompliance(byteSource77);
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance80 = pcxImageParser20.getFormatCompliance(byteSource79);
        org.apache.commons.imaging.bytesource.ByteSource byteSource81 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser82 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource83 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = null;
        byte[] byteArray85 = pcxImageParser82.getIccProfileBytes(byteSource83, pcxImagingParameters84);
        java.lang.String str86 = pcxImageParser82.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters87 = pcxImageParser82.getDefaultParameters();
        java.nio.ByteOrder byteOrder88 = pcxImageParser82.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters89 = pcxImageParser82.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata90 = pcxImageParser20.getMetadata(byteSource81, pcxImagingParameters89);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata91 = pcxImageParser10.getMetadata(byteSource19, pcxImagingParameters89);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray92 = pcxImageParser0.getIccProfileBytes(file9, pcxImagingParameters89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNotNull(pcxImagingParameters14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "pcx" + "'", str15, "pcx");
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Pcx-Custom" + "'", str58, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "Pcx-Custom" + "'", str59, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNull(byteArray74);
        org.junit.Assert.assertNull(byteArray75);
        org.junit.Assert.assertNull(byteArray76);
        org.junit.Assert.assertNull(formatCompliance78);
        org.junit.Assert.assertNull(formatCompliance80);
        org.junit.Assert.assertNull(byteArray85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "pcx" + "'", str86, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters87);
        org.junit.Assert.assertNotNull(byteOrder88);
        org.junit.Assert.assertNotNull(pcxImagingParameters89);
        org.junit.Assert.assertNull(imageMetadata90);
        org.junit.Assert.assertNull(imageMetadata91);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser4.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser8.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.lang.String str29 = pcxImageParser8.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser8.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser4.getMetadata(byteSource7, pcxImagingParameters30);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat39 = null;
        boolean boolean40 = pcxImageParser34.canAcceptType(imageFormat39);
        java.lang.String str41 = pcxImageParser34.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = null;
        byte[] byteArray54 = pcxImageParser51.getIccProfileBytes(byteSource52, pcxImagingParameters53);
        java.lang.String str55 = pcxImageParser51.getName();
        java.lang.String str56 = pcxImageParser51.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser58 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder59 = pcxImageParser58.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser58.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser58.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser51.getMetadata(byteSource57, pcxImagingParameters62);
        java.lang.String str64 = pcxImageParser51.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser51.getMetadata(byteSource65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = null;
        byte[] byteArray71 = pcxImageParser68.getIccProfileBytes(byteSource69, pcxImagingParameters70);
        java.lang.String str72 = pcxImageParser68.getName();
        java.lang.String str73 = pcxImageParser68.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser75 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder76 = pcxImageParser75.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance78 = pcxImageParser75.getFormatCompliance(byteSource77);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser75.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser68.getMetadata(byteSource74, pcxImagingParameters79);
        org.apache.commons.imaging.bytesource.ByteSource byteSource81 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser82 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource83 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = null;
        byte[] byteArray85 = pcxImageParser82.getIccProfileBytes(byteSource83, pcxImagingParameters84);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters86 = pcxImageParser82.getDefaultParameters();
        byte[] byteArray87 = pcxImageParser68.getIccProfileBytes(byteSource81, pcxImagingParameters86);
        byte[] byteArray88 = pcxImageParser51.getIccProfileBytes(byteSource67, pcxImagingParameters86);
        byte[] byteArray89 = pcxImageParser43.getIccProfileBytes(byteSource50, pcxImagingParameters86);
        byte[] byteArray90 = pcxImageParser34.getIccProfileBytes(byteSource42, pcxImagingParameters86);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage91 = pcxImageParser0.getBufferedImage(byteSource33, pcxImagingParameters86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "pcx" + "'", str41, "pcx");
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "Pcx-Custom" + "'", str56, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "Pcx-Custom" + "'", str64, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Pcx-Custom" + "'", str72, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Pcx-Custom" + "'", str73, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNull(formatCompliance78);
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertNull(byteArray85);
        org.junit.Assert.assertNotNull(pcxImagingParameters86);
        org.junit.Assert.assertNull(byteArray87);
        org.junit.Assert.assertNull(byteArray88);
        org.junit.Assert.assertNull(byteArray89);
        org.junit.Assert.assertNull(byteArray90);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        java.lang.String str17 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser0.getFormatCompliance(byteSource19);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(formatCompliance20);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.ImageFormat imageFormat25 = null;
        boolean boolean26 = pcxImageParser0.canAcceptType(imageFormat25);
        java.lang.String str27 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        java.io.File file29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(file29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        java.nio.ByteOrder byteOrder8 = pcxImageParser0.getByteOrder();
        java.lang.Class<?> wildcardClass9 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.io.PrintWriter printWriter7 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean9 = pcxImageParser0.dumpImageFile(printWriter7, byteSource8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = pcxImageParser0.getDefaultParameters();
        java.lang.String str17 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser19.getMetadata(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder24 = pcxImageParser23.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser23.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser29.getMetadata(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder34 = pcxImageParser33.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance36 = pcxImageParser33.getFormatCompliance(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser33.getMetadata(byteSource37);
        boolean boolean40 = pcxImageParser33.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser29.getMetadata(byteSource32, pcxImagingParameters41);
        byte[] byteArray43 = pcxImageParser23.getIccProfileBytes(byteSource28, pcxImagingParameters41);
        java.lang.String str44 = pcxImageParser23.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser19.getMetadata(byteSource22, pcxImagingParameters45);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = null;
        byte[] byteArray52 = pcxImageParser49.getIccProfileBytes(byteSource50, pcxImagingParameters51);
        java.lang.String str53 = pcxImageParser49.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser19.getMetadata(byteSource48, pcxImagingParameters54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata57 = pcxImageParser19.getMetadata(byteSource56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser19.getMetadata(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser19.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = null;
        byte[] byteArray66 = pcxImageParser63.getIccProfileBytes(byteSource64, pcxImagingParameters65);
        java.lang.String str67 = pcxImageParser63.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser63.getMetadata(byteSource68);
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance71 = pcxImageParser63.getFormatCompliance(byteSource70);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser63.getDefaultParameters();
        byte[] byteArray73 = pcxImageParser19.getIccProfileBytes(byteSource62, pcxImagingParameters72);
        byte[] byteArray74 = pcxImageParser0.getIccProfileBytes(byteSource18, pcxImagingParameters72);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertNotNull(byteOrder24);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNotNull(byteOrder34);
        org.junit.Assert.assertNull(formatCompliance36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "pcx" + "'", str53, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(imageMetadata57);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNull(byteArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "Pcx-Custom" + "'", str67, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata69);
        org.junit.Assert.assertNull(formatCompliance71);
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNull(byteArray74);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        byte[] byteArray30 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        java.lang.String str41 = pcxImageParser32.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser11.getMetadata(byteSource31, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser0.getIccProfileBytes(byteSource10, pcxImagingParameters42);
        org.apache.commons.imaging.ImageFormat imageFormat45 = null;
        boolean boolean46 = pcxImageParser0.canAcceptType(imageFormat45);
        java.io.File file47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = null;
        byte[] byteArray51 = pcxImageParser48.getIccProfileBytes(byteSource49, pcxImagingParameters50);
        java.nio.ByteOrder byteOrder52 = pcxImageParser48.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser54 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder55 = pcxImageParser54.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance57 = pcxImageParser54.getFormatCompliance(byteSource56);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser54.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat59 = null;
        boolean boolean60 = pcxImageParser54.canAcceptType(imageFormat59);
        java.lang.String str61 = pcxImageParser54.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser54.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser48.getMetadata(byteSource53, pcxImagingParameters62);
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser65 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder66 = pcxImageParser65.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance68 = pcxImageParser65.getFormatCompliance(byteSource67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser65.getMetadata(byteSource69);
        boolean boolean72 = pcxImageParser65.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = pcxImageParser65.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata74 = pcxImageParser48.getMetadata(byteSource64, pcxImagingParameters73);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension75 = pcxImageParser0.getImageSize(file47, pcxImagingParameters73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNotNull(byteOrder55);
        org.junit.Assert.assertNull(formatCompliance57);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "pcx" + "'", str61, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertNull(formatCompliance68);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters73);
        org.junit.Assert.assertNull(imageMetadata74);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser11.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.nio.ByteOrder byteOrder47 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat54 = null;
        boolean boolean55 = pcxImageParser49.canAcceptType(imageFormat54);
        java.lang.String str56 = pcxImageParser49.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser43.getMetadata(byteSource48, pcxImagingParameters57);
        byte[] byteArray59 = pcxImageParser11.getIccProfileBytes(byteSource42, pcxImagingParameters57);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser0.getMetadata(byteSource10, pcxImagingParameters57);
        java.io.File file61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser62 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters64 = null;
        byte[] byteArray65 = pcxImageParser62.getIccProfileBytes(byteSource63, pcxImagingParameters64);
        java.nio.ByteOrder byteOrder66 = pcxImageParser62.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder69 = pcxImageParser68.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance71 = pcxImageParser68.getFormatCompliance(byteSource70);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser68.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat73 = null;
        boolean boolean74 = pcxImageParser68.canAcceptType(imageFormat73);
        java.lang.String str75 = pcxImageParser68.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = pcxImageParser68.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser62.getMetadata(byteSource67, pcxImagingParameters76);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata78 = pcxImageParser0.getMetadata(file61, pcxImagingParameters76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "pcx" + "'", str56, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(byteArray65);
        org.junit.Assert.assertNotNull(byteOrder66);
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNull(formatCompliance71);
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "pcx" + "'", str75, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters76);
        org.junit.Assert.assertNull(imageMetadata77);
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser13.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser23.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser27.getMetadata(byteSource31);
        boolean boolean34 = pcxImageParser27.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser23.getMetadata(byteSource26, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser17.getIccProfileBytes(byteSource22, pcxImagingParameters35);
        java.lang.String str38 = pcxImageParser17.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser13.getMetadata(byteSource16, pcxImagingParameters39);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters39);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo42 = pcxImageParser0.getImageInfo(file8, pcxImagingParameters39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertNull(imageMetadata41);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata10 = pcxImageParser8.getMetadata(byteSource9);
        org.apache.commons.imaging.ImageFormat imageFormat11 = null;
        boolean boolean12 = pcxImageParser8.canAcceptType(imageFormat11);
        org.apache.commons.imaging.ImageFormat imageFormat13 = null;
        boolean boolean14 = pcxImageParser8.canAcceptType(imageFormat13);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = pcxImageParser8.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension16 = pcxImageParser0.getImageSize(file7, pcxImagingParameters15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(imageMetadata10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters15);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.lang.String str16 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = null;
        byte[] byteArray22 = pcxImageParser19.getIccProfileBytes(byteSource20, pcxImagingParameters21);
        java.lang.String str23 = pcxImageParser19.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser19.getMetadata(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser19.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser29.getMetadata(byteSource34, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser19.getMetadata(byteSource28, pcxImagingParameters42);
        java.lang.String str44 = pcxImageParser19.getName();
        java.lang.String str45 = pcxImageParser19.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = null;
        byte[] byteArray50 = pcxImageParser47.getIccProfileBytes(byteSource48, pcxImagingParameters49);
        java.nio.ByteOrder byteOrder51 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat58 = null;
        boolean boolean59 = pcxImageParser53.canAcceptType(imageFormat58);
        java.lang.String str60 = pcxImageParser53.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser47.getMetadata(byteSource52, pcxImagingParameters61);
        byte[] byteArray63 = pcxImageParser19.getIccProfileBytes(byteSource46, pcxImagingParameters61);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension64 = pcxImageParser0.getImageSize(byteSource18, pcxImagingParameters61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "pcx" + "'", str16, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
        org.junit.Assert.assertNull(byteArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "Pcx-Custom" + "'", str23, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "pcx" + "'", str60, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertNull(byteArray63);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = pcxImageParser0.dumpImageFile(byteSource9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(formatCompliance8);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters5 = pcxImageParser0.getDefaultParameters();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder10 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser9.getMetadata(byteSource13);
        boolean boolean16 = pcxImageParser9.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat17 = null;
        boolean boolean18 = pcxImageParser9.canAcceptType(imageFormat17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser20.getMetadata(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser30.getMetadata(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser34.getMetadata(byteSource38);
        boolean boolean41 = pcxImageParser34.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser30.getMetadata(byteSource33, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser24.getIccProfileBytes(byteSource29, pcxImagingParameters42);
        java.lang.String str45 = pcxImageParser24.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser20.getMetadata(byteSource23, pcxImagingParameters46);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser9.getMetadata(byteSource19, pcxImagingParameters46);
        byte[] byteArray49 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser51.getMetadata(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser51.getMetadata(byteSource54);
        java.lang.String str56 = pcxImageParser51.getDefaultExtension();
        java.lang.String str57 = pcxImageParser51.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo60 = pcxImageParser0.getImageInfo(byteSource50, pcxImagingParameters59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "Pcx-Custom" + "'", str45, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(byteArray49);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "pcx" + "'", str56, "pcx");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "pcx" + "'", str57, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        java.io.File file31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser32.getMetadata(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser32.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser48 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = null;
        byte[] byteArray51 = pcxImageParser48.getIccProfileBytes(byteSource49, pcxImagingParameters50);
        java.lang.String str52 = pcxImageParser48.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser48.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser42.getMetadata(byteSource47, pcxImagingParameters53);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser32.getMetadata(byteSource41, pcxImagingParameters55);
        java.lang.String str57 = pcxImageParser32.getName();
        java.lang.String str58 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = null;
        byte[] byteArray63 = pcxImageParser60.getIccProfileBytes(byteSource61, pcxImagingParameters62);
        java.nio.ByteOrder byteOrder64 = pcxImageParser60.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser66 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder67 = pcxImageParser66.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance69 = pcxImageParser66.getFormatCompliance(byteSource68);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = pcxImageParser66.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat71 = null;
        boolean boolean72 = pcxImageParser66.canAcceptType(imageFormat71);
        java.lang.String str73 = pcxImageParser66.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser66.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser60.getMetadata(byteSource65, pcxImagingParameters74);
        byte[] byteArray76 = pcxImageParser32.getIccProfileBytes(byteSource59, pcxImagingParameters74);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray77 = pcxImageParser0.getIccProfileBytes(file31, pcxImagingParameters74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "pcx" + "'", str52, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Pcx-Custom" + "'", str57, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Pcx-Custom" + "'", str58, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNotNull(byteOrder67);
        org.junit.Assert.assertNull(formatCompliance69);
        org.junit.Assert.assertNotNull(pcxImagingParameters70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "pcx" + "'", str73, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertNull(imageMetadata75);
        org.junit.Assert.assertNull(byteArray76);
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str9 = pcxImageParser8.getName();
        java.nio.ByteOrder byteOrder10 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser8.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.ImageFormat imageFormat13 = null;
        boolean boolean14 = pcxImageParser8.canAcceptType(imageFormat13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser16.getMetadata(byteSource20);
        boolean boolean23 = pcxImageParser16.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = null;
        byte[] byteArray29 = pcxImageParser26.getIccProfileBytes(byteSource27, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser26.getName();
        java.lang.String str31 = pcxImageParser26.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser26.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat40 = null;
        boolean boolean41 = pcxImageParser35.canAcceptType(imageFormat40);
        java.lang.String str42 = pcxImageParser35.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser35.getDefaultParameters();
        byte[] byteArray44 = pcxImageParser26.getIccProfileBytes(byteSource34, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser16.getIccProfileBytes(byteSource25, pcxImagingParameters43);
        byte[] byteArray46 = pcxImageParser8.getIccProfileBytes(byteSource15, pcxImagingParameters43);
        byte[] byteArray47 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters43);
        java.lang.String str48 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "Pcx-Custom" + "'", str9, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder10);
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "pcx" + "'", str42, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "pcx" + "'", str48, "pcx");
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser0.getMetadata(byteSource24);
        java.io.File file26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = null;
        byte[] byteArray30 = pcxImageParser27.getIccProfileBytes(byteSource28, pcxImagingParameters29);
        java.lang.String str31 = pcxImageParser27.getName();
        java.lang.String str32 = pcxImageParser27.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser27.getMetadata(byteSource33, pcxImagingParameters38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser41.getMetadata(byteSource42);
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser45 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder46 = pcxImageParser45.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser45.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser45.getMetadata(byteSource49);
        boolean boolean52 = pcxImageParser45.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser45.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser41.getMetadata(byteSource44, pcxImagingParameters53);
        byte[] byteArray55 = pcxImageParser27.getIccProfileBytes(byteSource40, pcxImagingParameters53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance57 = pcxImageParser27.getFormatCompliance(byteSource56);
        java.nio.ByteOrder byteOrder58 = pcxImageParser27.getByteOrder();
        java.nio.ByteOrder byteOrder59 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat60 = null;
        boolean boolean61 = pcxImageParser27.canAcceptType(imageFormat60);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters62 = pcxImageParser27.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage63 = pcxImageParser0.getBufferedImage(file26, pcxImagingParameters62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "Pcx-Custom" + "'", str31, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNotNull(byteOrder46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNull(formatCompliance57);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNotNull(byteOrder59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters62);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str10 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance12 = pcxImageParser9.getFormatCompliance(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser9.getMetadata(byteSource13);
        java.nio.ByteOrder byteOrder15 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = null;
        byte[] byteArray18 = pcxImageParser9.getIccProfileBytes(byteSource16, pcxImagingParameters17);
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        byte[] byteArray23 = pcxImageParser20.getIccProfileBytes(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser20.getName();
        java.lang.String str25 = pcxImageParser20.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser20.getMetadata(byteSource26, pcxImagingParameters31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = null;
        byte[] byteArray37 = pcxImageParser34.getIccProfileBytes(byteSource35, pcxImagingParameters36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray39 = pcxImageParser20.getIccProfileBytes(byteSource33, pcxImagingParameters38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat46 = null;
        boolean boolean47 = pcxImageParser41.canAcceptType(imageFormat46);
        java.lang.String str48 = pcxImageParser41.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser41.getDefaultParameters();
        java.lang.String str50 = pcxImageParser41.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser20.getMetadata(byteSource40, pcxImagingParameters51);
        byte[] byteArray53 = pcxImageParser9.getIccProfileBytes(byteSource19, pcxImagingParameters51);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension54 = pcxImageParser0.getImageSize(byteSource8, pcxImagingParameters51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "Pcx-Custom" + "'", str10, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance12);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(byteArray18);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "pcx" + "'", str48, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "Pcx-Custom" + "'", str50, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(byteArray53);
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.ImageFormat imageFormat2 = null;
        boolean boolean3 = pcxImageParser0.canAcceptType(imageFormat2);
        org.apache.commons.imaging.ImageFormat imageFormat4 = null;
        boolean boolean5 = pcxImageParser0.canAcceptType(imageFormat4);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters6 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        java.lang.String str9 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder10 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = pcxImageParser0.dumpImageFile(byteSource11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "pcx" + "'", str9, "pcx");
        org.junit.Assert.assertNotNull(byteOrder10);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser6.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        java.lang.String str10 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource5, pcxImagingParameters11);
        java.io.File file13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        java.lang.String str18 = pcxImageParser14.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser14.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser14.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str25 = pcxImageParser24.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser24.getMetadata(byteSource26);
        org.apache.commons.imaging.ImageFormat imageFormat28 = null;
        boolean boolean29 = pcxImageParser24.canAcceptType(imageFormat28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str32 = pcxImageParser31.getName();
        java.nio.ByteOrder byteOrder33 = pcxImageParser31.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat34 = null;
        boolean boolean35 = pcxImageParser31.canAcceptType(imageFormat34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser46.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser50.getMetadata(byteSource54);
        boolean boolean57 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser46.getMetadata(byteSource49, pcxImagingParameters58);
        byte[] byteArray60 = pcxImageParser40.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata61 = pcxImageParser37.getMetadata(byteSource39, pcxImagingParameters58);
        byte[] byteArray62 = pcxImageParser31.getIccProfileBytes(byteSource36, pcxImagingParameters58);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata63 = pcxImageParser24.getMetadata(byteSource30, pcxImagingParameters58);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser14.getMetadata(byteSource23, pcxImagingParameters58);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension65 = pcxImageParser0.getImageSize(file13, pcxImagingParameters58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "pcx" + "'", str10, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(imageMetadata61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertNull(imageMetadata63);
        org.junit.Assert.assertNull(imageMetadata64);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str7 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser9.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser9.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder20 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance22 = pcxImageParser19.getFormatCompliance(byteSource21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser19.getMetadata(byteSource24, pcxImagingParameters30);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = pcxImageParser19.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser9.getMetadata(byteSource18, pcxImagingParameters32);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser0.getMetadata(byteSource8, pcxImagingParameters32);
        java.lang.String str35 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNotNull(byteOrder20);
        org.junit.Assert.assertNull(formatCompliance22);
        org.junit.Assert.assertNotNull(pcxImagingParameters23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "pcx" + "'", str29, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNotNull(pcxImagingParameters32);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "pcx" + "'", str35, "pcx");
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        java.lang.String str22 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder25 = pcxImageParser24.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser24.getFormatCompliance(byteSource26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser24.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource23, pcxImagingParameters28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser31.getDefaultParameters();
        byte[] byteArray36 = pcxImageParser17.getIccProfileBytes(byteSource30, pcxImagingParameters35);
        byte[] byteArray37 = pcxImageParser0.getIccProfileBytes(byteSource16, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        java.lang.String str43 = pcxImageParser39.getName();
        java.lang.String str44 = pcxImageParser39.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser46.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser39.getMetadata(byteSource45, pcxImagingParameters50);
        java.lang.String str52 = pcxImageParser39.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser39.getMetadata(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = null;
        byte[] byteArray59 = pcxImageParser56.getIccProfileBytes(byteSource57, pcxImagingParameters58);
        java.lang.String str60 = pcxImageParser56.getName();
        java.lang.String str61 = pcxImageParser56.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder64 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser63.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata68 = pcxImageParser56.getMetadata(byteSource62, pcxImagingParameters67);
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = null;
        byte[] byteArray73 = pcxImageParser70.getIccProfileBytes(byteSource71, pcxImagingParameters72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        byte[] byteArray75 = pcxImageParser56.getIccProfileBytes(byteSource69, pcxImagingParameters74);
        byte[] byteArray76 = pcxImageParser39.getIccProfileBytes(byteSource55, pcxImagingParameters74);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser0.getMetadata(byteSource38, pcxImagingParameters74);
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser79 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder80 = pcxImageParser79.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource81 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance82 = pcxImageParser79.getFormatCompliance(byteSource81);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = pcxImageParser79.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource84 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser85 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource86 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters87 = null;
        byte[] byteArray88 = pcxImageParser85.getIccProfileBytes(byteSource86, pcxImagingParameters87);
        java.lang.String str89 = pcxImageParser85.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters90 = pcxImageParser85.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata91 = pcxImageParser79.getMetadata(byteSource84, pcxImagingParameters90);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters92 = pcxImageParser79.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata93 = pcxImageParser0.getMetadata(byteSource78, pcxImagingParameters92);
        org.apache.commons.imaging.bytesource.ByteSource byteSource94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo95 = pcxImageParser0.getImageInfo(byteSource94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "Pcx-Custom" + "'", str22, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertNull(byteArray37);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "Pcx-Custom" + "'", str52, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "Pcx-Custom" + "'", str60, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "Pcx-Custom" + "'", str61, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
        org.junit.Assert.assertNull(imageMetadata68);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertNull(byteArray75);
        org.junit.Assert.assertNull(byteArray76);
        org.junit.Assert.assertNull(imageMetadata77);
        org.junit.Assert.assertNotNull(byteOrder80);
        org.junit.Assert.assertNull(formatCompliance82);
        org.junit.Assert.assertNotNull(pcxImagingParameters83);
        org.junit.Assert.assertNull(byteArray88);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "pcx" + "'", str89, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters90);
        org.junit.Assert.assertNull(imageMetadata91);
        org.junit.Assert.assertNotNull(pcxImagingParameters92);
        org.junit.Assert.assertNull(imageMetadata93);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance26 = pcxImageParser0.getFormatCompliance(byteSource25);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser0.getMetadata(byteSource28, pcxImagingParameters33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList36 = pcxImageParser0.getAllBufferedImages(byteSource35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(formatCompliance26);
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(imageMetadata34);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters32 = null;
        byte[] byteArray33 = pcxImageParser30.getIccProfileBytes(byteSource31, pcxImagingParameters32);
        java.lang.String str34 = pcxImageParser30.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser0.getMetadata(byteSource29, pcxImagingParameters35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser0.getMetadata(byteSource37);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = pcxImageParser0.getDefaultParameters();
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(byteArray33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "pcx" + "'", str34, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNotNull(pcxImagingParameters39);
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder25 = pcxImageParser0.getByteOrder();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "pcx" + "'", str24, "pcx");
        org.junit.Assert.assertNotNull(byteOrder25);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getName();
        java.io.File file6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(file6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.File file7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = null;
        byte[] byteArray11 = pcxImageParser8.getIccProfileBytes(byteSource9, pcxImagingParameters10);
        java.lang.String str12 = pcxImageParser8.getName();
        boolean boolean14 = pcxImageParser8.canAcceptExtension("hi!");
        java.lang.String str15 = pcxImageParser8.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        byte[] byteArray20 = pcxImageParser17.getIccProfileBytes(byteSource18, pcxImagingParameters19);
        java.lang.String str21 = pcxImageParser17.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser17.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser17.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser33.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser33.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser27.getMetadata(byteSource32, pcxImagingParameters38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser17.getMetadata(byteSource26, pcxImagingParameters40);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser8.getMetadata(byteSource16, pcxImagingParameters40);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension43 = pcxImageParser0.getImageSize(file7, pcxImagingParameters40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(byteArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "Pcx-Custom" + "'", str12, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "pcx" + "'", str37, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(imageMetadata42);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        boolean boolean11 = pcxImageParser0.canAcceptExtension("");
        java.io.File file12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters15 = null;
        byte[] byteArray16 = pcxImageParser13.getIccProfileBytes(byteSource14, pcxImagingParameters15);
        java.lang.String str17 = pcxImageParser13.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder21 = pcxImageParser20.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser20.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser20.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = null;
        byte[] byteArray29 = pcxImageParser26.getIccProfileBytes(byteSource27, pcxImagingParameters28);
        java.lang.String str30 = pcxImageParser26.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser20.getMetadata(byteSource25, pcxImagingParameters31);
        byte[] byteArray33 = pcxImageParser13.getIccProfileBytes(byteSource19, pcxImagingParameters31);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension34 = pcxImageParser0.getImageSize(file12, pcxImagingParameters31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(byteArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "pcx" + "'", str17, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(byteArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertNull(byteArray33);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        java.lang.String str17 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser0.getDefaultParameters();
        boolean boolean20 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.Class<?> wildcardClass21 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "Pcx-Custom" + "'", str17, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat10 = null;
        boolean boolean11 = pcxImageParser0.canAcceptType(imageFormat10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser0.getDefaultParameters();
        java.lang.String str13 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser0.getMetadata(byteSource14);
        java.lang.Class<?> wildcardClass16 = pcxImageParser0.getClass();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata9 = pcxImageParser4.getMetadata(byteSource8);
        boolean boolean11 = pcxImageParser4.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters12);
        org.apache.commons.imaging.ImageFormat imageFormat14 = null;
        boolean boolean15 = pcxImageParser0.canAcceptType(imageFormat14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata17 = pcxImageParser0.getMetadata(byteSource16);
        java.io.File file18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata20 = pcxImageParser0.getMetadata(file18, pcxImagingParameters19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(imageMetadata17);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.nio.ByteOrder byteOrder4 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray10 = pcxImageParser0.getIccProfileBytes(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertNotNull(byteOrder4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertNull(imageMetadata8);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        java.lang.String str5 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata7 = pcxImageParser0.getMetadata(byteSource6);
        boolean boolean9 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        boolean boolean17 = pcxImageParser11.canAcceptExtension("hi!");
        java.lang.String str18 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser20 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = null;
        byte[] byteArray23 = pcxImageParser20.getIccProfileBytes(byteSource21, pcxImagingParameters22);
        java.lang.String str24 = pcxImageParser20.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser20.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser20.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = null;
        byte[] byteArray39 = pcxImageParser36.getIccProfileBytes(byteSource37, pcxImagingParameters38);
        java.lang.String str40 = pcxImageParser36.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser30.getMetadata(byteSource35, pcxImagingParameters41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser20.getMetadata(byteSource29, pcxImagingParameters43);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser11.getMetadata(byteSource19, pcxImagingParameters43);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo46 = pcxImageParser0.getImageInfo(byteSource10, pcxImagingParameters43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "pcx" + "'", str5, "pcx");
        org.junit.Assert.assertNull(imageMetadata7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "Pcx-Custom" + "'", str18, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "Pcx-Custom" + "'", str24, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "pcx" + "'", str40, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(imageMetadata45);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        java.lang.String str7 = pcxImageParser0.getName();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.ImageFormat imageFormat25 = null;
        boolean boolean26 = pcxImageParser0.canAcceptType(imageFormat25);
        boolean boolean28 = pcxImageParser0.canAcceptExtension("pcx");
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(formatCompliance30);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder8 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser0.getFormatCompliance(byteSource9);
        java.lang.String str11 = pcxImageParser0.getName();
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        boolean boolean5 = pcxImageParser0.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser9.getMetadata(byteSource10);
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser13 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder14 = pcxImageParser13.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser13.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata18 = pcxImageParser13.getMetadata(byteSource17);
        boolean boolean20 = pcxImageParser13.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser13.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser9.getMetadata(byteSource12, pcxImagingParameters21);
        byte[] byteArray23 = pcxImageParser0.getIccProfileBytes(byteSource8, pcxImagingParameters21);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser0.getDefaultParameters();
        java.io.File file25 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean26 = pcxImageParser0.canAcceptExtension(file25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNull(imageMetadata11);
        org.junit.Assert.assertNotNull(byteOrder14);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(imageMetadata18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(byteArray23);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.util.List<java.awt.image.BufferedImage> bufferedImageList9 = pcxImageParser0.getAllBufferedImages(byteSource8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        java.nio.ByteOrder byteOrder32 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder35 = pcxImageParser34.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance37 = pcxImageParser34.getFormatCompliance(byteSource36);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters38 = pcxImageParser34.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata42 = pcxImageParser40.getMetadata(byteSource41);
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder45 = pcxImageParser44.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance47 = pcxImageParser44.getFormatCompliance(byteSource46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser44.getMetadata(byteSource48);
        boolean boolean51 = pcxImageParser44.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters52 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser40.getMetadata(byteSource43, pcxImagingParameters52);
        byte[] byteArray54 = pcxImageParser34.getIccProfileBytes(byteSource39, pcxImagingParameters52);
        java.lang.String str55 = pcxImageParser34.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters56 = pcxImageParser34.getDefaultParameters();
        byte[] byteArray57 = pcxImageParser0.getIccProfileBytes(byteSource33, pcxImagingParameters56);
        org.apache.commons.imaging.ImageFormat imageFormat58 = null;
        boolean boolean59 = pcxImageParser0.canAcceptType(imageFormat58);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser0.getDefaultParameters();
        java.io.File file61 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean62 = pcxImageParser0.canAcceptExtension(file61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNotNull(byteOrder32);
        org.junit.Assert.assertNotNull(byteOrder35);
        org.junit.Assert.assertNull(formatCompliance37);
        org.junit.Assert.assertNotNull(pcxImagingParameters38);
        org.junit.Assert.assertNull(imageMetadata42);
        org.junit.Assert.assertNotNull(byteOrder45);
        org.junit.Assert.assertNull(formatCompliance47);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNull(byteArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "Pcx-Custom" + "'", str55, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        boolean boolean9 = pcxImageParser0.canAcceptExtension("pcx");
        java.io.File file10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.common.ImageMetadata imageMetadata11 = pcxImageParser0.getMetadata(file10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        java.lang.String str7 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder8 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = null;
        byte[] byteArray13 = pcxImageParser10.getIccProfileBytes(byteSource11, pcxImagingParameters12);
        java.lang.String str14 = pcxImageParser10.getName();
        java.lang.String str15 = pcxImageParser10.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata22 = pcxImageParser10.getMetadata(byteSource16, pcxImagingParameters21);
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata26 = pcxImageParser24.getMetadata(byteSource25);
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder29 = pcxImageParser28.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser28.getFormatCompliance(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser28.getMetadata(byteSource32);
        boolean boolean35 = pcxImageParser28.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser28.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser24.getMetadata(byteSource27, pcxImagingParameters36);
        byte[] byteArray38 = pcxImageParser10.getIccProfileBytes(byteSource23, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser10.getFormatCompliance(byteSource39);
        java.nio.ByteOrder byteOrder41 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.lang.String str47 = pcxImageParser43.getName();
        java.lang.String str48 = pcxImageParser43.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser43.getMetadata(byteSource49, pcxImagingParameters54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser57.getMetadata(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser61 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder62 = pcxImageParser61.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance64 = pcxImageParser61.getFormatCompliance(byteSource63);
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser61.getMetadata(byteSource65);
        boolean boolean68 = pcxImageParser61.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = pcxImageParser61.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser57.getMetadata(byteSource60, pcxImagingParameters69);
        byte[] byteArray71 = pcxImageParser43.getIccProfileBytes(byteSource56, pcxImagingParameters69);
        byte[] byteArray72 = pcxImageParser10.getIccProfileBytes(byteSource42, pcxImagingParameters69);
        byte[] byteArray73 = pcxImageParser0.getIccProfileBytes(byteSource9, pcxImagingParameters69);
        java.nio.ByteOrder byteOrder74 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str76 = pcxImageParser0.dumpImageFile(byteSource75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "pcx" + "'", str7, "pcx");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(byteArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "Pcx-Custom" + "'", str14, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(imageMetadata22);
        org.junit.Assert.assertNull(imageMetadata26);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNotNull(byteOrder62);
        org.junit.Assert.assertNull(formatCompliance64);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters69);
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertNull(byteArray73);
        org.junit.Assert.assertNotNull(byteOrder74);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat3 = null;
        boolean boolean4 = pcxImageParser0.canAcceptType(imageFormat3);
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        java.io.File file7 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray8 = pcxImageParser0.getIccProfileBytes(file7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(imageMetadata6);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat32 = null;
        boolean boolean33 = pcxImageParser0.canAcceptType(imageFormat32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser0.getMetadata(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser37.getMetadata(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser47.getMetadata(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser51.getMetadata(byteSource55);
        boolean boolean58 = pcxImageParser51.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser47.getMetadata(byteSource50, pcxImagingParameters59);
        byte[] byteArray61 = pcxImageParser41.getIccProfileBytes(byteSource46, pcxImagingParameters59);
        java.lang.String str62 = pcxImageParser41.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser37.getMetadata(byteSource40, pcxImagingParameters63);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser67 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = null;
        byte[] byteArray70 = pcxImageParser67.getIccProfileBytes(byteSource68, pcxImagingParameters69);
        java.lang.String str71 = pcxImageParser67.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters72 = pcxImageParser67.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata73 = pcxImageParser37.getMetadata(byteSource66, pcxImagingParameters72);
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser37.getMetadata(byteSource74);
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser77 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser77.getMetadata(byteSource78);
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser77.getMetadata(byteSource80);
        java.lang.String str82 = pcxImageParser77.getDefaultExtension();
        java.lang.String str83 = pcxImageParser77.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser77.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata85 = pcxImageParser37.getMetadata(byteSource76, pcxImagingParameters84);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters86 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata87 = pcxImageParser0.getMetadata(byteSource36, pcxImagingParameters86);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(pcxImagingParameters45);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "Pcx-Custom" + "'", str62, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
        org.junit.Assert.assertNull(byteArray70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "pcx" + "'", str71, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters72);
        org.junit.Assert.assertNull(imageMetadata73);
        org.junit.Assert.assertNull(imageMetadata75);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "pcx" + "'", str82, "pcx");
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "pcx" + "'", str83, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertNull(imageMetadata85);
        org.junit.Assert.assertNotNull(pcxImagingParameters86);
        org.junit.Assert.assertNull(imageMetadata87);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = null;
        byte[] byteArray26 = pcxImageParser23.getIccProfileBytes(byteSource24, pcxImagingParameters25);
        java.lang.String str27 = pcxImageParser23.getName();
        java.lang.String str28 = pcxImageParser23.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser30 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder31 = pcxImageParser30.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser30.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser30.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser23.getMetadata(byteSource29, pcxImagingParameters34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata39 = pcxImageParser37.getMetadata(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser41 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder42 = pcxImageParser41.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser41.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser41.getMetadata(byteSource45);
        boolean boolean48 = pcxImageParser41.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters49 = pcxImageParser41.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata50 = pcxImageParser37.getMetadata(byteSource40, pcxImagingParameters49);
        byte[] byteArray51 = pcxImageParser23.getIccProfileBytes(byteSource36, pcxImagingParameters49);
        boolean boolean53 = pcxImageParser23.canAcceptExtension("pcx");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser23.getDefaultParameters();
        byte[] byteArray55 = pcxImageParser0.getIccProfileBytes(byteSource22, pcxImagingParameters54);
        java.io.File file56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str57 = pcxImageParser0.dumpImageFile(file56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "Pcx-Custom" + "'", str27, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "Pcx-Custom" + "'", str28, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNull(imageMetadata39);
        org.junit.Assert.assertNotNull(byteOrder42);
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters49);
        org.junit.Assert.assertNull(imageMetadata50);
        org.junit.Assert.assertNull(byteArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(byteArray55);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata4 = pcxImageParser0.getMetadata(byteSource3);
        java.io.File file5 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray6 = pcxImageParser0.getIccProfileBytes(file5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNull(imageMetadata4);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        java.lang.String str29 = pcxImageParser25.getName();
        java.lang.String str30 = pcxImageParser25.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser25.getMetadata(byteSource31, pcxImagingParameters36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser39.getMetadata(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder44 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance46 = pcxImageParser43.getFormatCompliance(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser43.getMetadata(byteSource47);
        boolean boolean50 = pcxImageParser43.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser43.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser39.getMetadata(byteSource42, pcxImagingParameters51);
        byte[] byteArray53 = pcxImageParser25.getIccProfileBytes(byteSource38, pcxImagingParameters51);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance55 = pcxImageParser25.getFormatCompliance(byteSource54);
        java.nio.ByteOrder byteOrder56 = pcxImageParser25.getByteOrder();
        java.nio.ByteOrder byteOrder57 = pcxImageParser25.getByteOrder();
        java.lang.String str58 = pcxImageParser25.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser25.getDefaultParameters();
        boolean boolean61 = pcxImageParser25.canAcceptExtension("pcx");
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder64 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser63.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser63.getDefaultParameters();
        java.lang.String str68 = pcxImageParser63.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata70 = pcxImageParser63.getMetadata(byteSource69);
        boolean boolean72 = pcxImageParser63.canAcceptExtension("");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters73 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata74 = pcxImageParser25.getMetadata(byteSource62, pcxImagingParameters73);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser0.getMetadata(byteSource24, pcxImagingParameters73);
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance77 = pcxImageParser0.getFormatCompliance(byteSource76);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "Pcx-Custom" + "'", str29, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "Pcx-Custom" + "'", str30, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNotNull(byteOrder44);
        org.junit.Assert.assertNull(formatCompliance46);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertNull(byteArray53);
        org.junit.Assert.assertNull(formatCompliance55);
        org.junit.Assert.assertNotNull(byteOrder56);
        org.junit.Assert.assertNotNull(byteOrder57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Pcx-Custom" + "'", str58, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "pcx" + "'", str68, "pcx");
        org.junit.Assert.assertNull(imageMetadata70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters73);
        org.junit.Assert.assertNull(imageMetadata74);
        org.junit.Assert.assertNull(imageMetadata75);
        org.junit.Assert.assertNull(formatCompliance77);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        java.lang.String str30 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser0.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser34 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata36 = pcxImageParser34.getMetadata(byteSource35);
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser38 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder39 = pcxImageParser38.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser38.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser38.getMetadata(byteSource42);
        boolean boolean45 = pcxImageParser38.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser38.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser34.getMetadata(byteSource37, pcxImagingParameters46);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser0.getMetadata(byteSource33, pcxImagingParameters46);
        java.lang.String str49 = pcxImageParser0.getDefaultExtension();
        java.io.PrintWriter printWriter50 = null;
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean52 = pcxImageParser0.dumpImageFile(printWriter50, byteSource51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "pcx" + "'", str30, "pcx");
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata36);
        org.junit.Assert.assertNotNull(byteOrder39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "pcx" + "'", str49, "pcx");
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.lang.String str11 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser7.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser7.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = null;
        byte[] byteArray26 = pcxImageParser23.getIccProfileBytes(byteSource24, pcxImagingParameters25);
        java.lang.String str27 = pcxImageParser23.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource22, pcxImagingParameters28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser7.getMetadata(byteSource16, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser7.getName();
        java.lang.String str33 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getName();
        java.lang.String str40 = pcxImageParser35.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser35.getMetadata(byteSource41, pcxImagingParameters46);
        java.lang.String str48 = pcxImageParser35.getName();
        org.apache.commons.imaging.ImageFormat imageFormat49 = null;
        boolean boolean50 = pcxImageParser35.canAcceptType(imageFormat49);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser35.getDefaultParameters();
        byte[] byteArray52 = pcxImageParser7.getIccProfileBytes(byteSource34, pcxImagingParameters51);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters51);
        java.io.File file54 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray55 = pcxImageParser0.getIccProfileBytes(file54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertNull(imageMetadata53);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        boolean boolean30 = pcxImageParser0.canAcceptExtension("pcx");
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata35 = pcxImageParser33.getMetadata(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder38 = pcxImageParser37.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance40 = pcxImageParser37.getFormatCompliance(byteSource39);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser43.getMetadata(byteSource44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder48 = pcxImageParser47.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance50 = pcxImageParser47.getFormatCompliance(byteSource49);
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata52 = pcxImageParser47.getMetadata(byteSource51);
        boolean boolean54 = pcxImageParser47.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser47.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser43.getMetadata(byteSource46, pcxImagingParameters55);
        byte[] byteArray57 = pcxImageParser37.getIccProfileBytes(byteSource42, pcxImagingParameters55);
        java.lang.String str58 = pcxImageParser37.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser37.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser33.getMetadata(byteSource36, pcxImagingParameters59);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser33.getDefaultParameters();
        byte[] byteArray62 = pcxImageParser0.getIccProfileBytes(byteSource32, pcxImagingParameters61);
        java.lang.String str63 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(imageMetadata35);
        org.junit.Assert.assertNotNull(byteOrder38);
        org.junit.Assert.assertNull(formatCompliance40);
        org.junit.Assert.assertNotNull(pcxImagingParameters41);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNotNull(byteOrder48);
        org.junit.Assert.assertNull(formatCompliance50);
        org.junit.Assert.assertNull(imageMetadata52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "Pcx-Custom" + "'", str58, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "pcx" + "'", str63, "pcx");
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        java.awt.image.BufferedImage bufferedImage20 = null;
        java.io.OutputStream outputStream21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser22.getMetadata(byteSource23);
        org.apache.commons.imaging.bytesource.ByteSource byteSource25 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser26 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder27 = pcxImageParser26.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser26.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser32.getMetadata(byteSource33);
        org.apache.commons.imaging.bytesource.ByteSource byteSource35 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser36 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder37 = pcxImageParser36.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser36.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser36.getMetadata(byteSource40);
        boolean boolean43 = pcxImageParser36.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser36.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser32.getMetadata(byteSource35, pcxImagingParameters44);
        byte[] byteArray46 = pcxImageParser26.getIccProfileBytes(byteSource31, pcxImagingParameters44);
        java.lang.String str47 = pcxImageParser26.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = pcxImageParser26.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser22.getMetadata(byteSource25, pcxImagingParameters48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser52 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = null;
        byte[] byteArray55 = pcxImageParser52.getIccProfileBytes(byteSource53, pcxImagingParameters54);
        java.lang.String str56 = pcxImageParser52.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser52.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser22.getMetadata(byteSource51, pcxImagingParameters57);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage20, outputStream21, pcxImagingParameters57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertNull(imageMetadata24);
        org.junit.Assert.assertNotNull(byteOrder27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertNotNull(byteOrder37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "pcx" + "'", str56, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getName();
        boolean boolean6 = pcxImageParser0.canAcceptExtension("hi!");
        java.lang.String str7 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder8 = pcxImageParser0.getByteOrder();
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = pcxImageParser0.dumpImageFile(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "Pcx-Custom" + "'", str7, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.io.File file21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder23 = pcxImageParser22.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance25 = pcxImageParser22.getFormatCompliance(byteSource24);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser28 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata30 = pcxImageParser28.getMetadata(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser32.getMetadata(byteSource36);
        boolean boolean39 = pcxImageParser32.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser28.getMetadata(byteSource31, pcxImagingParameters40);
        byte[] byteArray42 = pcxImageParser22.getIccProfileBytes(byteSource27, pcxImagingParameters40);
        java.lang.String str43 = pcxImageParser22.getName();
        java.lang.String str44 = pcxImageParser22.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser46.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat51 = null;
        boolean boolean52 = pcxImageParser46.canAcceptType(imageFormat51);
        java.lang.String str53 = pcxImageParser46.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser46.getDefaultParameters();
        byte[] byteArray55 = pcxImageParser22.getIccProfileBytes(byteSource45, pcxImagingParameters54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance57 = pcxImageParser22.getFormatCompliance(byteSource56);
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser22.getMetadata(byteSource58);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters60 = pcxImageParser22.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray61 = pcxImageParser0.getIccProfileBytes(file21, pcxImagingParameters60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertNotNull(byteOrder23);
        org.junit.Assert.assertNull(formatCompliance25);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "pcx" + "'", str44, "pcx");
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "pcx" + "'", str53, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNull(formatCompliance57);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNotNull(pcxImagingParameters60);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser8 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder9 = pcxImageParser8.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance11 = pcxImageParser8.getFormatCompliance(byteSource10);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters12 = pcxImageParser8.getDefaultParameters();
        java.lang.String str13 = pcxImageParser8.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser8.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser8.canAcceptExtension("");
        boolean boolean19 = pcxImageParser8.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters23 = null;
        byte[] byteArray24 = pcxImageParser21.getIccProfileBytes(byteSource22, pcxImagingParameters23);
        java.lang.String str25 = pcxImageParser21.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser21.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance29 = pcxImageParser21.getFormatCompliance(byteSource28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser21.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = null;
        byte[] byteArray35 = pcxImageParser32.getIccProfileBytes(byteSource33, pcxImagingParameters34);
        java.lang.String str36 = pcxImageParser32.getName();
        java.lang.String str37 = pcxImageParser32.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder40 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance42 = pcxImageParser39.getFormatCompliance(byteSource41);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser39.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser32.getMetadata(byteSource38, pcxImagingParameters43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser46.getMetadata(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser50.getMetadata(byteSource54);
        boolean boolean57 = pcxImageParser50.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser46.getMetadata(byteSource49, pcxImagingParameters58);
        byte[] byteArray60 = pcxImageParser32.getIccProfileBytes(byteSource45, pcxImagingParameters58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance62 = pcxImageParser32.getFormatCompliance(byteSource61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = null;
        byte[] byteArray67 = pcxImageParser64.getIccProfileBytes(byteSource65, pcxImagingParameters66);
        java.nio.ByteOrder byteOrder68 = pcxImageParser64.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser70 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder71 = pcxImageParser70.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance73 = pcxImageParser70.getFormatCompliance(byteSource72);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat75 = null;
        boolean boolean76 = pcxImageParser70.canAcceptType(imageFormat75);
        java.lang.String str77 = pcxImageParser70.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters78 = pcxImageParser70.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata79 = pcxImageParser64.getMetadata(byteSource69, pcxImagingParameters78);
        byte[] byteArray80 = pcxImageParser32.getIccProfileBytes(byteSource63, pcxImagingParameters78);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser21.getMetadata(byteSource31, pcxImagingParameters78);
        byte[] byteArray82 = pcxImageParser8.getIccProfileBytes(byteSource20, pcxImagingParameters78);
        byte[] byteArray83 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters78);
        org.apache.commons.imaging.bytesource.ByteSource byteSource84 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance85 = pcxImageParser0.getFormatCompliance(byteSource84);
        org.apache.commons.imaging.ImageFormat imageFormat86 = null;
        boolean boolean87 = pcxImageParser0.canAcceptType(imageFormat86);
        org.apache.commons.imaging.ImageFormat imageFormat88 = null;
        boolean boolean89 = pcxImageParser0.canAcceptType(imageFormat88);
        java.lang.String str90 = pcxImageParser0.getName();
        java.io.File file91 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str92 = pcxImageParser0.dumpImageFile(file91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertNull(formatCompliance11);
        org.junit.Assert.assertNotNull(pcxImagingParameters12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "pcx" + "'", str13, "pcx");
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(formatCompliance29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(byteArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "Pcx-Custom" + "'", str36, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder40);
        org.junit.Assert.assertNull(formatCompliance42);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters58);
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(byteArray60);
        org.junit.Assert.assertNull(formatCompliance62);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNotNull(byteOrder68);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNull(formatCompliance73);
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertEquals("'" + str77 + "' != '" + "pcx" + "'", str77, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters78);
        org.junit.Assert.assertNull(imageMetadata79);
        org.junit.Assert.assertNull(byteArray80);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNull(byteArray82);
        org.junit.Assert.assertNull(byteArray83);
        org.junit.Assert.assertNull(formatCompliance85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "Pcx-Custom" + "'", str90, "Pcx-Custom");
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        boolean boolean21 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance24 = pcxImageParser0.getFormatCompliance(byteSource23);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(formatCompliance24);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        java.lang.String str22 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata24 = pcxImageParser0.getMetadata(byteSource23);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "pcx" + "'", str22, "pcx");
        org.junit.Assert.assertNull(imageMetadata24);
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.nio.ByteOrder byteOrder6 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = null;
        byte[] byteArray9 = pcxImageParser0.getIccProfileBytes(byteSource7, pcxImagingParameters8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = null;
        byte[] byteArray28 = pcxImageParser25.getIccProfileBytes(byteSource26, pcxImagingParameters27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        byte[] byteArray30 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        java.lang.String str41 = pcxImageParser32.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata43 = pcxImageParser11.getMetadata(byteSource31, pcxImagingParameters42);
        byte[] byteArray44 = pcxImageParser0.getIccProfileBytes(byteSource10, pcxImagingParameters42);
        org.apache.commons.imaging.ImageFormat imageFormat45 = null;
        boolean boolean46 = pcxImageParser0.canAcceptType(imageFormat45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser0.getMetadata(byteSource47, pcxImagingParameters48);
        java.io.File file50 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray51 = pcxImageParser0.getIccProfileBytes(file50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertNotNull(byteOrder6);
        org.junit.Assert.assertNull(byteArray9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(byteArray30);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters42);
        org.junit.Assert.assertNull(imageMetadata43);
        org.junit.Assert.assertNull(byteArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(imageMetadata49);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder7 = pcxImageParser6.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance9 = pcxImageParser6.getFormatCompliance(byteSource8);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters10 = pcxImageParser6.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata14 = pcxImageParser12.getMetadata(byteSource13);
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser16 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder17 = pcxImageParser16.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance19 = pcxImageParser16.getFormatCompliance(byteSource18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata21 = pcxImageParser16.getMetadata(byteSource20);
        boolean boolean23 = pcxImageParser16.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = pcxImageParser16.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata25 = pcxImageParser12.getMetadata(byteSource15, pcxImagingParameters24);
        byte[] byteArray26 = pcxImageParser6.getIccProfileBytes(byteSource11, pcxImagingParameters24);
        java.lang.String str27 = pcxImageParser6.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser6.getMetadata(byteSource28);
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser6.getMetadata(byteSource30);
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance33 = pcxImageParser6.getFormatCompliance(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getName();
        java.lang.String str40 = pcxImageParser35.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser35.getMetadata(byteSource41, pcxImagingParameters46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser49.getMetadata(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser53.getMetadata(byteSource57);
        boolean boolean60 = pcxImageParser53.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser49.getMetadata(byteSource52, pcxImagingParameters61);
        byte[] byteArray63 = pcxImageParser35.getIccProfileBytes(byteSource48, pcxImagingParameters61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance65 = pcxImageParser35.getFormatCompliance(byteSource64);
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser67 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters69 = null;
        byte[] byteArray70 = pcxImageParser67.getIccProfileBytes(byteSource68, pcxImagingParameters69);
        java.nio.ByteOrder byteOrder71 = pcxImageParser67.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser73 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder74 = pcxImageParser73.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance76 = pcxImageParser73.getFormatCompliance(byteSource75);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters77 = pcxImageParser73.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat78 = null;
        boolean boolean79 = pcxImageParser73.canAcceptType(imageFormat78);
        java.lang.String str80 = pcxImageParser73.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters81 = pcxImageParser73.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata82 = pcxImageParser67.getMetadata(byteSource72, pcxImagingParameters81);
        byte[] byteArray83 = pcxImageParser35.getIccProfileBytes(byteSource66, pcxImagingParameters81);
        byte[] byteArray84 = pcxImageParser6.getIccProfileBytes(byteSource34, pcxImagingParameters81);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo85 = pcxImageParser0.getImageInfo(byteSource5, pcxImagingParameters81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertNotNull(byteOrder7);
        org.junit.Assert.assertNull(formatCompliance9);
        org.junit.Assert.assertNotNull(pcxImagingParameters10);
        org.junit.Assert.assertNull(imageMetadata14);
        org.junit.Assert.assertNotNull(byteOrder17);
        org.junit.Assert.assertNull(formatCompliance19);
        org.junit.Assert.assertNull(imageMetadata21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters24);
        org.junit.Assert.assertNull(imageMetadata25);
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertNull(formatCompliance33);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertNull(formatCompliance65);
        org.junit.Assert.assertNull(byteArray70);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNotNull(byteOrder74);
        org.junit.Assert.assertNull(formatCompliance76);
        org.junit.Assert.assertNotNull(pcxImagingParameters77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "pcx" + "'", str80, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters81);
        org.junit.Assert.assertNull(imageMetadata82);
        org.junit.Assert.assertNull(byteArray83);
        org.junit.Assert.assertNull(byteArray84);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        boolean boolean14 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance16 = pcxImageParser0.getFormatCompliance(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance18 = pcxImageParser0.getFormatCompliance(byteSource17);
        org.apache.commons.imaging.ImageFormat imageFormat19 = null;
        boolean boolean20 = pcxImageParser0.canAcceptType(imageFormat19);
        org.apache.commons.imaging.bytesource.ByteSource byteSource21 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser22 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters24 = null;
        byte[] byteArray25 = pcxImageParser22.getIccProfileBytes(byteSource23, pcxImagingParameters24);
        java.lang.String str26 = pcxImageParser22.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters27 = pcxImageParser22.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata41 = pcxImageParser29.getMetadata(byteSource34, pcxImagingParameters40);
        byte[] byteArray42 = pcxImageParser22.getIccProfileBytes(byteSource28, pcxImagingParameters40);
        byte[] byteArray43 = pcxImageParser0.getIccProfileBytes(byteSource21, pcxImagingParameters40);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser0.getDefaultParameters();
        java.lang.String str45 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(formatCompliance16);
        org.junit.Assert.assertNull(formatCompliance18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(byteArray25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "pcx" + "'", str26, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNotNull(pcxImagingParameters33);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(imageMetadata41);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "pcx" + "'", str45, "pcx");
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        java.lang.String str6 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters7 = pcxImageParser0.getDefaultParameters();
        java.io.File file8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser9 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = null;
        byte[] byteArray12 = pcxImageParser9.getIccProfileBytes(byteSource10, pcxImagingParameters11);
        java.lang.String str13 = pcxImageParser9.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser9.getFormatCompliance(byteSource14);
        java.nio.ByteOrder byteOrder16 = pcxImageParser9.getByteOrder();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters17 = pcxImageParser9.getDefaultParameters();
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray18 = pcxImageParser0.getIccProfileBytes(file8, pcxImagingParameters17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "Pcx-Custom" + "'", str6, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters7);
        org.junit.Assert.assertNull(byteArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(byteOrder16);
        org.junit.Assert.assertNotNull(pcxImagingParameters17);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata6 = pcxImageParser0.getMetadata(byteSource5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance8 = pcxImageParser0.getFormatCompliance(byteSource7);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser11 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters13 = null;
        byte[] byteArray14 = pcxImageParser11.getIccProfileBytes(byteSource12, pcxImagingParameters13);
        java.lang.String str15 = pcxImageParser11.getName();
        java.lang.String str16 = pcxImageParser11.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser11.getMetadata(byteSource17, pcxImagingParameters22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser25.getMetadata(byteSource26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource28 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser29 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder30 = pcxImageParser29.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance32 = pcxImageParser29.getFormatCompliance(byteSource31);
        org.apache.commons.imaging.bytesource.ByteSource byteSource33 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata34 = pcxImageParser29.getMetadata(byteSource33);
        boolean boolean36 = pcxImageParser29.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = pcxImageParser29.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata38 = pcxImageParser25.getMetadata(byteSource28, pcxImagingParameters37);
        byte[] byteArray39 = pcxImageParser11.getIccProfileBytes(byteSource24, pcxImagingParameters37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance41 = pcxImageParser11.getFormatCompliance(byteSource40);
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser43 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters45 = null;
        byte[] byteArray46 = pcxImageParser43.getIccProfileBytes(byteSource44, pcxImagingParameters45);
        java.nio.ByteOrder byteOrder47 = pcxImageParser43.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat54 = null;
        boolean boolean55 = pcxImageParser49.canAcceptType(imageFormat54);
        java.lang.String str56 = pcxImageParser49.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser43.getMetadata(byteSource48, pcxImagingParameters57);
        byte[] byteArray59 = pcxImageParser11.getIccProfileBytes(byteSource42, pcxImagingParameters57);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser0.getMetadata(byteSource10, pcxImagingParameters57);
        org.apache.commons.imaging.ImageFormat imageFormat61 = null;
        boolean boolean62 = pcxImageParser0.canAcceptType(imageFormat61);
        org.apache.commons.imaging.bytesource.ByteSource byteSource63 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser64 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str65 = pcxImageParser64.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance67 = pcxImageParser64.getFormatCompliance(byteSource66);
        boolean boolean69 = pcxImageParser64.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance71 = pcxImageParser64.getFormatCompliance(byteSource70);
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser73 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser73.getMetadata(byteSource74);
        org.apache.commons.imaging.bytesource.ByteSource byteSource76 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser77 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder78 = pcxImageParser77.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance80 = pcxImageParser77.getFormatCompliance(byteSource79);
        org.apache.commons.imaging.bytesource.ByteSource byteSource81 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata82 = pcxImageParser77.getMetadata(byteSource81);
        boolean boolean84 = pcxImageParser77.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters85 = pcxImageParser77.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata86 = pcxImageParser73.getMetadata(byteSource76, pcxImagingParameters85);
        byte[] byteArray87 = pcxImageParser64.getIccProfileBytes(byteSource72, pcxImagingParameters85);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters88 = pcxImageParser64.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata89 = pcxImageParser0.getMetadata(byteSource63, pcxImagingParameters88);
        org.apache.commons.imaging.bytesource.ByteSource byteSource90 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo91 = pcxImageParser0.getImageInfo(byteSource90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata6);
        org.junit.Assert.assertNull(formatCompliance8);
        org.junit.Assert.assertNotNull(pcxImagingParameters9);
        org.junit.Assert.assertNull(byteArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "Pcx-Custom" + "'", str15, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "Pcx-Custom" + "'", str16, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder30);
        org.junit.Assert.assertNull(formatCompliance32);
        org.junit.Assert.assertNull(imageMetadata34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters37);
        org.junit.Assert.assertNull(imageMetadata38);
        org.junit.Assert.assertNull(byteArray39);
        org.junit.Assert.assertNull(formatCompliance41);
        org.junit.Assert.assertNull(byteArray46);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "pcx" + "'", str56, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Pcx-Custom" + "'", str65, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(formatCompliance71);
        org.junit.Assert.assertNull(imageMetadata75);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNull(formatCompliance80);
        org.junit.Assert.assertNull(imageMetadata82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters85);
        org.junit.Assert.assertNull(imageMetadata86);
        org.junit.Assert.assertNull(byteArray87);
        org.junit.Assert.assertNotNull(pcxImagingParameters88);
        org.junit.Assert.assertNull(imageMetadata89);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        boolean boolean29 = pcxImageParser0.canAcceptExtension("hi!");
        java.io.File file30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters33 = null;
        byte[] byteArray34 = pcxImageParser31.getIccProfileBytes(byteSource32, pcxImagingParameters33);
        java.lang.String str35 = pcxImageParser31.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata37 = pcxImageParser31.getMetadata(byteSource36);
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance39 = pcxImageParser31.getFormatCompliance(byteSource38);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser31.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = null;
        byte[] byteArray45 = pcxImageParser42.getIccProfileBytes(byteSource43, pcxImagingParameters44);
        java.lang.String str46 = pcxImageParser42.getName();
        java.lang.String str47 = pcxImageParser42.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder50 = pcxImageParser49.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource51 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance52 = pcxImageParser49.getFormatCompliance(byteSource51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters53 = pcxImageParser49.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata54 = pcxImageParser42.getMetadata(byteSource48, pcxImagingParameters53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser56.getMetadata(byteSource57);
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser60 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder61 = pcxImageParser60.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance63 = pcxImageParser60.getFormatCompliance(byteSource62);
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser60.getMetadata(byteSource64);
        boolean boolean67 = pcxImageParser60.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters68 = pcxImageParser60.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata69 = pcxImageParser56.getMetadata(byteSource59, pcxImagingParameters68);
        byte[] byteArray70 = pcxImageParser42.getIccProfileBytes(byteSource55, pcxImagingParameters68);
        org.apache.commons.imaging.bytesource.ByteSource byteSource71 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance72 = pcxImageParser42.getFormatCompliance(byteSource71);
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser74 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = null;
        byte[] byteArray77 = pcxImageParser74.getIccProfileBytes(byteSource75, pcxImagingParameters76);
        java.nio.ByteOrder byteOrder78 = pcxImageParser74.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource79 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser80 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder81 = pcxImageParser80.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance83 = pcxImageParser80.getFormatCompliance(byteSource82);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser80.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat85 = null;
        boolean boolean86 = pcxImageParser80.canAcceptType(imageFormat85);
        java.lang.String str87 = pcxImageParser80.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters88 = pcxImageParser80.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata89 = pcxImageParser74.getMetadata(byteSource79, pcxImagingParameters88);
        byte[] byteArray90 = pcxImageParser42.getIccProfileBytes(byteSource73, pcxImagingParameters88);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata91 = pcxImageParser31.getMetadata(byteSource41, pcxImagingParameters88);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo92 = pcxImageParser0.getImageInfo(file30, pcxImagingParameters88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(byteArray34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata37);
        org.junit.Assert.assertNull(formatCompliance39);
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "Pcx-Custom" + "'", str47, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder50);
        org.junit.Assert.assertNull(formatCompliance52);
        org.junit.Assert.assertNotNull(pcxImagingParameters53);
        org.junit.Assert.assertNull(imageMetadata54);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertNotNull(byteOrder61);
        org.junit.Assert.assertNull(formatCompliance63);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters68);
        org.junit.Assert.assertNull(imageMetadata69);
        org.junit.Assert.assertNull(byteArray70);
        org.junit.Assert.assertNull(formatCompliance72);
        org.junit.Assert.assertNull(byteArray77);
        org.junit.Assert.assertNotNull(byteOrder78);
        org.junit.Assert.assertNotNull(byteOrder81);
        org.junit.Assert.assertNull(formatCompliance83);
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "pcx" + "'", str87, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters88);
        org.junit.Assert.assertNull(imageMetadata89);
        org.junit.Assert.assertNull(byteArray90);
        org.junit.Assert.assertNull(imageMetadata91);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser33.getName();
        java.lang.String str38 = pcxImageParser33.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser33.getMetadata(byteSource39, pcxImagingParameters44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser47.getMetadata(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser51.getMetadata(byteSource55);
        boolean boolean58 = pcxImageParser51.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser47.getMetadata(byteSource50, pcxImagingParameters59);
        byte[] byteArray61 = pcxImageParser33.getIccProfileBytes(byteSource46, pcxImagingParameters59);
        byte[] byteArray62 = pcxImageParser0.getIccProfileBytes(byteSource32, pcxImagingParameters59);
        java.lang.String str63 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser65 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = null;
        byte[] byteArray68 = pcxImageParser65.getIccProfileBytes(byteSource66, pcxImagingParameters67);
        java.nio.ByteOrder byteOrder69 = pcxImageParser65.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder72 = pcxImageParser71.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance74 = pcxImageParser71.getFormatCompliance(byteSource73);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser71.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat76 = null;
        boolean boolean77 = pcxImageParser71.canAcceptType(imageFormat76);
        java.lang.String str78 = pcxImageParser71.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser71.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser65.getMetadata(byteSource70, pcxImagingParameters79);
        byte[] byteArray81 = pcxImageParser0.getIccProfileBytes(byteSource64, pcxImagingParameters79);
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser83 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder84 = pcxImageParser83.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource85 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance86 = pcxImageParser83.getFormatCompliance(byteSource85);
        org.apache.commons.imaging.bytesource.ByteSource byteSource87 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata88 = pcxImageParser83.getMetadata(byteSource87);
        boolean boolean90 = pcxImageParser83.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat91 = null;
        boolean boolean92 = pcxImageParser83.canAcceptType(imageFormat91);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters93 = pcxImageParser83.getDefaultParameters();
        byte[] byteArray94 = pcxImageParser0.getIccProfileBytes(byteSource82, pcxImagingParameters93);
        boolean boolean96 = pcxImageParser0.canAcceptExtension("hi!");
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "pcx" + "'", str63, "pcx");
        org.junit.Assert.assertNull(byteArray68);
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNotNull(byteOrder72);
        org.junit.Assert.assertNull(formatCompliance74);
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "pcx" + "'", str78, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertNull(byteArray81);
        org.junit.Assert.assertNotNull(byteOrder84);
        org.junit.Assert.assertNull(formatCompliance86);
        org.junit.Assert.assertNull(imageMetadata88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters93);
        org.junit.Assert.assertNull(byteArray94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str1 = pcxImageParser0.getName();
        java.nio.ByteOrder byteOrder2 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance4 = pcxImageParser0.getFormatCompliance(byteSource3);
        org.apache.commons.imaging.ImageFormat imageFormat5 = null;
        boolean boolean6 = pcxImageParser0.canAcceptType(imageFormat5);
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser0.getMetadata(byteSource7);
        java.io.File file9 = null;
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray10 = pcxImageParser0.getIccProfileBytes(file9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "Pcx-Custom" + "'", str1, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder2);
        org.junit.Assert.assertNull(formatCompliance4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(imageMetadata8);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat23 = null;
        boolean boolean24 = pcxImageParser0.canAcceptType(imageFormat23);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance27 = pcxImageParser0.getFormatCompliance(byteSource26);
        boolean boolean29 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        java.nio.ByteOrder byteOrder30 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str32 = pcxImageParser0.dumpImageFile(byteSource31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "Pcx-Custom" + "'", str21, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters25);
        org.junit.Assert.assertNull(formatCompliance27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(byteOrder30);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser32 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder33 = pcxImageParser32.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance35 = pcxImageParser32.getFormatCompliance(byteSource34);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters36 = pcxImageParser32.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat37 = null;
        boolean boolean38 = pcxImageParser32.canAcceptType(imageFormat37);
        java.lang.String str39 = pcxImageParser32.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters40 = pcxImageParser32.getDefaultParameters();
        byte[] byteArray41 = pcxImageParser0.getIccProfileBytes(byteSource31, pcxImagingParameters40);
        java.lang.String str42 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser44 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = null;
        byte[] byteArray47 = pcxImageParser44.getIccProfileBytes(byteSource45, pcxImagingParameters46);
        java.lang.String str48 = pcxImageParser44.getName();
        java.lang.String str49 = pcxImageParser44.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance51 = pcxImageParser44.getFormatCompliance(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters57 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat58 = null;
        boolean boolean59 = pcxImageParser53.canAcceptType(imageFormat58);
        java.lang.String str60 = pcxImageParser53.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser53.getDefaultParameters();
        byte[] byteArray62 = pcxImageParser44.getIccProfileBytes(byteSource52, pcxImagingParameters61);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser44.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata65 = pcxImageParser44.getMetadata(byteSource64);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters66 = pcxImageParser44.getDefaultParameters();
        byte[] byteArray67 = pcxImageParser0.getIccProfileBytes(byteSource43, pcxImagingParameters66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo69 = pcxImageParser0.getImageInfo(byteSource68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(byteOrder33);
        org.junit.Assert.assertNull(formatCompliance35);
        org.junit.Assert.assertNotNull(pcxImagingParameters36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "pcx" + "'", str39, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters40);
        org.junit.Assert.assertNull(byteArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "Pcx-Custom" + "'", str49, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance51);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNotNull(pcxImagingParameters57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "pcx" + "'", str60, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNull(imageMetadata65);
        org.junit.Assert.assertNotNull(pcxImagingParameters66);
        org.junit.Assert.assertNull(byteArray67);
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser0.getMetadata(byteSource32);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters34 = pcxImageParser0.getDefaultParameters();
        java.lang.String str35 = pcxImageParser0.getName();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(pcxImagingParameters34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "Pcx-Custom" + "'", str35, "Pcx-Custom");
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getDefaultExtension();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource8 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters9 = null;
        byte[] byteArray10 = pcxImageParser7.getIccProfileBytes(byteSource8, pcxImagingParameters9);
        java.lang.String str11 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata13 = pcxImageParser7.getMetadata(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser7.getFormatCompliance(byteSource14);
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser17 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder18 = pcxImageParser17.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource19 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance20 = pcxImageParser17.getFormatCompliance(byteSource19);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters21 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser23 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters25 = null;
        byte[] byteArray26 = pcxImageParser23.getIccProfileBytes(byteSource24, pcxImagingParameters25);
        java.lang.String str27 = pcxImageParser23.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters28 = pcxImageParser23.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata29 = pcxImageParser17.getMetadata(byteSource22, pcxImagingParameters28);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters30 = pcxImageParser17.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata31 = pcxImageParser7.getMetadata(byteSource16, pcxImagingParameters30);
        java.lang.String str32 = pcxImageParser7.getName();
        java.lang.String str33 = pcxImageParser7.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getName();
        java.lang.String str40 = pcxImageParser35.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser35.getMetadata(byteSource41, pcxImagingParameters46);
        java.lang.String str48 = pcxImageParser35.getName();
        org.apache.commons.imaging.ImageFormat imageFormat49 = null;
        boolean boolean50 = pcxImageParser35.canAcceptType(imageFormat49);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters51 = pcxImageParser35.getDefaultParameters();
        byte[] byteArray52 = pcxImageParser7.getIccProfileBytes(byteSource34, pcxImagingParameters51);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata53 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters51);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = pcxImageParser0.getDefaultParameters();
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "pcx" + "'", str4, "pcx");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "Pcx-Custom" + "'", str11, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata13);
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertNotNull(byteOrder18);
        org.junit.Assert.assertNull(formatCompliance20);
        org.junit.Assert.assertNotNull(pcxImagingParameters21);
        org.junit.Assert.assertNull(byteArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "pcx" + "'", str27, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters28);
        org.junit.Assert.assertNull(imageMetadata29);
        org.junit.Assert.assertNotNull(pcxImagingParameters30);
        org.junit.Assert.assertNull(imageMetadata31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "Pcx-Custom" + "'", str33, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "Pcx-Custom" + "'", str48, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters51);
        org.junit.Assert.assertNull(byteArray52);
        org.junit.Assert.assertNull(imageMetadata53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNotNull(pcxImagingParameters55);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata2 = pcxImageParser0.getMetadata(byteSource1);
        org.apache.commons.imaging.bytesource.ByteSource byteSource3 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser4 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder5 = pcxImageParser4.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser4.getFormatCompliance(byteSource6);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters8 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource11 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser10.getMetadata(byteSource11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder15 = pcxImageParser14.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource16 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance17 = pcxImageParser14.getFormatCompliance(byteSource16);
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser14.getMetadata(byteSource18);
        boolean boolean21 = pcxImageParser14.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters22 = pcxImageParser14.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser10.getMetadata(byteSource13, pcxImagingParameters22);
        byte[] byteArray24 = pcxImageParser4.getIccProfileBytes(byteSource9, pcxImagingParameters22);
        java.lang.String str25 = pcxImageParser4.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser4.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser0.getMetadata(byteSource3, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder28 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.ImageFormat imageFormat29 = null;
        boolean boolean30 = pcxImageParser0.canAcceptType(imageFormat29);
        java.lang.String str31 = pcxImageParser0.getDefaultExtension();
        java.io.File file32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser33.getDefaultExtension();
        java.lang.String str38 = pcxImageParser33.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters42 = null;
        byte[] byteArray43 = pcxImageParser40.getIccProfileBytes(byteSource41, pcxImagingParameters42);
        java.lang.String str44 = pcxImageParser40.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata46 = pcxImageParser40.getMetadata(byteSource45);
        org.apache.commons.imaging.bytesource.ByteSource byteSource47 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance48 = pcxImageParser40.getFormatCompliance(byteSource47);
        org.apache.commons.imaging.bytesource.ByteSource byteSource49 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser50 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder51 = pcxImageParser50.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance53 = pcxImageParser50.getFormatCompliance(byteSource52);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser56 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters58 = null;
        byte[] byteArray59 = pcxImageParser56.getIccProfileBytes(byteSource57, pcxImagingParameters58);
        java.lang.String str60 = pcxImageParser56.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser56.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser50.getMetadata(byteSource55, pcxImagingParameters61);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters63 = pcxImageParser50.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata64 = pcxImageParser40.getMetadata(byteSource49, pcxImagingParameters63);
        java.lang.String str65 = pcxImageParser40.getName();
        java.lang.String str66 = pcxImageParser40.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource67 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser68 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource69 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters70 = null;
        byte[] byteArray71 = pcxImageParser68.getIccProfileBytes(byteSource69, pcxImagingParameters70);
        java.lang.String str72 = pcxImageParser68.getName();
        java.lang.String str73 = pcxImageParser68.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource74 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser75 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder76 = pcxImageParser75.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance78 = pcxImageParser75.getFormatCompliance(byteSource77);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser75.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser68.getMetadata(byteSource74, pcxImagingParameters79);
        java.lang.String str81 = pcxImageParser68.getName();
        org.apache.commons.imaging.ImageFormat imageFormat82 = null;
        boolean boolean83 = pcxImageParser68.canAcceptType(imageFormat82);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters84 = pcxImageParser68.getDefaultParameters();
        byte[] byteArray85 = pcxImageParser40.getIccProfileBytes(byteSource67, pcxImagingParameters84);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata86 = pcxImageParser33.getMetadata(byteSource39, pcxImagingParameters84);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.image.BufferedImage bufferedImage87 = pcxImageParser0.getBufferedImage(file32, pcxImagingParameters84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(imageMetadata2);
        org.junit.Assert.assertNotNull(byteOrder5);
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertNotNull(pcxImagingParameters8);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNotNull(byteOrder15);
        org.junit.Assert.assertNull(formatCompliance17);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters22);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNull(byteArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "pcx" + "'", str31, "pcx");
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "pcx" + "'", str37, "pcx");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata46);
        org.junit.Assert.assertNull(formatCompliance48);
        org.junit.Assert.assertNotNull(byteOrder51);
        org.junit.Assert.assertNull(formatCompliance53);
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(byteArray59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "pcx" + "'", str60, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertNotNull(pcxImagingParameters63);
        org.junit.Assert.assertNull(imageMetadata64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "Pcx-Custom" + "'", str65, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "Pcx-Custom" + "'", str66, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "Pcx-Custom" + "'", str72, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "Pcx-Custom" + "'", str73, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder76);
        org.junit.Assert.assertNull(formatCompliance78);
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "Pcx-Custom" + "'", str81, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters84);
        org.junit.Assert.assertNull(byteArray85);
        org.junit.Assert.assertNull(imageMetadata86);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.ImageFormat imageFormat1 = null;
        boolean boolean2 = pcxImageParser0.canAcceptType(imageFormat1);
        java.lang.String str3 = pcxImageParser0.getDefaultExtension();
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "pcx" + "'", str3, "pcx");
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.bytesource.ByteSource byteSource4 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata5 = pcxImageParser0.getMetadata(byteSource4);
        boolean boolean7 = pcxImageParser0.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat8 = null;
        boolean boolean9 = pcxImageParser0.canAcceptType(imageFormat8);
        org.apache.commons.imaging.bytesource.ByteSource byteSource10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo11 = pcxImageParser0.getImageInfo(byteSource10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNull(imageMetadata5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance6 = pcxImageParser0.getFormatCompliance(byteSource5);
        org.apache.commons.imaging.ImageFormat imageFormat7 = null;
        boolean boolean8 = pcxImageParser0.canAcceptType(imageFormat7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.ImageFormat imageFormat18 = null;
        boolean boolean19 = pcxImageParser10.canAcceptType(imageFormat18);
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser21 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser21.getMetadata(byteSource22);
        org.apache.commons.imaging.bytesource.ByteSource byteSource24 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser25 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder26 = pcxImageParser25.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource27 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance28 = pcxImageParser25.getFormatCompliance(byteSource27);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters29 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser31 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata33 = pcxImageParser31.getMetadata(byteSource32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder36 = pcxImageParser35.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource37 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance38 = pcxImageParser35.getFormatCompliance(byteSource37);
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata40 = pcxImageParser35.getMetadata(byteSource39);
        boolean boolean42 = pcxImageParser35.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters43 = pcxImageParser35.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata44 = pcxImageParser31.getMetadata(byteSource34, pcxImagingParameters43);
        byte[] byteArray45 = pcxImageParser25.getIccProfileBytes(byteSource30, pcxImagingParameters43);
        java.lang.String str46 = pcxImageParser25.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters47 = pcxImageParser25.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata48 = pcxImageParser21.getMetadata(byteSource24, pcxImagingParameters47);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser10.getMetadata(byteSource20, pcxImagingParameters47);
        byte[] byteArray50 = pcxImageParser0.getIccProfileBytes(byteSource9, pcxImagingParameters47);
        java.lang.String str51 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters55 = null;
        byte[] byteArray56 = pcxImageParser53.getIccProfileBytes(byteSource54, pcxImagingParameters55);
        java.lang.String str57 = pcxImageParser53.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource58 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata59 = pcxImageParser53.getMetadata(byteSource58);
        org.apache.commons.imaging.bytesource.ByteSource byteSource60 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance61 = pcxImageParser53.getFormatCompliance(byteSource60);
        org.apache.commons.imaging.bytesource.ByteSource byteSource62 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser63 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder64 = pcxImageParser63.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource65 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance66 = pcxImageParser63.getFormatCompliance(byteSource65);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser69 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters71 = null;
        byte[] byteArray72 = pcxImageParser69.getIccProfileBytes(byteSource70, pcxImagingParameters71);
        java.lang.String str73 = pcxImageParser69.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters74 = pcxImageParser69.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata75 = pcxImageParser63.getMetadata(byteSource68, pcxImagingParameters74);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters76 = pcxImageParser63.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata77 = pcxImageParser53.getMetadata(byteSource62, pcxImagingParameters76);
        java.lang.String str78 = pcxImageParser53.getName();
        java.lang.String str79 = pcxImageParser53.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser81 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters83 = null;
        byte[] byteArray84 = pcxImageParser81.getIccProfileBytes(byteSource82, pcxImagingParameters83);
        java.nio.ByteOrder byteOrder85 = pcxImageParser81.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource86 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser87 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder88 = pcxImageParser87.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource89 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance90 = pcxImageParser87.getFormatCompliance(byteSource89);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters91 = pcxImageParser87.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat92 = null;
        boolean boolean93 = pcxImageParser87.canAcceptType(imageFormat92);
        java.lang.String str94 = pcxImageParser87.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters95 = pcxImageParser87.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata96 = pcxImageParser81.getMetadata(byteSource86, pcxImagingParameters95);
        byte[] byteArray97 = pcxImageParser53.getIccProfileBytes(byteSource80, pcxImagingParameters95);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.commons.imaging.ImageInfo imageInfo98 = pcxImageParser0.getImageInfo(byteSource52, pcxImagingParameters95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertNotNull(byteOrder26);
        org.junit.Assert.assertNull(formatCompliance28);
        org.junit.Assert.assertNotNull(pcxImagingParameters29);
        org.junit.Assert.assertNull(imageMetadata33);
        org.junit.Assert.assertNotNull(byteOrder36);
        org.junit.Assert.assertNull(formatCompliance38);
        org.junit.Assert.assertNull(imageMetadata40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters43);
        org.junit.Assert.assertNull(imageMetadata44);
        org.junit.Assert.assertNull(byteArray45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "Pcx-Custom" + "'", str46, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters47);
        org.junit.Assert.assertNull(imageMetadata48);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNull(byteArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "pcx" + "'", str51, "pcx");
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "Pcx-Custom" + "'", str57, "Pcx-Custom");
        org.junit.Assert.assertNull(imageMetadata59);
        org.junit.Assert.assertNull(formatCompliance61);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertNull(formatCompliance66);
        org.junit.Assert.assertNotNull(pcxImagingParameters67);
        org.junit.Assert.assertNull(byteArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "pcx" + "'", str73, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters74);
        org.junit.Assert.assertNull(imageMetadata75);
        org.junit.Assert.assertNotNull(pcxImagingParameters76);
        org.junit.Assert.assertNull(imageMetadata77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "Pcx-Custom" + "'", str78, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "Pcx-Custom" + "'", str79, "Pcx-Custom");
        org.junit.Assert.assertNull(byteArray84);
        org.junit.Assert.assertNotNull(byteOrder85);
        org.junit.Assert.assertNotNull(byteOrder88);
        org.junit.Assert.assertNull(formatCompliance90);
        org.junit.Assert.assertNotNull(pcxImagingParameters91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "pcx" + "'", str94, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters95);
        org.junit.Assert.assertNull(imageMetadata96);
        org.junit.Assert.assertNull(byteArray97);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters16 = null;
        byte[] byteArray17 = pcxImageParser14.getIccProfileBytes(byteSource15, pcxImagingParameters16);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser14.getDefaultParameters();
        byte[] byteArray19 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters18);
        boolean boolean21 = pcxImageParser0.canAcceptExtension("hi!");
        java.nio.ByteOrder byteOrder22 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource23 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser24 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str25 = pcxImageParser24.getName();
        org.apache.commons.imaging.ImageFormat imageFormat26 = null;
        boolean boolean27 = pcxImageParser24.canAcceptType(imageFormat26);
        org.apache.commons.imaging.ImageFormat imageFormat28 = null;
        boolean boolean29 = pcxImageParser24.canAcceptType(imageFormat28);
        boolean boolean31 = pcxImageParser24.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.ImageFormat imageFormat32 = null;
        boolean boolean33 = pcxImageParser24.canAcceptType(imageFormat32);
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser35 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters37 = null;
        byte[] byteArray38 = pcxImageParser35.getIccProfileBytes(byteSource36, pcxImagingParameters37);
        java.lang.String str39 = pcxImageParser35.getName();
        java.lang.String str40 = pcxImageParser35.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource41 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser42 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder43 = pcxImageParser42.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource44 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance45 = pcxImageParser42.getFormatCompliance(byteSource44);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters46 = pcxImageParser42.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata47 = pcxImageParser35.getMetadata(byteSource41, pcxImagingParameters46);
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser49 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser49.getMetadata(byteSource50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder54 = pcxImageParser53.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance56 = pcxImageParser53.getFormatCompliance(byteSource55);
        org.apache.commons.imaging.bytesource.ByteSource byteSource57 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser53.getMetadata(byteSource57);
        boolean boolean60 = pcxImageParser53.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters61 = pcxImageParser53.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser49.getMetadata(byteSource52, pcxImagingParameters61);
        byte[] byteArray63 = pcxImageParser35.getIccProfileBytes(byteSource48, pcxImagingParameters61);
        java.nio.ByteOrder byteOrder64 = pcxImageParser35.getByteOrder();
        java.lang.String str65 = pcxImageParser35.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance67 = pcxImageParser35.getFormatCompliance(byteSource66);
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser69 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata71 = pcxImageParser69.getMetadata(byteSource70);
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser73 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder74 = pcxImageParser73.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance76 = pcxImageParser73.getFormatCompliance(byteSource75);
        org.apache.commons.imaging.bytesource.ByteSource byteSource77 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata78 = pcxImageParser73.getMetadata(byteSource77);
        boolean boolean80 = pcxImageParser73.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters81 = pcxImageParser73.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata82 = pcxImageParser69.getMetadata(byteSource72, pcxImagingParameters81);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata83 = pcxImageParser35.getMetadata(byteSource68, pcxImagingParameters81);
        byte[] byteArray84 = pcxImageParser24.getIccProfileBytes(byteSource34, pcxImagingParameters81);
        // The following exception was thrown during execution in test generation
        try {
            java.awt.Dimension dimension85 = pcxImageParser0.getImageSize(byteSource23, pcxImagingParameters81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(byteArray17);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(byteArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(byteOrder22);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "Pcx-Custom" + "'", str25, "Pcx-Custom");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(byteArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "Pcx-Custom" + "'", str39, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "Pcx-Custom" + "'", str40, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder43);
        org.junit.Assert.assertNull(formatCompliance45);
        org.junit.Assert.assertNotNull(pcxImagingParameters46);
        org.junit.Assert.assertNull(imageMetadata47);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNotNull(byteOrder54);
        org.junit.Assert.assertNull(formatCompliance56);
        org.junit.Assert.assertNull(imageMetadata58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters61);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertNull(byteArray63);
        org.junit.Assert.assertNotNull(byteOrder64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "pcx" + "'", str65, "pcx");
        org.junit.Assert.assertNull(formatCompliance67);
        org.junit.Assert.assertNull(imageMetadata71);
        org.junit.Assert.assertNotNull(byteOrder74);
        org.junit.Assert.assertNull(formatCompliance76);
        org.junit.Assert.assertNull(imageMetadata78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters81);
        org.junit.Assert.assertNull(imageMetadata82);
        org.junit.Assert.assertNull(imageMetadata83);
        org.junit.Assert.assertNull(byteArray84);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser0.getFormatCompliance(byteSource29);
        java.nio.ByteOrder byteOrder31 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource32 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser33 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource34 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = null;
        byte[] byteArray36 = pcxImageParser33.getIccProfileBytes(byteSource34, pcxImagingParameters35);
        java.lang.String str37 = pcxImageParser33.getName();
        java.lang.String str38 = pcxImageParser33.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource39 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser40 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder41 = pcxImageParser40.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource42 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance43 = pcxImageParser40.getFormatCompliance(byteSource42);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters44 = pcxImageParser40.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata45 = pcxImageParser33.getMetadata(byteSource39, pcxImagingParameters44);
        org.apache.commons.imaging.bytesource.ByteSource byteSource46 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser47 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata49 = pcxImageParser47.getMetadata(byteSource48);
        org.apache.commons.imaging.bytesource.ByteSource byteSource50 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser51 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder52 = pcxImageParser51.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource53 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance54 = pcxImageParser51.getFormatCompliance(byteSource53);
        org.apache.commons.imaging.bytesource.ByteSource byteSource55 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata56 = pcxImageParser51.getMetadata(byteSource55);
        boolean boolean58 = pcxImageParser51.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters59 = pcxImageParser51.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata60 = pcxImageParser47.getMetadata(byteSource50, pcxImagingParameters59);
        byte[] byteArray61 = pcxImageParser33.getIccProfileBytes(byteSource46, pcxImagingParameters59);
        byte[] byteArray62 = pcxImageParser0.getIccProfileBytes(byteSource32, pcxImagingParameters59);
        java.lang.String str63 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource64 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser65 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource66 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters67 = null;
        byte[] byteArray68 = pcxImageParser65.getIccProfileBytes(byteSource66, pcxImagingParameters67);
        java.nio.ByteOrder byteOrder69 = pcxImageParser65.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource70 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser71 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder72 = pcxImageParser71.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource73 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance74 = pcxImageParser71.getFormatCompliance(byteSource73);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters75 = pcxImageParser71.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat76 = null;
        boolean boolean77 = pcxImageParser71.canAcceptType(imageFormat76);
        java.lang.String str78 = pcxImageParser71.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters79 = pcxImageParser71.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata80 = pcxImageParser65.getMetadata(byteSource70, pcxImagingParameters79);
        byte[] byteArray81 = pcxImageParser0.getIccProfileBytes(byteSource64, pcxImagingParameters79);
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance83 = pcxImageParser0.getFormatCompliance(byteSource82);
        java.io.File file84 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str85 = pcxImageParser0.dumpImageFile(file84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(byteOrder31);
        org.junit.Assert.assertNull(byteArray36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "Pcx-Custom" + "'", str37, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "Pcx-Custom" + "'", str38, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder41);
        org.junit.Assert.assertNull(formatCompliance43);
        org.junit.Assert.assertNotNull(pcxImagingParameters44);
        org.junit.Assert.assertNull(imageMetadata45);
        org.junit.Assert.assertNull(imageMetadata49);
        org.junit.Assert.assertNotNull(byteOrder52);
        org.junit.Assert.assertNull(formatCompliance54);
        org.junit.Assert.assertNull(imageMetadata56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters59);
        org.junit.Assert.assertNull(imageMetadata60);
        org.junit.Assert.assertNull(byteArray61);
        org.junit.Assert.assertNull(byteArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "pcx" + "'", str63, "pcx");
        org.junit.Assert.assertNull(byteArray68);
        org.junit.Assert.assertNotNull(byteOrder69);
        org.junit.Assert.assertNotNull(byteOrder72);
        org.junit.Assert.assertNull(formatCompliance74);
        org.junit.Assert.assertNotNull(pcxImagingParameters75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "pcx" + "'", str78, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters79);
        org.junit.Assert.assertNull(imageMetadata80);
        org.junit.Assert.assertNull(byteArray81);
        org.junit.Assert.assertNull(formatCompliance83);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser7 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder8 = pcxImageParser7.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance10 = pcxImageParser7.getFormatCompliance(byteSource9);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters11 = pcxImageParser7.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata12 = pcxImageParser0.getMetadata(byteSource6, pcxImagingParameters11);
        org.apache.commons.imaging.bytesource.ByteSource byteSource13 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser14 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource15 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata16 = pcxImageParser14.getMetadata(byteSource15);
        org.apache.commons.imaging.bytesource.ByteSource byteSource17 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser18 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder19 = pcxImageParser18.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource20 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance21 = pcxImageParser18.getFormatCompliance(byteSource20);
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser18.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser18.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters26 = pcxImageParser18.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata27 = pcxImageParser14.getMetadata(byteSource17, pcxImagingParameters26);
        byte[] byteArray28 = pcxImageParser0.getIccProfileBytes(byteSource13, pcxImagingParameters26);
        java.nio.ByteOrder byteOrder29 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource30 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance31 = pcxImageParser0.getFormatCompliance(byteSource30);
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder8);
        org.junit.Assert.assertNull(formatCompliance10);
        org.junit.Assert.assertNotNull(pcxImagingParameters11);
        org.junit.Assert.assertNull(imageMetadata12);
        org.junit.Assert.assertNull(imageMetadata16);
        org.junit.Assert.assertNotNull(byteOrder19);
        org.junit.Assert.assertNull(formatCompliance21);
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters26);
        org.junit.Assert.assertNull(imageMetadata27);
        org.junit.Assert.assertNull(byteArray28);
        org.junit.Assert.assertNotNull(byteOrder29);
        org.junit.Assert.assertNull(formatCompliance31);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder1 = pcxImageParser0.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource2 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance3 = pcxImageParser0.getFormatCompliance(byteSource2);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters4 = pcxImageParser0.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource5 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser6 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource7 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata8 = pcxImageParser6.getMetadata(byteSource7);
        org.apache.commons.imaging.bytesource.ByteSource byteSource9 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser10 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder11 = pcxImageParser10.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource12 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance13 = pcxImageParser10.getFormatCompliance(byteSource12);
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata15 = pcxImageParser10.getMetadata(byteSource14);
        boolean boolean17 = pcxImageParser10.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters18 = pcxImageParser10.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata19 = pcxImageParser6.getMetadata(byteSource9, pcxImagingParameters18);
        byte[] byteArray20 = pcxImageParser0.getIccProfileBytes(byteSource5, pcxImagingParameters18);
        java.lang.String str21 = pcxImageParser0.getDefaultExtension();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata23 = pcxImageParser0.getMetadata(byteSource22);
        boolean boolean25 = pcxImageParser0.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters31 = pcxImageParser27.getDefaultParameters();
        java.lang.String str32 = pcxImageParser27.getName();
        java.lang.String str33 = pcxImageParser27.getDefaultExtension();
        org.apache.commons.imaging.ImageFormat imageFormat34 = null;
        boolean boolean35 = pcxImageParser27.canAcceptType(imageFormat34);
        boolean boolean37 = pcxImageParser27.canAcceptExtension("");
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser39 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource40 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters41 = null;
        byte[] byteArray42 = pcxImageParser39.getIccProfileBytes(byteSource40, pcxImagingParameters41);
        java.lang.String str43 = pcxImageParser39.getName();
        java.lang.String str44 = pcxImageParser39.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser46.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata51 = pcxImageParser39.getMetadata(byteSource45, pcxImagingParameters50);
        org.apache.commons.imaging.bytesource.ByteSource byteSource52 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser53 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource54 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata55 = pcxImageParser53.getMetadata(byteSource54);
        org.apache.commons.imaging.bytesource.ByteSource byteSource56 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser57 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder58 = pcxImageParser57.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource59 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance60 = pcxImageParser57.getFormatCompliance(byteSource59);
        org.apache.commons.imaging.bytesource.ByteSource byteSource61 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata62 = pcxImageParser57.getMetadata(byteSource61);
        boolean boolean64 = pcxImageParser57.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters65 = pcxImageParser57.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata66 = pcxImageParser53.getMetadata(byteSource56, pcxImagingParameters65);
        byte[] byteArray67 = pcxImageParser39.getIccProfileBytes(byteSource52, pcxImagingParameters65);
        org.apache.commons.imaging.bytesource.ByteSource byteSource68 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance69 = pcxImageParser39.getFormatCompliance(byteSource68);
        java.nio.ByteOrder byteOrder70 = pcxImageParser39.getByteOrder();
        java.nio.ByteOrder byteOrder71 = pcxImageParser39.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource72 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser73 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder74 = pcxImageParser73.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource75 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance76 = pcxImageParser73.getFormatCompliance(byteSource75);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters77 = pcxImageParser73.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource78 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser79 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource80 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata81 = pcxImageParser79.getMetadata(byteSource80);
        org.apache.commons.imaging.bytesource.ByteSource byteSource82 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser83 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder84 = pcxImageParser83.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource85 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance86 = pcxImageParser83.getFormatCompliance(byteSource85);
        org.apache.commons.imaging.bytesource.ByteSource byteSource87 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata88 = pcxImageParser83.getMetadata(byteSource87);
        boolean boolean90 = pcxImageParser83.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters91 = pcxImageParser83.getDefaultParameters();
        org.apache.commons.imaging.common.ImageMetadata imageMetadata92 = pcxImageParser79.getMetadata(byteSource82, pcxImagingParameters91);
        byte[] byteArray93 = pcxImageParser73.getIccProfileBytes(byteSource78, pcxImagingParameters91);
        java.lang.String str94 = pcxImageParser73.getName();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters95 = pcxImageParser73.getDefaultParameters();
        byte[] byteArray96 = pcxImageParser39.getIccProfileBytes(byteSource72, pcxImagingParameters95);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata97 = pcxImageParser27.getMetadata(byteSource38, pcxImagingParameters95);
        byte[] byteArray98 = pcxImageParser0.getIccProfileBytes(byteSource26, pcxImagingParameters95);
        org.junit.Assert.assertNotNull(byteOrder1);
        org.junit.Assert.assertNull(formatCompliance3);
        org.junit.Assert.assertNotNull(pcxImagingParameters4);
        org.junit.Assert.assertNull(imageMetadata8);
        org.junit.Assert.assertNotNull(byteOrder11);
        org.junit.Assert.assertNull(formatCompliance13);
        org.junit.Assert.assertNull(imageMetadata15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters18);
        org.junit.Assert.assertNull(imageMetadata19);
        org.junit.Assert.assertNull(byteArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "pcx" + "'", str21, "pcx");
        org.junit.Assert.assertNull(imageMetadata23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNotNull(pcxImagingParameters31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "Pcx-Custom" + "'", str32, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "pcx" + "'", str33, "pcx");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(byteArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "Pcx-Custom" + "'", str43, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "Pcx-Custom" + "'", str44, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertNull(imageMetadata51);
        org.junit.Assert.assertNull(imageMetadata55);
        org.junit.Assert.assertNotNull(byteOrder58);
        org.junit.Assert.assertNull(formatCompliance60);
        org.junit.Assert.assertNull(imageMetadata62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters65);
        org.junit.Assert.assertNull(imageMetadata66);
        org.junit.Assert.assertNull(byteArray67);
        org.junit.Assert.assertNull(formatCompliance69);
        org.junit.Assert.assertNotNull(byteOrder70);
        org.junit.Assert.assertNotNull(byteOrder71);
        org.junit.Assert.assertNotNull(byteOrder74);
        org.junit.Assert.assertNull(formatCompliance76);
        org.junit.Assert.assertNotNull(pcxImagingParameters77);
        org.junit.Assert.assertNull(imageMetadata81);
        org.junit.Assert.assertNotNull(byteOrder84);
        org.junit.Assert.assertNull(formatCompliance86);
        org.junit.Assert.assertNull(imageMetadata88);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters91);
        org.junit.Assert.assertNull(imageMetadata92);
        org.junit.Assert.assertNull(byteArray93);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "Pcx-Custom" + "'", str94, "Pcx-Custom");
        org.junit.Assert.assertNotNull(pcxImagingParameters95);
        org.junit.Assert.assertNull(byteArray96);
        org.junit.Assert.assertNull(imageMetadata97);
        org.junit.Assert.assertNull(byteArray98);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser0 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource1 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters2 = null;
        byte[] byteArray3 = pcxImageParser0.getIccProfileBytes(byteSource1, pcxImagingParameters2);
        java.lang.String str4 = pcxImageParser0.getName();
        java.lang.String str5 = pcxImageParser0.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource6 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance7 = pcxImageParser0.getFormatCompliance(byteSource6);
        java.lang.String str8 = pcxImageParser0.getDefaultExtension();
        java.nio.ByteOrder byteOrder9 = pcxImageParser0.getByteOrder();
        java.awt.image.BufferedImage bufferedImage10 = null;
        java.io.OutputStream outputStream11 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser12 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str13 = pcxImageParser12.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource14 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance15 = pcxImageParser12.getFormatCompliance(byteSource14);
        boolean boolean17 = pcxImageParser12.canAcceptExtension("Pcx-Custom");
        org.apache.commons.imaging.bytesource.ByteSource byteSource18 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser19 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.lang.String str20 = pcxImageParser19.getName();
        java.nio.ByteOrder byteOrder21 = pcxImageParser19.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource22 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance23 = pcxImageParser19.getFormatCompliance(byteSource22);
        org.apache.commons.imaging.ImageFormat imageFormat24 = null;
        boolean boolean25 = pcxImageParser19.canAcceptType(imageFormat24);
        org.apache.commons.imaging.bytesource.ByteSource byteSource26 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser27 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder28 = pcxImageParser27.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource29 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance30 = pcxImageParser27.getFormatCompliance(byteSource29);
        org.apache.commons.imaging.bytesource.ByteSource byteSource31 = null;
        org.apache.commons.imaging.common.ImageMetadata imageMetadata32 = pcxImageParser27.getMetadata(byteSource31);
        boolean boolean34 = pcxImageParser27.canAcceptExtension("hi!");
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters35 = pcxImageParser27.getDefaultParameters();
        org.apache.commons.imaging.bytesource.ByteSource byteSource36 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser37 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        org.apache.commons.imaging.bytesource.ByteSource byteSource38 = null;
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters39 = null;
        byte[] byteArray40 = pcxImageParser37.getIccProfileBytes(byteSource38, pcxImagingParameters39);
        java.lang.String str41 = pcxImageParser37.getName();
        java.lang.String str42 = pcxImageParser37.getName();
        org.apache.commons.imaging.bytesource.ByteSource byteSource43 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance44 = pcxImageParser37.getFormatCompliance(byteSource43);
        org.apache.commons.imaging.bytesource.ByteSource byteSource45 = null;
        org.apache.commons.imaging.formats.pcx.PcxImageParser pcxImageParser46 = new org.apache.commons.imaging.formats.pcx.PcxImageParser();
        java.nio.ByteOrder byteOrder47 = pcxImageParser46.getByteOrder();
        org.apache.commons.imaging.bytesource.ByteSource byteSource48 = null;
        org.apache.commons.imaging.FormatCompliance formatCompliance49 = pcxImageParser46.getFormatCompliance(byteSource48);
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters50 = pcxImageParser46.getDefaultParameters();
        org.apache.commons.imaging.ImageFormat imageFormat51 = null;
        boolean boolean52 = pcxImageParser46.canAcceptType(imageFormat51);
        java.lang.String str53 = pcxImageParser46.getDefaultExtension();
        org.apache.commons.imaging.formats.pcx.PcxImagingParameters pcxImagingParameters54 = pcxImageParser46.getDefaultParameters();
        byte[] byteArray55 = pcxImageParser37.getIccProfileBytes(byteSource45, pcxImagingParameters54);
        byte[] byteArray56 = pcxImageParser27.getIccProfileBytes(byteSource36, pcxImagingParameters54);
        byte[] byteArray57 = pcxImageParser19.getIccProfileBytes(byteSource26, pcxImagingParameters54);
        org.apache.commons.imaging.common.ImageMetadata imageMetadata58 = pcxImageParser12.getMetadata(byteSource18, pcxImagingParameters54);
        // The following exception was thrown during execution in test generation
        try {
            pcxImageParser0.writeImage(bufferedImage10, outputStream11, pcxImagingParameters54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(byteArray3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "Pcx-Custom" + "'", str4, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "Pcx-Custom" + "'", str5, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "pcx" + "'", str8, "pcx");
        org.junit.Assert.assertNotNull(byteOrder9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "Pcx-Custom" + "'", str13, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "Pcx-Custom" + "'", str20, "Pcx-Custom");
        org.junit.Assert.assertNotNull(byteOrder21);
        org.junit.Assert.assertNull(formatCompliance23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(byteOrder28);
        org.junit.Assert.assertNull(formatCompliance30);
        org.junit.Assert.assertNull(imageMetadata32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(pcxImagingParameters35);
        org.junit.Assert.assertNull(byteArray40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "Pcx-Custom" + "'", str41, "Pcx-Custom");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "Pcx-Custom" + "'", str42, "Pcx-Custom");
        org.junit.Assert.assertNull(formatCompliance44);
        org.junit.Assert.assertNotNull(byteOrder47);
        org.junit.Assert.assertNull(formatCompliance49);
        org.junit.Assert.assertNotNull(pcxImagingParameters50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "pcx" + "'", str53, "pcx");
        org.junit.Assert.assertNotNull(pcxImagingParameters54);
        org.junit.Assert.assertNull(byteArray55);
        org.junit.Assert.assertNull(byteArray56);
        org.junit.Assert.assertNull(byteArray57);
        org.junit.Assert.assertNull(imageMetadata58);
    }
}

